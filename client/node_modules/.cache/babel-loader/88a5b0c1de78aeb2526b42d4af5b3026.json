{"ast":null,"code":"import _classCallCheck from \"/Users/liufam/Documents/colors-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liufam/Documents/colors-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liufam/Documents/colors-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liufam/Documents/colors-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/liufam/Documents/colors-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liufam/Documents/colors-app/src/components/ColorsList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions'; // change return numberes to percent\n\nvar toPercent = function toPercent(num) {\n  return Math.floor(num * 100) + '%';\n};\n\nvar ColorsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ColorsList, _Component);\n\n  function ColorsList() {\n    _classCallCheck(this, ColorsList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ColorsList).apply(this, arguments));\n  }\n\n  _createClass(ColorsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.analyzeImage('this.props.url');\n    } // Make API call each time the URL changes\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.url !== prevProps.url) {\n        this.props.analyzeImage(this.props.url);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // let sortColors = this.props.colors.sort((a,b) => b.value - a.value);\n      // const ColorsList = sortColors.map(color =>\n      //   <div\n      //     key={color.raw_hex}\n      //     className=\"color-wrapper\">\n      //     <div\n      //       className=\"color-square\"\n      //       style={{\"backgroundColor\": color.raw_hex}}>\n      //     </div>\n      //     <p>{color.raw_hex}</p>\n      //     <p>{toPercent(color.value)}</p>\n      //   </div>\n      // );\n      console.log(this.props.error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, ColorsList);\n    }\n  }]);\n\n  return ColorsList;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    colors: state.colors,\n    url: state.url.url,\n    error: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage: analyzeImage\n})(ColorsList);","map":{"version":3,"sources":["/Users/liufam/Documents/colors-app/src/components/ColorsList.js"],"names":["React","Component","connect","analyzeImage","toPercent","num","Math","floor","ColorsList","props","prevProps","url","console","log","error","mapStateToProps","state","colors"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B,C,CAEA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AACvB,SAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAC,GAAf,IAAsB,GAA7B;AACD,CAFD;;IAIMG,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWN,YAAX,CAAwB,gBAAxB;AACD,K,CACD;;;;uCACmBO,S,EAAW;AAC5B,UAAI,KAAKD,KAAL,CAAWE,GAAX,KAAmBD,SAAS,CAACC,GAAjC,EAAuC;AACrC,aAAKF,KAAL,CAAWN,YAAX,CAAwB,KAAKM,KAAL,CAAWE,GAAnC;AACD;;AAAA;AACF;;;6BAEQ;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAvB;AACA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,UADH,CADA;AAKD;;;;EA/BsBP,S;;AAgCxB;;AAED,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELN,IAAAA,GAAG,EAAEK,KAAK,CAACL,GAAN,CAAUA,GAFV;AAGLG,IAAAA,KAAK,EAAEE;AAHF,GAAP;AAKD,CAND;;AAQA,eAAed,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CK,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\n\n// change return numberes to percent\nconst toPercent = num => {\n  return Math.floor(num*100) + '%';\n}\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    this.props.analyzeImage('this.props.url');\n  }\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.analyzeImage(this.props.url);\n    };\n  }\n\n  render() {\n    // let sortColors = this.props.colors.sort((a,b) => b.value - a.value);\n    // const ColorsList = sortColors.map(color =>\n    //   <div\n    //     key={color.raw_hex}\n    //     className=\"color-wrapper\">\n    //     <div\n    //       className=\"color-square\"\n    //       style={{\"backgroundColor\": color.raw_hex}}>\n    //     </div>\n    //     <p>{color.raw_hex}</p>\n    //     <p>{toPercent(color.value)}</p>\n    //   </div>\n    // );\n    console.log(this.props.error);\n    return(\n    <div>\n      {ColorsList}\n    </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors,\n    url: state.url.url,\n    error: state\n  };\n};\n\nexport default connect(mapStateToProps, { analyzeImage })(ColorsList);\n"]},"metadata":{},"sourceType":"module"}