{"ast":null,"code":"var _jsxFileName = \"/Users/liufam/Documents/colors-app/src/ColorsList.js\";\nimport React from 'react'; // change return numberes to percent\n\nvar toPercent = function toPercent(num) {\n  return Math.floor(num * 100) + '%';\n};\n\nvar ColorsList = function ColorsList(props) {\n  var sortColors = props.colors.sort(function (a, b) {\n    return b.value - a.value;\n  });\n  var ColorsList = sortColors.map(function (color) {\n    return React.createElement(\"div\", {\n      key: color.raw_hex,\n      className: \"color-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: props.colorApiCall,\n      className: \"color-square\",\n      style: {\n        \"backgroundColor\": color.raw_hex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, color.raw_hex), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, toPercent(color.value)));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, ColorsList);\n};\n\nexport default ColorsList;","map":{"version":3,"sources":["/Users/liufam/Documents/colors-app/src/ColorsList.js"],"names":["React","toPercent","num","Math","floor","ColorsList","props","sortColors","colors","sort","a","b","value","map","color","raw_hex","colorApiCall"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AACvB,SAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAC,GAAf,IAAsB,GAA7B;AACD,CAFD;;AAIA,IAAMG,UAAU,GAAG,oBAACC,KAAD,EAAW;AAC5B,MAAIC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,UAACC,CAAD,EAAGC,CAAH;AAAA,WAASA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAArB;AAAA,GAAlB,CAAjB;AACA,MAAMP,UAAU,GAAGE,UAAU,CAACM,GAAX,CAAe,UAAAC,KAAK;AAAA,WACrC;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,OADb;AAEE,MAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AACE,MAAA,OAAO,EAAET,KAAK,CAACU,YADjB;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,KAAK,EAAE;AAAC,2BAAmBF,KAAK,CAACC;AAA1B,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACC,OAAV,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAId,SAAS,CAACa,KAAK,CAACF,KAAP,CAAb,CATF,CADqC;AAAA,GAApB,CAAnB;AAaA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UADH,CADA;AAKD,CApBD;;AAsBA,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\n// change return numberes to percent\nconst toPercent = num => {\n  return Math.floor(num*100) + '%';\n}\n\nconst ColorsList = (props) => {\n  let sortColors = props.colors.sort((a,b) => b.value - a.value);\n  const ColorsList = sortColors.map(color =>\n    <div\n      key={color.raw_hex}\n      className=\"color-wrapper\">\n      <div\n        onClick={props.colorApiCall}\n        className=\"color-square\"\n        style={{\"backgroundColor\": color.raw_hex}}>\n      </div>\n      <p>{color.raw_hex}</p>\n      <p>{toPercent(color.value)}</p>\n    </div>\n  );\n  return(\n  <div>\n    {ColorsList}\n  </div>\n  );\n}\n\nexport default ColorsList;\n"]},"metadata":{},"sourceType":"module"}