{"version":3,"sources":["components/HeaderMenu.js","components/HomePageHeader.js","actions/index.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","actions/MyPaletteAPI.js","components/Footer.js","components/HomePage.js","components/ConfirmDeleteModal.js","components/MyPallettes.js","components/AboutPage.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/index.js","reducers/clarifaiErrorReducer.js","index.js"],"names":["HeaderMenu","state","handleItemClick","e","_ref","name","_this","setState","activeItem","this","react_default","a","createElement","Menu","stackable","react_router_dom","to","Item","active","onClick","Component","HomePageHeader","Header","as","className","app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","dispatch","models","predict","then","response","hexColors","outputs","data","colors","map","color","push","raw_hex","slice","length","fetch","res","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","type","payload","catch","err","console","log","error","status","details","sendColorInfo","hexToG","hexToB","clearRecieved","clearPosition","position","clearColorList","sendSelectedColor","selectedColor","changeMainImage","ColorsList","props","prevProps","index","handleOnClickSquare","sendPositionInfo","backgroundColor","opacity","key","style","renderColor","renderCarot","Icon","size","Dimmer","inverted","Loader","Grid","Column","width","colorsRender","connect","colorInfo","mobile","computer","Image","src","alt","AddImgModal","input","open","close","closeConfigShow","closeOnEscape","closeOnDimmerClick","event","preventDefault","addImageSelection","target","value","_this2","_this$state","Button","Modal","onClose","Content","Input","onChange","handleInput","placeholder","submitURL","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","id","renderImages","ImageModal","exampleImages","ColorPicker","handleChange","colorPalette","newColor","hex","toUpperCase","rgb","updateHexColor","sendAlphaInfo","lib","marginRight","r","g","b","renderColorPicker","newColorSet","ColorInfo","Regenerate","content","SavePalette","newColorPalette","title","label","Actions","handleConfirmClick","colorSet","axios","post","Footer","HomePage","Container","textAlign","components_HomePageHeader","celled","Row","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_Footer","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","concat","onCancel","onConfirm","deleteColor","myPalettes","DeleteColor","delete","MyPallettes","getColors","undefined","palette","_id","ConfirmDeleteModal","renderOneColorSet","renderPalettes","Data","addColor","AddColor","get","AboutPage","components_HeaderMenu","react_router","path","exact","component","initialState","combineReducers","arguments","action","Object","objectSpread","array","item","updateObjectInArray","random_url","filter","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b41125e1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nclass HeaderMenu extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n    // anchor tag is in semantic ui componnent, create seperate with CSS\n    return (\n      <Menu stackable>\n        <Link to=\"/\">\n        <Menu.Item\n          name='Color Pic'\n          active={activeItem === 'Color Pic'}\n          onClick={this.handleItemClick}\n        >\n          Color Pic\n        </Menu.Item>\n        </Link>\n        <Link to=\"/MyPallettes\">\n        <Menu.Item\n          name='My Palettes'\n          active={activeItem === 'My Palettes'}\n          onClick={this.handleItemClick}\n        >\n           My Palettes\n        </Menu.Item>\n        </Link>\n        <Link to=\"/About\">\n          <Menu.Item\n            name='About'\n            active={activeItem === 'About'}\n            onClick={this.handleItemClick}\n          >\n            About\n          </Menu.Item>\n        </Link>\n      </Menu>\n    )\n  }\n}\n\nexport default HeaderMenu;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import axios from 'axios';\nconst Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(function(response) {\n      const hexColors = [];\n      response.outputs[0].data.colors.map(color => {\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n      });\n      fetch('/api/colormind?colors=' + hexColors)\n        .then(res => res.json())\n        .then(function (response) {\n          let RGBtoHexData = [];\n          let colorMindResponse = response;\n          for (let i = 0; i < colorMindResponse.length; i++) {\n            RGBtoHexData.push({\n              hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n              alpha: 1\n            });\n          }\n        // console.log(RGBtoHexData);\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        error: err.data.status.details\n    });\n  })\n};\n\n//add error handling\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    this.props.clearRecieved();\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    this.props.analyzeImage(this.props.url);\n  };\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n    open: false\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    // add error handle in case of bad url\n    this.props.analyzeImage(this.state.input);\n    this.props.changeMainImage(this.state.input);\n    this.props.addImageSelection(this.state.input);\n    //clear inputbar on submit\n    this.setState({input: ''});\n    //Close modal\n    this.close();\n  };\n\n  handleInput(event) {\n    this.setState({input: event.target.value});\n  }\n\n  close = () => {\n    this.setState({ open: false });\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true });\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <Input\n                className=\"url-input\"\n                type=\"text\"\n                onChange={event => this.handleInput(event)}\n                value={this.state.input}\n                placeholder=\"Copy and paste image url...\"\n               />\n              <Button\n                onClick={event => this.submitURL(event)}\n                className=\"ui button\"\n              >\n                Submit\n              </Button>\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nexport default connect(null, { analyzeImage, changeMainImage, addImageSelection })(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Grid } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div className=\"circle\">\n            <i\n              id=\"delete-img\"\n              className=\"fas fa-times-circle\"\n            />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  analyzeImage })(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{ marginRight: 4 + 'em' }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChange={ this.handleChange }\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={10} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.a}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false\n  };\n  // Controled Component for Input\n  handleInput (event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n  // Close Modal\n  close = () => {\n    this.setState({\n      open: false\n    });\n  }\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      title: this.state.input,\n      colors: this.props.colors\n    })\n    this.close();\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            <Input\n              label=\"Title\"\n              value={this.state.input}\n              onChange={event => this.handleInput(event)}\n              placeholder='Insert Palette Name'/>\n            <div>\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color='red'\n              onClick={() => this.close()}\n            >\n              Cancel\n            </Button>\n            <Link to=\"/MyPallettes\">\n              <Button\n                color='green'\n                onClick={() => this.handleConfirmClick()}\n              >\n                Create New\n              </Button>\n            </Link>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import axios from 'axios';\n// Get user color palettes\nexport const getColors = () => dispatch => {\n  axios.get('/api/colors')\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet)\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios.delete(`/api/colors/${id}`)\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n","import React from 'react';\n\nconst Footer = ({url}) => {\n  return(\n    <div className=\"footer\">\n      © 2019\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport Footer from './Footer';\nimport { Container, Grid } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign='center'>\n        <HomePageHeader />\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                <SavePalette />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Footer />\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDelete from './ConfirmDeleteModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors();\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map(palette =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDelete\n                title={palette.title} \n                objectID={palette._id}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst AboutPage = () => {\n  return(\n    <Header as=\"h1\" className=\"header\">\n      About this App\n    </Header>\n  );\n}\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HeaderMenu from './HeaderMenu';\nimport HomePage from './HomePage';\nimport MyPallettes from './MyPallettes';\nimport AboutPage from './AboutPage';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <HeaderMenu />\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/MyPallettes\" component={MyPallettes} />\n          <Route path=\"/About\" component={AboutPage} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: 'recieved'\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1520633946251-dcf52b0276b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1520633946251-dcf52b0276b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n     case 'RANDOM_IMAGE':\n      return {\n        ...state,\n        url: action.url,\n        random_url: action.url\n      };\n      case 'ADD_URL':\n       return {\n         ...state,\n         exampleImages: state.exampleImages.concat(action.url)\n       };\n       // case 'REMOVE_IMG':\n       //  return {\n       //    ...state,\n       //    exampleImages: state.exampleImages.concat(action.url)\n       //  };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: ''\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport clarifaiErrorReducer from './clarifaiErrorReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  error: clarifaiErrorReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer\n});\n","export default (state = [], action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE_ERROR':\n      return action.error\n    default:\n     return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}