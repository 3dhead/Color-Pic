{"version":3,"sources":["images/LandingPageExample.png","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingPage.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/HomePageHeader.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","password","verifyPassword","email","userNamePlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","onClick","style","marginLeft","marginRight","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","active","Content","color","errorMessage","onSubmit","buttonSubmit","verifyPasswordRender","Component","connect","console","log","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","response","callAPI","get","concat","getColors","Logout","clearColors","display","react_router_dom","to","logout","Authenticated","isAuthenticated","user","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","components_Logout","components_LoginModal","children","as","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","Link","Pusher","dimmed","Segment","textAlign","minHeight","padding","Container","Icon","loginRender","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","myPalettesRender","position","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","stackable","columns","marginBottom","Column","width","Image","src","LandingPageExamplePicture","alt","height","Header","fontSize","marginTop","LandingPage","components_LandingPageExample","divided","Row","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","title","onCancel","onConfirm","deleteColor","myPalettes","DeleteColor","id","delete","app","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","clearColorList","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","r","g","b","onChangeComplete","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","renderOneColorSet","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","prevProps","palette","_id","mobile","computer","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","Footer","href","rel","HomePageHeader","ColorsList","renderColor","Dimmer","inverted","Loader","colorsRender","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","renderURLinput","renderSubmitButton","renderErrorMessage","renderLoader","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","Regenerate","SavePalette","newColorPalette","setError","handleConfirmClick","renderTitleInput","renderConfirmButton","HomePage","components_SavePalette","components_HomePageHeader","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","savepaletteRender","loadUser","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","isLoading","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.92335c97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPageExample.9b6ddb1f.png\";","import axios from 'axios';\n\n// Check token & load user\nexport const loadUser = () => dispatch => {\n  // User loading\n  dispatch({ type: 'USER_LOADING'});\n  axios\n    .get('/api/auth/user', tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios.post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('register fail!')\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'REGISTER_FAIL'\n      });\n    });\n}\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password});\n\n  axios.post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('login fail!')\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'LOGIN_FAIL'\n      });\n    });\n}\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: 'LOGOUT_SUCCESS'\n  };\n};\n\n// Set up local storage for tokens\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem('token');\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n\n// Modal Actions\nexport const openModal = () => {\n  return {\n    type: 'OPEN_MODAL'\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: 'CLOSE_MODAL'\n  };\n};\n\n// Logout User\nexport const clearErrors = () => {\n  return {\n    type: 'CLEAR_ERRORS'\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, Input, Menu } from 'semantic-ui-react';\nimport { registerUser } from '../actions/authActions';\nimport { loginUser } from '../actions/authActions';\nimport { openModal } from '../actions/authActions';\nimport { closeModal } from '../actions/authActions';\nimport { clearErrors } from '../actions/authActions';\n\nconst Isemail = require('isemail');\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    activeItem: 'Log In',\n    header: 'Log In to Color Pic',\n    button: 'Log In',\n    password: '',\n    verifyPassword: '',\n    email: '',\n    userNamePlaceHolder: '',\n    description:'',\n    errorStatusPassword: false,\n    errorMsgPassword:'',\n    errorStatusEmail: false,\n    errorMsgEmail:''\n   }\n\n  showLogin = size => () => {\n    this.setState({\n      activeItem: 'Log In',\n      header: 'Log In to Color Pic',\n      button: 'Log In',\n      userNamePlaceHolder:'email@email.com',\n      description: ''\n    })\n    this.props.openModal();\n    this.props.clearErrors();\n  }\n\n  showSignup = size => () => {\n    this.setState({\n      activeItem: 'Sign Up',\n      header: 'Join Color Pic',\n      button: 'Sign Up',\n      userNamePlaceHolder: 'Register new user',\n      description:'Register to access more features'\n    })\n    this.props.openModal();\n    this.props.clearErrors();\n  }\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: ''\n    });\n    this.props.closeModal();\n    this.props.clearErrors();\n  }\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Log In to Color Pic',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder:'Username',\n      description:''\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  }\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Join Color Pic Today',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder: 'Register New User',\n      description:'Register to access more features'\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  }\n\n  // clear all error messages\n  resetDefaults() {\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: '',\n      errorMsgPassword: ''\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (this.state.email === '' && this.state.password === '' && this.state.verifyPassword === '' ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail:'Email cannot be empty',\n        errorMsgPassword:'Passwords cannot be empty',\n      });\n      return\n    }\n\n    // If email is empty\n    if (this.state.email === '') {\n      this.setState({\n        errorMsgEmail:'Email cannot be empty',\n        errorStatusEmail: true\n      });\n      return\n    }\n\n    // If either password is empty on Sign Up\n    if (this.state.activeItem === 'Sign Up' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Password cannot be empty',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If Login Password is empty\n    if (this.state.activeItem === 'Log In' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Please enter password',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If passwords do not match show error message\n    if (this.state.activeItem === 'Sign Up' && this.state.password !== this.state.verifyPassword) {\n      this.setState({\n        errorMsgPassword:'Passwords do not match',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // Validate Email\n    if(this.state.activeItem === 'Sign Up' && Isemail.validate(this.state.email) === false) {\n      this.setState({\n        errorStatusEmail: 'error',\n        errorMsgEmail:'Not a valid email',\n      });\n      return\n    }\n\n    // If Sign Up and No errors statuses\n    if(this.state.activeItem === 'Sign Up') {\n      this.props.registerUser(this.state.email, this.state.password);\n    }\n\n    // If Log In and No errors statuses\n    if(this.state.activeItem === 'Log In') {\n      this.props.loginUser(this.state.email, this.state.password);\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if(this.state.activeItem === 'Sign Up') {\n      return(\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, 'verifyPassword')}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return(\n        <Button\n          onClick={this.showSignup()}\n          style={{ marginLeft: '0.5em', marginRight: '1rem' }}\n        >\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  render() {\n    const {\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail,\n    } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.showLogin()}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal size='tiny' open={this.props.modal} onClose={this.close} closeIcon>\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name='Log In'\n              active={activeItem === 'Log In'}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name='Sign Up'\n              active={activeItem === 'Sign Up'}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <p>{description}</p>\n              <p style={{color: 'red'}}>{this.props.errorMessage}</p>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, 'email')}\n                error={errorStatusEmail}\n              />\n              <p style={{\"color\": \"red\"}}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, 'password')}\n                error={errorStatusPassword}\n              />\n              <p style={{color: 'red'}}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    errorMessage: state.errors.message,\n    modal: state.auth.modal\n  };\n};\n\nexport default connect( mapStateToProps, {\n  registerUser,\n  loginUser,\n  openModal,\n  closeModal,\n  clearErrors\n})(LoginModal);\n","import axios from 'axios';\nimport { tokenConfig } from './authActions';\n\nconst callAPI = (email, dispatch) => {\n  axios.get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Get user color palettes\nexport const getColors = (email) => dispatch => {\n  callAPI(email, dispatch);\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => { callAPI(email, dispatch) })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = (id) => dispatch => {\n  axios.delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Clear Colors\nexport const clearColors = () => {\n  return {\n    type: 'CLEAR_PALETTE_COLORS'\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { logoutUser } from '../actions/authActions';\nimport { clearColors } from '../actions/MyPaletteAPI';\n\nclass Logout extends Component {\n  logout(event) {\n    this.props.logoutUser();\n    this.props.clearColors();\n  }\n\n  render() {\n    return(\n      <div>\n        <p style={{ 'display': 'inline-block'}}>\n          {this.props.email}\n        </p>\n        <Link to=\"/\">\n          <Button\n            style={{\n            'display': 'inline-block',\n            'marginLeft': '0.5em'}}\n            onClick={event => this.logout(event)}\n          >\n            Log Out\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser, clearColors })(Logout);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n          <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n          <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 125, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                {this.loginRender()}\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(MobileContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  // Icon\n} from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return(<Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>);\n    }\n  }\n  render() {\n    const { children } = this.props\n    // const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n              <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n              {this.myPalettesRender()}\n              <Menu.Item position='right'>\n                {this.loginRender()}\n                {/* <Icon name=\"user circle\" size=\"large\"/> */}\n              </Menu.Item>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(DesktopContainer);\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport {\n  Grid,\n  Image,\n  Segment,\n  Header,\n  Button\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LandingPageExamplePicture from '../images/LandingPageExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExample = () => {\n  return(\n    <div>\n      <Grid\n        stackable\n        columns={2}\n        style={{ padding: '1em', marginBottom: '3em' }}\n        >\n        <Grid.Column\n          width={10}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '0em' }}>\n            <Image src={ LandingPageExamplePicture } alt='Landing Page Example Palette'/>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={6}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment style={{\n            padding: '0em 1em 3em 1em',\n            height: '100%'\n          }}>\n            <Header\n              as=\"h1\"\n              style={{\n                fontSize: '36px',\n                marginTop: '3rem',\n                marginBottom: '4rem'\n              }}\n            >\n              Fast and Efficient color palettes generator\n            </Header>\n            <p\n              style={{\n                fontSize: '20px',\n                marginBottom: '4rem'\n              }}\n            >\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n              <Button\n                style={{\n                  fontSize: '16px',\n                  marginBottom: '1rem'\n                }}\n              >\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport { Container, Grid, Icon} from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\n\nconst LandingPage = () => {\n  return(\n    <Container>\n      <LandingPageExample />\n      <Grid\n        stackable\n        columns={3}\n        divided\n        style={{ marginBottom: '2em'}}\n      >\n         <Grid.Row>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Capture colors from Images</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"adjust\" size='huge'/>\n             <h3>Adjust colors and refine palette</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Save palettes for future reference</h3>\n           </Grid.Column>\n         </Grid.Row>\n       </Grid>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","const Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  console.log(url);\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n\n// image modal Actions\nexport const openImgModal = () => {\n  return ({\n    type: 'OPEN_IMAGE_MODAL'\n  });\n}\n\nexport const closeImgModal = () => {\n  return ({\n    type: 'CLOSE_IMAGE_MODAL',\n  });\n}\n\nexport const newImgSubmit = () => {\n  return ({\n    type: 'NEW_IMAGE_SUBMIT'\n  });\n}\n\nexport const showModalLoader = () => {\n  return ({\n    type: 'CLARIFAI_REQUEST_WAITING'\n  });\n}\n\nexport const clearImgSubmit = () => {\n  return ({\n    type: 'CLEAR_IMAGE_SUBMIT'\n  });\n}\n\nexport const sendErrorStatus = () => {\n  return ({\n    type: 'SEND_ERROR'\n  });\n}\n\nexport const clearErrorStatus = () => {\n  return ({\n    type: 'CLEAR_ERROR'\n  });\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({\n      hexInput: color\n    });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (dimmer) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors(this.props.email);\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData, this.props.email);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, dimmer, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleConfirm}\n              color='blue'\n            >\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    if(this.props.email !== undefined) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (this.props.email !== prevProps.email ) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\nimport { Icon, Container } from 'semantic-ui-react';\n\nconst Footer = ({url}) => {\n  return(\n    <Container className=\"footer\">\n      <h5 className=\"footer-header\">\n        © 2019\n      </h5>\n      <div className=\"icon-container\">\n        <a\n          className=\"icon-div\"\n          href=\"https://github.com/fulin426/Color-Pic\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"github\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"https://www.linkedin.com/in/fu-lin-liu/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"linkedin square\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"mailto:fulin426@gmail.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"mail\" size='big' />\n        </a>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      // send empty array before recieving new color set\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors !== undefined ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n            closeIcon\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: '100%',\n              marginRight: 4 + 'em'\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false\n  };\n\n  handleInput (event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      email: this.props.email,\n      title: this.state.input,\n      colors: this.props.colors\n    }, this.props.token)\n    this.close();\n  }\n\n  //if empty Input\n  setError() {\n    this.setState({ error: true });\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '') {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  renderTitleInput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.state.error === true) {\n        return(\n          <Input\n            className=\"savepalette-modal-input\"\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Title Required...'\n            error\n          />\n        );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"savepalette-modal-input\"\n          label=\"Title\"\n          value={this.state.input}\n          onChange={event => this.handleInput(event)}\n          placeholder='New Palette Name...'\n        />\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            {this.renderTitleInput()}\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport LoginModal from './LoginModal';\nimport { Container, Grid } from 'semantic-ui-react';\n\nclass HomePage extends Component {\n  savepaletteRender() {\n    if(this.props.Authenticated === true) {\n      return <SavePalette />;\n    } else {\n      return (\n        <LoginModal\n          buttonOne=\"Save Palette\"\n        />\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Container textAlign='center'>\n          <HomePageHeader />\n          <Grid celled>\n            <Grid.Row>\n              <ImageSelection />\n              <ImageMain />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorsList />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorPicker />\n              <Grid.Column mobile={16} tablet={7} computer={6}>\n                <ColorInfo />\n                <div className=\"regen-save-buttons\">\n                  <Regenerate />\n                  {this.savepaletteRender()}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { })(HomePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { loadUser } from '../actions/authActions';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    // Only load user if there is a token in local storage\n    if(localStorage.getItem('token') !== null) {\n      this.props.loadUser();\n    }\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { loadUser })(App);\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {...state,\n        loader: 'show'\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {...state,\n        image: 'new'\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {...state,\n        image: ''\n      };\n    case 'SEND_ERROR':\n      return {...state,\n        error: true\n      }\n    case 'CLEAR_ERROR':\n      return {...state,\n        error: false\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {...state,\n        open: true,\n        error: false\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {...state,\n        open: false,\n        error: false,\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n      case 'CLEAR_PALETTE_COLORS':\n        return {\n          ...state,\n          Data: [],\n          AddColor: '',\n          DeleteColor: '',\n          UpdateColor: '',\n        };\n    default:\n     return state;\n  }\n}\n","const initialState = {\n  message: '',\n  status: null,\n  id: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        message: action.payload.data,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: '',\n        status: null,\n        id: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: '',\n  modal: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        modal: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}