{"version":3,"sources":["components/HeaderMenu.js","components/HomePageHeader.js","actions/index.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Footer.js","components/HomePage.js","components/MyPallettes.js","components/AboutPage.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/index.js","reducers/clarifaiErrorReducer.js","index.js"],"names":["HeaderMenu","state","handleItemClick","e","_ref","name","_this","setState","activeItem","this","react_default","a","createElement","Menu","stackable","react_router_dom","to","Item","active","onClick","Component","HomePageHeader","Header","as","className","app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","dispatch","models","predict","then","response","hexColors","outputs","data","colors","map","color","push","raw_hex","slice","length","fetch","res","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","type","payload","catch","err","console","log","error","status","details","sendColorInfo","hexToG","hexToB","clearRecieved","clearPosition","position","clearColorList","sendSelectedColor","selectedColor","updateHexColor","newColorSet","changeMainImage","ColorsList","props","prevProps","index","handleOnClickSquare","sendPositionInfo","backgroundColor","opacity","key","style","renderColor","renderCarot","Dimmer","inverted","Loader","size","Grid","Column","width","colorsRender","connect","colorInfo","mobile","computer","Image","src","alt","Modal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","event","preventDefault","addImageSelection","_this2","reactjs_popup_es","trigger","modal","closeOnDocumentClick","close","onChange","target","value","placeholder","submitURL","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","id","renderImages","ImageModal","exampleImages","ColorPicker","handleChange","colorPalette","newColor","hex","toUpperCase","rgb","sendAlphaInfo","lib","marginRight","r","g","b","renderColorPicker","ColorInfo","Regenerate","Button","content","SavePalette","Modal_Modal","closeIcon","Content","Input","label","handleInput","Actions","Icon","Footer","HomePage","Container","textAlign","components_HomePageHeader","celled","Row","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_Footer","MyPallettes","AboutPage","components_HeaderMenu","react_router","path","exact","component","initialState","combineReducers","arguments","undefined","action","objectSpread","array","item","updateObjectInArray","random_url","concat","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.97e52418.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nclass HeaderMenu extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n    // anchor tag is in semantic ui componnent, create seperate with CSS\n    return (\n      <Menu stackable>\n        <Link to=\"/\">\n        <Menu.Item\n          name='Color Pic'\n          active={activeItem === 'Color Pic'}\n          onClick={this.handleItemClick}\n        >\n          Color Pic\n        </Menu.Item>\n        </Link>\n        <Link to=\"/MyPallettes\">\n        <Menu.Item\n          name='My Palettes'\n          active={activeItem === 'My Palettes'}\n          onClick={this.handleItemClick}\n        >\n           My Palettes\n        </Menu.Item>\n        </Link>\n        <Link to=\"/About\">\n          <Menu.Item\n            name='About'\n            active={activeItem === 'About'}\n            onClick={this.handleItemClick}\n          >\n            About\n          </Menu.Item>\n        </Link>\n      </Menu>\n    )\n  }\n}\n\nexport default HeaderMenu;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import axios from 'axios';\nconst Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\nexport const analyzeImage = (url) => dispatch => {\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(function(response) {\n      const hexColors = [];\n      response.outputs[0].data.colors.map(color => {\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n      });\n      fetch('/api/colormind?colors=' + hexColors)\n        .then(res => res.json())\n        .then(function (response) {\n          let RGBtoHexData = [];\n          let colorMindResponse = response;\n          for (let i = 0; i < colorMindResponse.length; i++) {\n            RGBtoHexData.push({\n              hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n              alpha: 1\n            });\n          }\n        // console.log(RGBtoHexData);\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        error: err.data.status.details\n    });\n  })\n};\n\n//add error handling\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n};\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n};\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n};\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n};\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n};\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n};\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n};\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n};\n\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n};\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid } from 'semantic-ui-react'\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    this.props.clearRecieved();\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    this.props.analyzeImage(this.props.url);\n  };\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\">\n            <i className=\"fas fa-caret-up fa-3x\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport Popup from 'reactjs-popup';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\n\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    };\n  }\n\n  submitURL(event) {\n    event.preventDefault();\n    console.log(this.state.input);\n    // add error handle in case of bad url\n    this.props.analyzeImage(this.state.input);\n    this.props.changeMainImage(this.state.input);\n    this.props.addImageSelection(this.state.input);\n    //clear inputbar on submit\n    this.setState({input: ''});\n  };\n\n  render() {\n    return (\n      <Popup\n        trigger={<button className=\"modal-btn\"> Try Your Own Image </button>}\n        modal\n        closeOnDocumentClick\n      >\n        {close => (\n          <div>\n            <h3>Try your own image</h3>\n              <form>\n                <div className=\"ui action input\">\n                  <input\n                    className=\"url-input\"\n                    type=\"text\"\n                    onChange={event => this.setState({input: event.target.value})}\n                    value={this.state.input}\n                    placeholder=\"Copy and paste Url...\"\n                  />\n                  <button\n                    onClick={event => {\n                      this.submitURL(event);\n                      close();\n                    }}\n                    className=\"ui button\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n          </div>\n          )\n        }\n      </Popup>\n    );\n  }\n}\n\nexport default connect(null, { analyzeImage, changeMainImage, addImageSelection })(Modal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Grid } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div className=\"circle\">\n            <i\n              id=\"delete-img\"\n              className=\"fas fa-times-circle\"\n            />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  analyzeImage })(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{ marginRight: 4 + 'em' }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChange={ this.handleChange }\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\n\nclass ColorInfo extends Component {\n\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.a}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { updateHexColor })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Icon, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = { input: ''};\n\n  handleInput (event) {\n    console.log(event.target.value);\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    return (\n      <Modal trigger={<Button>Save Palette</Button>} closeIcon>\n        <Modal.Content>\n          <Header as=\"h2\">\n            Save Palette\n          </Header>\n          <Input\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Insert Palette Name'/>\n          <div>\n            {this.colorsRender()}\n          </div>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green'>\n            <Icon name='checkmark' /> Save\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n  };\n};\n\nexport default connect(mapStateToProps, { })(SavePalette);\n","import React from 'react';\n\nconst Footer = ({url}) => {\n  return(\n    <div className=\"footer\">\n      © 2019\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport Footer from './Footer';\nimport { Container, Grid } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign='center'>\n        <HomePageHeader />\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                <SavePalette />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Footer />\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst MyPallettes = () => {\n  return(\n    <Header as=\"h1\" className=\"header\">\n      My Color Pallettes\n    </Header>\n  );\n}\n\nexport default MyPallettes;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst AboutPage = () => {\n  return(\n    <Header as=\"h1\" className=\"header\">\n      About this App\n    </Header>\n  );\n}\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HeaderMenu from './HeaderMenu';\nimport HomePage from './HomePage';\nimport MyPallettes from './MyPallettes';\nimport AboutPage from './AboutPage';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <HeaderMenu />\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/MyPallettes\" component={MyPallettes} />\n          <Route path=\"/About\" component={AboutPage} />\n        </BrowserRouter>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: 'recieved'\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1520633946251-dcf52b0276b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1520633946251-dcf52b0276b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n     case 'RANDOM_IMAGE':\n      return {\n        ...state,\n        url: action.url,\n        random_url: action.url\n      };\n      case 'ADD_URL':\n       return {\n         ...state,\n         exampleImages: state.exampleImages.concat(action.url)\n       };\n       // case 'REMOVE_IMG':\n       //  return {\n       //    ...state,\n       //    exampleImages: state.exampleImages.concat(action.url)\n       //  };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport clarifaiErrorReducer from './clarifaiErrorReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  error: clarifaiErrorReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer\n});\n","export default (state = [], action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE_ERROR':\n      return action.error\n    default:\n     return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}