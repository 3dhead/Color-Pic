{"version":3,"sources":["actions/index.js","components/ColorsList.js","components/ImageMain.js","components/Modal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Footer.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/index.js","reducers/clarifaiErrorReducer.js","index.js"],"names":["app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","dispatch","models","predict","then","response","hexColors","outputs","data","colors","map","color","push","raw_hex","slice","length","fetch","res","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","type","payload","catch","err","console","log","error","status","details","sendColorInfo","hexToG","hexToB","clearRecieved","clearPosition","position","clearColorList","sendSelectedColor","selectedColor","updateHexColor","newColorSet","changeMainImage","ColorsList","this","props","prevProps","index","handleOnClickSquare","sendPositionInfo","backgroundColor","opacity","_this","react_default","a","createElement","key","className","style","renderColor","onClick","renderCarot","Dimmer","active","inverted","Loader","size","colorsRender","Component","connect","state","colorInfo","_ref","Image","src","alt","Modal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","event","preventDefault","addImageSelection","setState","_this2","reactjs_popup_es","trigger","modal","closeOnDocumentClick","close","onChange","target","value","placeholder","submitURL","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","id","renderImages","components_Modal","exampleImages","ColorPicker","handleChange","colorPalette","newColor","hex","toUpperCase","rgb","sendAlphaInfo","lib","marginRight","r","g","b","ColorInfo","Regenerate","Button","content","SavePalette","Footer","Container","textAlign","Header","as","Grid","celled","Row","Column","mobile","computer","components_ImageSelection","components_ImageMain","width","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_Footer","initialState","combineReducers","arguments","undefined","action","objectSpread","array","item","updateObjectInArray","random_url","concat","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"8RAEMA,iBAAM,IADKC,EAAQ,KACAC,KAAI,CAACC,OAAQ,sCAKtC,SAASC,EAAOC,GAAI,MAAsB,MAAdA,EAAEC,OAAO,GAAYD,EAAEE,UAAU,EAAE,GAAGF,EAGlE,SAASG,EAAMC,GAEd,OADAA,EAAIC,SAASD,EAAE,IACXE,MAAMF,GAAW,MACrBA,EAAIG,KAAKC,IAAI,EAAED,KAAKE,IAAIL,EAAE,MACnB,mBAAmBH,QAAQG,EAAEA,EAAE,IAAI,IACnC,mBAAmBH,OAAOG,EAAE,KAG7B,IAAMM,EAAe,SAACC,GAAD,OAAS,SAAAC,GACnCjB,EAAIkB,OAAOC,QAAQ,mCAAoCH,GACtDI,KAAK,SAASC,GACX,IAAMC,EAAY,GAClBD,EAASE,QAAQ,GAAGC,KAAKC,OAAOC,IAAI,SAAAC,GAClC,OAAOL,EAAUM,KAAKD,EAAME,QAAQC,MAAM,EAAGH,EAAME,QAAQE,WAE7DC,MAAM,yBAA2BV,GAC9BF,KAAK,SAAAa,GAAG,OAAIA,EAAIC,SAChBd,KAAK,SAAUC,GAGd,IAFA,IAnBQc,EAAEC,EAAEC,EAmBRC,EAAe,GACfC,EAAoBlB,EACfmB,EAAI,EAAGA,EAAID,EAAkBR,OAAQS,IAC5CF,EAAaV,KAAK,CAChBa,UAvBIN,EAuBeI,EAAkBC,GAAG,GAvBlCJ,EAuBsCG,EAAkBC,GAAG,GAvBzDH,EAuB6DE,EAAkBC,GAAG,GAvBvE,IAAIhC,EAAM2B,GAAG3B,EAAM4B,GAAG5B,EAAM6B,IAwB/CK,MAAO,IAIbzB,EAAS,CACP0B,KAAM,gBACNC,QAASN,QAIdO,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ7B,EAAS,CACP0B,KAAM,sBACNM,MAAOH,EAAItB,KAAK0B,OAAOC,cAMlBC,EAAgB,SAACX,EAAUC,GAAX,OAAqB,SAAAzB,GAEhD,IAAIkB,EAnDqBzB,SAAUN,EAmDpBqC,GAnD+BlC,UAAU,EAAE,GAAG,IAoDzD6B,EAnDN,SAAgB/B,GAAI,OAAOK,SAAUN,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAmDrD8C,CAAOZ,GACXJ,EAnDN,SAAgBhC,GAAI,OAAOK,SAAUN,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAmDrD+C,CAAOb,GACfxB,EAAS,CACP0B,KAAM,kBACNF,SAAUA,EACVN,EAAGA,EACHC,EAAGA,EACHC,EAAGA,EACHK,MAAOA,MAIEa,EAAgB,kBAAM,SAAAtC,GACjCA,EAAS,CACP0B,KAAM,iBACNO,OAAQ,OAYCM,EAAgB,kBAAM,SAAAvC,GACjCA,EAAS,CACP0B,KAAM,sBACNc,SAAU,MAIDC,EAAiB,kBAAM,SAAAzC,GAClCA,EAAS,CACP0B,KAAM,eACNlB,OAAQ,OAICkC,EAAoB,SAAChC,GAAD,OAAW,SAAAV,GAC1CA,EAAS,CACP0B,KAAM,iBACNiB,cAAejC,MAUNkC,EAAiB,SAACC,GAAD,OAAiB,SAAA7C,GAC7CA,EAAS,CACP0B,KAAM,mBACNmB,YAAaA,MAIJC,EAAkB,SAAA/C,GAC7B,MAAO,CACL2B,KAAM,aACN3B,IAAKA,sBC9GHgD,8LAEFC,KAAKC,MAAMX,gBAEXU,KAAKC,MAAMR,iBACXO,KAAKC,MAAMnD,aAAakD,KAAKC,MAAMlD,gDAGlBmD,GAKjB,GAJIF,KAAKC,MAAMlD,MAAQmD,EAAUnD,MAC/BiD,KAAKC,MAAMR,iBACXO,KAAKC,MAAMnD,aAAakD,KAAKC,MAAMlD,MAEX,aAAtBiD,KAAKC,MAAMhB,OAAuB,CAGpC,IAAIT,EAAWwB,KAAKC,MAAMzC,OAAO,GAAGgB,SAChC2B,EAAQH,KAAKC,MAAMT,SAEvBQ,KAAKI,oBAAoB5B,EAAU2B,EADvB,GAEZH,KAAKC,MAAMX,6DAIK5B,EAAOyC,EAAO1B,GAChCuB,KAAKC,MAAMP,kBAAkBhC,GAC7BsC,KAAKC,MAAMd,cAAczB,EAAOe,GAChCuB,KAAKC,MAAMI,iBAAiBF,uCAGlBzC,EAAOe,GACjB,MAAO,CACL6B,gBAAiB5C,EACjB6C,QAAS9B,uCAID0B,GACV,OAAIA,IAAUH,KAAKC,MAAMT,SAChB,CACL9B,MAAO,SAGF,CACLA,MAAO,gDAKE,IAAA8C,EAAAR,KAEb,OAAIA,KAAKC,MAAMzC,OAAOM,QAAS,EACVkC,KAAKC,MAAMzC,OAAOC,IAAI,SAACC,EAAMyC,GAAP,OACvCM,EAAAC,EAAAC,cAAA,OAAKC,IAAKlD,EAAMc,SAAUqC,UAAU,0BAClCJ,EAAAC,EAAAC,cAAA,OACEE,UAAU,eACVC,MAAON,EAAKO,YAAYrD,EAAMc,SAAUd,EAAMe,OAC9CuC,QAAS,kBAAMR,EAAKJ,oBAAoB1C,EAAMc,SAAU2B,EAAOzC,EAAMe,UAGvEgC,EAAAC,EAAAC,cAAA,OACEG,MAAON,EAAKS,YAAYd,GACxBU,UAAU,mBACVJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,8BAQnBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,KAAK,MAAMF,UAAQ,GAA3B,qDAON,OACAX,EAAAC,EAAAC,cAAA,WACGX,KAAKuB,uBAlFaC,aAmGVC,cAXS,SAAAC,GACtB,MAAO,CACLlE,OAAQkE,EAAMlE,OAAOA,OACrBmC,cAAe+B,EAAMC,UAAUhC,cAC/BH,SAAUkC,EAAMC,UAAUnC,SAC1BzC,IAAK2E,EAAM3E,IAAIA,IACfiC,MAAO0C,EAAM1C,MACbC,OAAQyC,EAAMlE,OAAOyB,SAIe,CACtCnC,eACAqC,gBACAkB,iBDpC8B,SAACb,GAAD,OAAc,SAAAxC,GAC5CA,EAAS,CACP0B,KAAM,qBACNc,SAAUA,MCkCZE,oBACAJ,gBACAG,kBANagC,CAOZ1B,YChGY0B,cANS,SAAAC,GACtB,MAAO,CACL3E,IAAK2E,EAAM3E,IAAIA,MAIJ0E,CAhBG,SAAAG,GAAW,IAAT7E,EAAS6E,EAAT7E,IAClB,OACI0D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEhB,UAAU,aACViB,IAAK/E,EACLgF,IAAI,4BCDNC,cACJ,SAAAA,EAAY/B,GAAO,IAAAO,EAAA,OAAAyB,OAAAC,EAAA,EAAAD,CAAAjC,KAAAgC,IACjBxB,EAAAyB,OAAAE,EAAA,EAAAF,CAAAjC,KAAAiC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAArC,KAAMC,KACDyB,MAAQ,CACXY,MAAO,IAHQ9B,yEAOT+B,GACRA,EAAMC,iBACN1D,QAAQC,IAAIiB,KAAK0B,MAAMY,OAEvBtC,KAAKC,MAAMnD,aAAakD,KAAK0B,MAAMY,OACnCtC,KAAKC,MAAMH,gBAAgBE,KAAK0B,MAAMY,OACtCtC,KAAKC,MAAMwC,kBAAkBzC,KAAK0B,MAAMY,OAExCtC,KAAK0C,SAAS,CAACJ,MAAO,sCAGf,IAAAK,EAAA3C,KACP,OACES,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACEC,QAASpC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAlB,wBACTiC,OAAK,EACLC,sBAAoB,GAEnB,SAAAC,GAAK,OACJvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,YACVnC,KAAK,OACLuE,SAAU,SAAAV,GAAK,OAAII,EAAKD,SAAS,CAACJ,MAAOC,EAAMW,OAAOC,SACtDA,MAAOR,EAAKjB,MAAMY,MAClBc,YAAY,0BAEd3C,EAAAC,EAAAC,cAAA,UACEK,QAAS,SAAAuB,GACPI,EAAKU,UAAUd,GACfS,KAEFnC,UAAU,aALZ,sBAtCEW,aAyDLC,cAAQ,KAAM,CAAE3E,eAAcgD,kBAAiB2C,kBH2D7B,SAAA1F,GAC/B,MAAO,CACL2B,KAAM,UACN3B,IAAKA,KG9DM0E,CAAoEO,GCzD7EsB,sLACQvG,GAEViD,KAAKC,MAAMX,gBAEXU,KAAKC,MAAMV,gBACXS,KAAKC,MAAMH,gBAAgB/C,wCAGhBwG,GACX,OAAIvD,KAAKC,MAAMlD,MAAQwG,EACd,CACLC,OAAQ,oBACRjD,QAAS,GAGJ,4CAIK,IAAAC,EAAAR,KACd,OACEA,KAAKC,MAAMwD,WAAWhG,IAAI,SAAAV,GAAG,OAC3B0D,EAAAC,EAAAC,cAAA,OACEE,UAAU,gBACVD,IAAK7D,GAEL0D,EAAAC,EAAAC,cAAA,OACEE,UAAU,kBACViB,IAAK/E,EACLgF,IAAI,YACJjB,MAAON,EAAKkD,aAAa3G,GACzBiE,QAAS,kBAAMR,EAAKmD,YAAY5G,MAElC0D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,KACEiD,GAAG,aACH/C,UAAU,6DASpB,OACEJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZb,KAAK6D,gBAERpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACmD,EAAD,eApDmBtC,aAkEdC,cAPS,SAAAC,GACtB,MAAO,CACL3E,IAAK2E,EAAM3E,IAAIA,IACf0G,WAAY/B,EAAM3E,IAAIgH,gBAIc,CACtCjE,kBACAR,gBACAC,gBACAzC,gBAJa2E,CAIG6B,YCtEZU,6MACJC,aAAe,SAACvG,EAAO6E,GACrB,IAAI2B,EAAe1D,EAAKP,MAAMzC,OAE1B2G,EAAW,CACb3F,SAAUd,EAAM0G,IAAIC,cACpB5F,MAAOf,EAAM4G,IAAI5D,GAGnBwD,EAAa1D,EAAKP,MAAMT,UAAY2E,EAEpC3D,EAAKP,MAAML,eAAesE,GAC1B1D,EAAKP,MAAMd,cAAczB,EAAM0G,IAAIC,eACnC7D,EAAKP,MAAMP,kBAAkBhC,EAAM0G,IAAIC,eACvC7D,EAAKP,MAAMsE,cAAc7G,EAAM4G,IAAI5D,4EAInC,OAAGV,KAAKC,MAAMzC,OAAOM,QAAU,EAE3B2C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAC6D,EAAA,aAAD,CACE3D,UAAU,gBACVC,MAAO,CAAE2D,YAAa,OACtB/G,MAAO,CACLgH,EAAG1E,KAAKC,MAAM/B,EACdyG,EAAG3E,KAAKC,MAAM9B,EACdyG,EAAG5E,KAAKC,MAAM7B,EACdsC,EAAGV,KAAKC,MAAMzC,OAAOwC,KAAKC,MAAMT,UAAUf,OAE5CwE,SAAWjD,KAAKiE,gBAKjBxD,EAAAC,EAAAC,cAAC6D,EAAA,aAAD,CAAc3D,UAAU,wBAnCTW,aAoDXC,cAbS,SAAAC,GAEtB,OADA5C,QAAQC,IAAI2C,GACL,CACLlD,SAAUkD,EAAMC,UAAUnD,SAC1BN,EAAGwD,EAAMC,UAAUzD,EACnBC,EAAGuD,EAAMC,UAAUxD,EACnBC,EAAGsD,EAAMC,UAAUvD,EACnBsC,EAAGgB,EAAMC,UAAUlD,MACnBjB,OAAQkE,EAAMlE,OAAOA,OACrBgC,SAAUkC,EAAMC,UAAUnC,WAIU,CACtCI,iBACAT,gBACAO,oBACA6E,cLuC2B,SAAC9F,GAAD,OAAW,SAAAzB,GACtCA,EAAS,CACP0B,KAAM,kBACND,MAAOA,OK9CIgD,CAIIuC,GC5Dba,mLAGF,OACEpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SACEE,UAAU,iBACVsC,MAAOnD,KAAKC,MAAMzB,WAEpBiC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,KACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,KACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,KACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,KACAJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEE,UAAU,aACVsC,MAAOnD,KAAKC,MAAM/B,IAEpBuC,EAAAC,EAAAC,cAAA,SACEE,UAAU,aACVsC,MAAOnD,KAAKC,MAAM9B,IAEpBsC,EAAAC,EAAAC,cAAA,SACEE,UAAU,aACVsC,MAAOnD,KAAKC,MAAM7B,IAEpBqC,EAAAC,EAAAC,cAAA,SACEE,UAAU,aACVsC,MAAOnD,KAAKC,MAAMS,aA7BLc,aAiDTC,cAZS,SAAAC,GACtB,MAAO,CACLlD,SAAUkD,EAAMC,UAAUnD,SAC1BN,EAAGwD,EAAMC,UAAUzD,EACnBC,EAAGuD,EAAMC,UAAUxD,EACnBC,EAAGsD,EAAMC,UAAUvD,EACnBsC,EAAGgB,EAAMC,UAAUlD,MACnBjB,OAAQkE,EAAMlE,OAAOA,OACrBgC,SAAUkC,EAAMC,UAAUnC,WAIU,CAAEI,kBAA3B6B,CAA6CoD,YC7CtDC,sLACQ/H,GAEViD,KAAKC,MAAMR,iBAEXO,KAAKC,MAAMX,gBAEXU,KAAKC,MAAMV,gBACXS,KAAKC,MAAMnD,aAAaC,oCAGjB,IAAAyD,EAAAR,KACP,OACES,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACElE,UAAU,YACVmE,QAAQ,aACRhE,QAAS,kBAAMR,EAAKmD,YAAYnD,EAAKP,MAAMlD,eAhB1ByE,aA4BVC,cANS,SAAAC,GACtB,MAAO,CACL3E,IAAK2E,EAAM3E,IAAIA,MAIqB,CACtCD,eACAwC,gBACAC,gBACAE,kBAJagC,CAIKqD,GC5BLG,EATK,WAClB,OACIxE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACElE,UAAU,gBACVmE,QAAQ,kBCGDE,EARA,SAAAtD,GAAWA,EAAT7E,IACf,OACE0D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,cCoDW5E,mLAxCX,OACEwE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAWC,UAAU,UACnB3E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQC,GAAG,KAAKzE,UAAU,UAA1B,gCAGAJ,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMC,QAAM,GACV/E,EAAAC,EAAAC,cAAC4E,EAAA,EAAKE,IAAN,KACEhF,EAAAC,EAAAC,cAAC4E,EAAA,EAAKG,OAAN,CAAaC,OAAQ,GAAIC,SAAU,GACjCnF,EAAAC,EAAAC,cAACkF,EAAD,OAEFpF,EAAAC,EAAAC,cAAC4E,EAAA,EAAKG,OAAN,CAAaC,OAAQ,GAAIC,SAAU,IACjCnF,EAAAC,EAAAC,cAACmF,EAAD,SAINrF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMC,QAAM,GACV/E,EAAAC,EAAAC,cAAC4E,EAAA,EAAKE,IAAN,KACEhF,EAAAC,EAAAC,cAAC4E,EAAA,EAAKG,OAAN,CAAaK,MAAO,IAClBtF,EAAAC,EAAAC,cAACqF,EAAD,SAINvF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMC,QAAM,GACV/E,EAAAC,EAAAC,cAAC4E,EAAA,EAAKE,IAAN,KACEhF,EAAAC,EAAAC,cAAC4E,EAAA,EAAKG,OAAN,CAAaC,OAAQ,GAAIC,SAAU,IACjCnF,EAAAC,EAAAC,cAACsF,EAAD,OAEFxF,EAAAC,EAAAC,cAAC4E,EAAA,EAAKG,OAAN,CAAaC,OAAQ,GAAIC,SAAU,GACjCnF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACwF,EAAD,MACA1F,EAAAC,EAAAC,cAACyF,EAAD,SAIN3F,EAAAC,EAAAC,cAAC0F,EAAD,cApCU7E,qBCdZ8E,EAAe,CACnB9I,OAAQ,GACRyB,OAAQ,ICFJqH,EAAe,CACnBvJ,IAAK,yIACLgH,cAAe,CACb,yIACA,yIACA,2ICLEuC,GAAe,CACnB9H,SAAU,GACVN,EAAG,GACHC,EAAG,GACHC,EAAG,GACHK,MAAO,GACPe,SAAU,EACVG,cAAe,ICDF4G,eAAgB,CAC7B/I,OHFa,WAAkC,IAAjCkE,EAAiC8E,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,EAAcI,EAAWF,UAAA1I,OAAA,EAAA0I,UAAA,QAAAC,EAC/C,OAAOC,EAAOhI,MACZ,IAAK,gBACH,OAAOuD,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACElE,OAAQkJ,EAAO/H,QACfM,OAAQ,aAEZ,IAAK,iBACH,OAAOgD,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACEzC,OAAQyH,EAAOzH,SAEnB,IAAK,eACH,OAAOgD,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACElE,OAAQkJ,EAAOlJ,SAEnB,IAAK,mBAcH,OAAOyE,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACIlE,OAdJ,SAA6BoJ,EAAOF,GAClC,OAAOE,EAAMnJ,IAAI,SAACoJ,EAAM1G,GACtB,OAAIA,IAAUuG,EAAOvG,MAEZ0G,EAGF5E,OAAA0E,EAAA,EAAA1E,CAAA,GACF4E,EACAH,EAAOG,QAKJC,CAAoBpF,EAAMlE,OAAQkJ,EAAO7G,eAEvD,QACC,OAAO6B,IG9BV1C,MCRa,WAAwB,IAAvB0C,EAAuB8E,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAA1I,OAAA,EAAA0I,UAAA,QAAAC,EACrC,OAAOC,EAAOhI,MACZ,IAAK,sBACH,OAAOgI,EAAO1H,MAChB,QACC,OAAO0C,IDIV3E,IFAa,WAAkC,IAAjC2E,EAAiC8E,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,EAAcI,EAAWF,UAAA1I,OAAA,EAAA0I,UAAA,QAAAC,EAC/C,OAAOC,EAAOhI,MACZ,IAAK,aACJ,OAAOuD,OAAA0E,EAAA,EAAA1E,CAAA,GACFP,EADL,CAEE3E,IAAK2J,EAAO3J,MAEd,IAAK,eACJ,OAAOkF,OAAA0E,EAAA,EAAA1E,CAAA,GACFP,EADL,CAEE3E,IAAK2J,EAAO3J,IACZgK,WAAYL,EAAO3J,MAErB,IAAK,UACJ,OAAOkF,OAAA0E,EAAA,EAAA1E,CAAA,GACFP,EADL,CAEEqC,cAAerC,EAAMqC,cAAciD,OAAON,EAAO3J,OAOtD,QACC,OAAO2E,IEvBVC,UDAa,WAAkC,IAAjCD,EAAiC8E,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAcI,EAAWF,UAAA1I,OAAA,EAAA0I,UAAA,QAAAC,EAC/C,OAAOC,EAAOhI,MACZ,IAAK,kBACH,OAAOuD,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACElD,SAAUkI,EAAOlI,SACjBN,EAAGwI,EAAOxI,EACVC,EAAGuI,EAAOvI,EACVC,EAAGsI,EAAOtI,EACVK,MAAOiI,EAAOjI,QAEhB,IAAK,qBAIL,IAAK,sBACH,OAAOwD,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACElC,SAAUkH,EAAOlH,WAErB,IAAK,kBACH,OAAOyC,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACEjD,MAAOiI,EAAOjI,QAElB,IAAK,iBACH,OAAOwD,OAAA0E,EAAA,EAAA1E,CAAA,GAAIP,EAAX,CACE/B,cAAe+G,EAAO/G,gBAE5B,QACC,OAAO+B,MG5BNuF,GAAQC,YAAYC,GAAUC,YAAgBC,MAEpDC,IAASC,OACP9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAUP,MAAOA,IACfxG,EAAAC,EAAAC,cAAC8G,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.2fa57b56.chunk.js","sourcesContent":["import axios from 'axios';\nconst Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\nexport const analyzeImage = (url) => dispatch => {\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(function(response) {\n      const hexColors = [];\n      response.outputs[0].data.colors.map(color => {\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n      });\n      fetch('/api/colormind?colors=' + hexColors)\n        .then(res => res.json())\n        .then(function (response) {\n          let RGBtoHexData = [];\n          let colorMindResponse = response;\n          for (let i = 0; i < colorMindResponse.length; i++) {\n            RGBtoHexData.push({\n              hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n              alpha: 1\n            });\n          }\n        // console.log(RGBtoHexData);\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        error: err.data.status.details\n    });\n  })\n};\n\n//add error handling\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n};\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n};\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n};\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n};\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n};\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n};\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n};\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n};\n\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n};\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader} from 'semantic-ui-react'\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    this.props.clearRecieved();\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    this.props.analyzeImage(this.props.url);\n  };\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div key={color.hexColor} className=\"color-square-container\">\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          >\n          </div>\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\">\n            <i className=\"fas fa-caret-up fa-3x\"></i>\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <div>\n      {this.colorsRender()}\n    </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport Popup from 'reactjs-popup';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\n\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    };\n  }\n\n  submitURL(event) {\n    event.preventDefault();\n    console.log(this.state.input);\n    // add error handle in case of bad url\n    this.props.analyzeImage(this.state.input);\n    this.props.changeMainImage(this.state.input);\n    this.props.addImageSelection(this.state.input);\n    //clear inputbar on submit\n    this.setState({input: ''});\n  };\n\n  render() {\n    return (\n      <Popup\n        trigger={<button className=\"modal-btn\"> Try Your Own Image </button>}\n        modal\n        closeOnDocumentClick\n      >\n        {close => (\n          <div>\n            <h3>Try your own image</h3>\n              <form>\n                <div className=\"ui action input\">\n                  <input\n                    className=\"url-input\"\n                    type=\"text\"\n                    onChange={event => this.setState({input: event.target.value})}\n                    value={this.state.input}\n                    placeholder=\"Copy and paste Url...\"\n                  />\n                  <button\n                    onClick={event => {\n                      this.submitURL(event);\n                      close();\n                    }}\n                    className=\"ui button\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n          </div>\n          )\n        }\n      </Popup>\n    );\n  }\n}\n\nexport default connect(null, { analyzeImage, changeMainImage, addImageSelection })(Modal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport  Modal from './Modal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div className=\"circle\">\n            <i\n              id=\"delete-img\"\n              className=\"fas fa-times-circle\"\n            />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <div className=\"image-modal-container\">\n        <div className=\"images-container\">\n          {this.renderImages()}\n        </div>\n        <div className=\"modal-container\">\n          <Modal />\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  analyzeImage })(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  render() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{ marginRight: 4 + 'em' }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChange={ this.handleChange }\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\n\nclass ColorInfo extends Component {\n\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.a}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { updateHexColor })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React from 'react';\nimport { Button } from 'semantic-ui-react'\n\nconst SavePalette = () => {\n  return (\n      <Button\n        className=\"save-pallette\"\n        content=\"Save Palette\"\n      />\n  );\n}\n\nexport default SavePalette;\n","import React from 'react';\n\nconst Footer = ({url}) => {\n  return(\n    <div className=\"footer\">\n      © 2019\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Grid, Header } from 'semantic-ui-react';\nimport './App.css';\n\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container textAlign='center'>\n        <Header as=\"h1\" className=\"header\">\n          Choose a picture and analyze\n        </Header>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column mobile={16} computer={3}>\n              <ImageSelection />\n            </Grid.Column>\n            <Grid.Column mobile={16} computer={13}>\n              <ImageMain />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <ColorsList />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column mobile={16} computer={10}>\n              <ColorPicker />\n            </Grid.Column>\n            <Grid.Column mobile={10} computer={6}>\n              <ColorInfo />\n              <Regenerate />\n              <SavePalette />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: 'recieved'\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1520633946251-dcf52b0276b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1520633946251-dcf52b0276b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n     case 'RANDOM_IMAGE':\n      return {\n        ...state,\n        url: action.url,\n        random_url: action.url\n      };\n      case 'ADD_URL':\n       return {\n         ...state,\n         exampleImages: state.exampleImages.concat(action.url)\n       };\n       // case 'REMOVE_IMG':\n       //  return {\n       //    ...state,\n       //    exampleImages: state.exampleImages.concat(action.url)\n       //  };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport clarifaiErrorReducer from './clarifaiErrorReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  error: clarifaiErrorReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer\n});\n","export default (state = [], action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE_ERROR':\n      return action.error\n    default:\n     return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}