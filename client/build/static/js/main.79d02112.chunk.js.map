{"version":3,"sources":["images/FujiExample.jpg","images/DabinExample.jpg","images/CameraExample.jpg","images/BladeRunnerExample.jpg","images/Save_Preview.jpg","config/keys.js","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingIcons.js","components/LandingPageExampleSets.js","components/SaveExample.js","components/HowItWorks.js","components/LandingPage.js","actions/convertRGB.js","actions/colorInfoActions.js","components/EditModalColorInfo.js","components/EditModal.js","components/ConfirmDeleteModal.js","components/EllipseMenu.js","components/MyPallettes.js","components/Footer.js","actions/index.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","clarifaiID","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","verifyPassword","email","userNamePlaceHolder","passWordPlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","password","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","color","onClick","isLoading","Dimmer","active","inverted","Loader","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","Content","style","errorMessage","onSubmit","buttonSubmit","verifyPasswordRender","renderLoader","Component","connect","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","console","log","response","callAPI","get","concat","Logout","clearColors","react_router_dom","to","logout","user","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Authenticated","components_Logout","components_LoginModal","as","Link","minHeight","padding","children","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","myPalettesMenuItemRender","Pusher","dimmed","Segment","textAlign","sideBarStyles","Container","Icon","position","loginRender","isAuthenticated","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","borderless","myPalettesRender","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","columns","verticalAlign","Column","width","Header","LandingIcons","margin","Row","renderOneColorSet","set","map","index","backgroundColor","LandingPageExampleSets","exampleSets","FujiExample","DabinExample","CameraExample","BladeRunnerExample","computer","tablet","mobile","Image","src","SaveExample","reversed","centered","SavedPalettesExample","HowItWorks","stackable","href","rel","LandingPage","components_LandingPageExample","components_LandingIcons","components_LandingPageExampleSets","components_SaveExample","components_HowItWorks","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","sendColorInfo","hexColor","alpha","R","G","hexToG","B","hexToB","clearRecieved","status","sendPositionInfo","clearPosition","sendSelectedColor","selectedColor","sendAlphaInfo","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","colors","EditModal","title","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","openEdit","cancel","closeEdit","handleConfirm","UpdateData","updateColorPalette","objectID","react_color_lib","marginRight","r","g","b","onChangeComplete","handleOnClickSquare","opacity","cursor","renderCarot","newHexColor","trim","length","label","handleTitleInput","renderColorPicker","components_EditModalColorInfo","Actions","myPalettes","Data","id","colorSet","put","ConfirmDelete","deleteColorPalette","content","deleteColor","DeleteColor","delete","DropdownExampleIcon","Dropdown","simple","icon","components_EditModal","ConfirmDeleteModal","MyPallettes","getColors","prevProps","palette","_id","EllipseMenu","url","renderPalettes","addColor","AddColor","updateColor","UpdateColor","loading","Footer","Clarifai","app","App","apiKey","analyzeImage","models","predict","hexColors","outputs","push","raw_hex","slice","fetch","json","RGBtoHexData","colorMindResponse","i","loader","errorData","details","changeMainImage","ColorsList","renderColor","height","renderLoaderHeight","colorsRender","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","renderURLinput","renderSubmitButton","renderErrorMessage","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","newColorSet","ColorInfo","defaultValue","readOnly","Regenerate","SavePalette","placeHolder","newColorPalette","setError","marginLeft","handleConfirmClick","renderConfirmButton","HomePage","components_SavePalette","Popup","trigger","basic","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","savepaletteRender","loadUser","lib_default","debug","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.79d02112.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FujiExample.647af6bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DabinExample.221dac11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CameraExample.d7b0995e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BladeRunnerExample.df8cfb47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Save_Preview.bc263099.jpg\";","module.exports = {\n  clarifaiID: 'bd8644854b19417dacdfa3adba21aab1'\n}\n","import axios from \"axios\";\n\n// Check token & load user\nexport const loadUser = () => dispatch => {\n  // User loading\n  dispatch({ type: \"USER_LOADING\" });\n\n  axios\n    .get(\"/api/auth/user\", tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  // Show loading bubble in user register\n  dispatch({ type: \"USER_LOADING\" });\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log(\"register fail!\");\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"REGISTER_FAIL\"\n      });\n    });\n};\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // Show loading bubble in login\n  dispatch({ type: \"USER_LOADING\" });\n\n  // headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log(\"login fail!\");\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"LOGIN_FAIL\"\n      });\n    });\n};\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: \"LOGOUT_SUCCESS\"\n  };\n};\n\n// Set up local storage for tokens\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem(\"token\");\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n\n// Modal Actions\nexport const openModal = () => {\n  return {\n    type: \"OPEN_MODAL\"\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\"\n  };\n};\n\n// Logout User\nexport const clearErrors = () => {\n  return {\n    type: \"CLEAR_ERRORS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/authActions\";\nimport { loginUser } from \"../actions/authActions\";\nimport { openModal } from \"../actions/authActions\";\nimport { closeModal } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/authActions\";\nimport \"./css/loginModal.css\";\nimport { Button, Modal, Input, Menu, Dimmer, Loader } from \"semantic-ui-react\";\n\nconst Isemail = require(\"isemail\");\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    activeItem: \"Log In\",\n    header: \"Log In to Color Pic\",\n    button: \"Log In\",\n    verifyPassword: \"\",\n    email: \"\",\n    userNamePlaceHolder: \"\",\n    passWordPlaceHolder: \"\",\n    description: \"\",\n    errorStatusPassword: false,\n    errorMsgPassword: \"\",\n    errorStatusEmail: false,\n    errorMsgEmail: \"\"\n  };\n\n  showLogin = size => () => {\n    this.setState({\n      activeItem: \"Log In\",\n      header: \"Log In to Color Pic\",\n      button: \"Log In\",\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\n      passWordPlaceHolder: \"Demo Password: demo\",\n      description: \"\"\n    });\n    this.props.openModal();\n    this.props.clearErrors();\n  };\n\n  showSignup = size => () => {\n    this.setState({\n      activeItem: \"Sign Up\",\n      header: \"Join Color Pic\",\n      button: \"Sign Up\",\n      userNamePlaceHolder: \"Register new user\",\n      passWordPlaceHolder: \"Password\",\n      description: \"Register to access more features\"\n    });\n    this.props.openModal();\n    this.props.clearErrors();\n  };\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\"\n    });\n    this.props.closeModal();\n    this.props.clearErrors();\n  };\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: \"Log In to Color Pic\",\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\",\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\n      passWordPlaceHolder: \"Demo Password: demo\",\n      description: \"\"\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  };\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: \"Join Color Pic Today\",\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\",\n      userNamePlaceHolder: \"Register New User\",\n      passWordPlaceHolder: \"Password\",\n      description: \"Register to access more features\"\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  };\n\n  // clear all error messages\n  resetDefaults() {\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: \"\",\n      errorMsgPassword: \"\"\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (\n      this.state.email === \"\" &&\n      this.state.password === \"\" &&\n      this.state.verifyPassword === \"\"\n    ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail: \"Email cannot be empty\",\n        errorMsgPassword: \"Passwords cannot be empty\"\n      });\n      return;\n    }\n\n    // If email is empty\n    if (this.state.email === \"\") {\n      this.setState({\n        errorMsgEmail: \"Email cannot be empty\",\n        errorStatusEmail: true\n      });\n      return;\n    }\n\n    // If either password is empty on Sign Up\n    if (this.state.activeItem === \"Sign Up\" && this.state.password === \"\") {\n      this.setState({\n        errorMsgPassword: \"Password cannot be empty\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // If Login Password is empty\n    if (this.state.activeItem === \"Log In\" && this.state.password === \"\") {\n      this.setState({\n        errorMsgPassword: \"Please enter password\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // If passwords do not match show error message\n    if (\n      this.state.activeItem === \"Sign Up\" &&\n      this.state.password !== this.state.verifyPassword\n    ) {\n      this.setState({\n        errorMsgPassword: \"Passwords do not match\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // Validate Email\n    if (\n      this.state.activeItem === \"Sign Up\" &&\n      Isemail.validate(this.state.email) === false\n    ) {\n      this.setState({\n        errorStatusEmail: \"error\",\n        errorMsgEmail: \"Not a valid email\"\n      });\n      return;\n    }\n\n    // If Sign Up and No errors statuses\n    if (this.state.activeItem === \"Sign Up\") {\n      this.props.registerUser(this.state.email, this.state.password);\n    }\n\n    // If Log In and No errors statuses\n    if (this.state.activeItem === \"Log In\") {\n      this.props.loginUser(this.state.email, this.state.password);\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if (this.state.activeItem === \"Sign Up\") {\n      return (\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, \"verifyPassword\")}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return (\n        <Button color=\"blue\" onClick={this.showSignup()} className=\"btn-two\">\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  renderLoader() {\n    if (this.props.isLoading === true) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"big\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const {\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      passWordPlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail\n    } = this.state;\n\n    return (\n      <div>\n        <Button className=\"login-btn-menu\" onClick={this.showLogin()}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal\n          size=\"tiny\"\n          open={this.props.modal}\n          onClose={this.close}\n          closeIcon\n        >\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name=\"Log In\"\n              active={activeItem === \"Log In\"}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name=\"Sign Up\"\n              active={activeItem === \"Sign Up\"}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <h5>{description}</h5>\n              <h5 style={{ color: \"red\" }}>{this.props.errorMessage}</h5>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, \"email\")}\n                error={errorStatusEmail}\n              />\n              <p style={{ color: \"red\" }}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder={passWordPlaceHolder}\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, \"password\")}\n                error={errorStatusPassword}\n              />\n              <p style={{ color: \"red\" }}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    errorMessage: state.errors.message,\n    modal: state.auth.modal,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    registerUser,\n    loginUser,\n    openModal,\n    closeModal,\n    clearErrors\n  }\n)(LoginModal);\n","import axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\n\nconst callAPI = (email, dispatch) => {\n  // Data Loading\n  dispatch({ type: \"COLORS_LOADING\" });\n\n  axios\n    .get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: \"GET_COLORS\",\n        payload: res.data\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Get user color palettes\nexport const getColors = email => dispatch => {\n  callAPI(email, dispatch);\n};\n\n// Add color palettes\nexport const newColorPalette = (colorSet, email) => dispatch => {\n  axios\n    .post(\"/api/colors\", colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"ADD_COLORS\",\n        payload: res.data\n      })\n    )\n    .catch(error => {\n      console.log(error);\n    })\n    .then(() => {\n      callAPI(email, dispatch);\n    });\n};\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\n  axios\n    .put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"UPDATE_COLORS\",\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error);\n    })\n    .then(() => {\n      callAPI(email, dispatch);\n    });\n};\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios\n    .delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"DELETE_COLORS\",\n        payload: id\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Clear Colors\nexport const clearColors = () => {\n  return {\n    type: \"CLEAR_PALETTE_COLORS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { clearColors } from \"../actions/MyPaletteAPI\";\nimport \"./css/logout.css\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    // If token expired log out user\n    if (this.props.email === undefined) {\n      this.props.logoutUser();\n    }\n  }\n\n  logout(event) {\n    this.props.logoutUser();\n    this.props.clearColors();\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"username\">Welcome! {this.props.email}</p>\n        <Link to=\"/\">\n          <Button\n            color=\"blue\"\n            className=\"logout-btn\"\n            onClick={event => this.logout(event)}\n          >\n            Log Out\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, clearColors }\n)(Logout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport Logout from \"./Logout\";\nimport { logoutUser } from \"../actions/authActions\";\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesMenuItemRender() {\n    if (this.props.Authenticated === true) {\n      return (\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          My Palettes\n        </Menu.Item>\n      );\n    }\n  }\n\n  sideBarStyles() {\n    if (this.props.Authenticated === true) {\n      return { minHeight: 122, padding: \"1em 0em\" };\n    } else {\n      return { minHeight: 82, padding: \"0em 0em\" };\n    }\n  }\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to=\"/\">\n            Color Pic\n          </Menu.Item>\n          <Menu.Item as={Link} to=\"/Generate\">\n            Generate\n          </Menu.Item>\n          {this.myPalettesMenuItemRender()}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment textAlign=\"center\" style={this.sideBarStyles()} vertical>\n            <Container>\n              <Menu pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n                <Menu.Item position=\"right\">{this.loginRender()}</Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(MobileContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport Logout from \"./Logout\";\nimport { logoutUser } from \"../actions/authActions\";\nimport {\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Dimmer,\n  Loader,\n  Container\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => {\n    this.setState({ fixed: false });\n  };\n  showFixedMenu = () => {\n    this.setState({ fixed: true });\n  };\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return (\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          <h5>My Palettes</h5>\n        </Menu.Item>\n      );\n    }\n  }\n\n  renderLoader() {\n    if (this.props.isLoading === true) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"small\" inverted />\n        </Dimmer>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment className=\"menu-container\" textAlign=\"center\" vertical>\n            <Menu className=\"menu-small\" size=\"small\" borderless>\n              <Container>\n                <Menu.Item as={Link} to=\"/\">\n                  <h5>Color Pic</h5>\n                </Menu.Item>\n                <Menu.Item as={Link} to=\"/Generate\">\n                  <h5>Generate</h5>\n                </Menu.Item>\n                {this.myPalettesRender()}\n                <Menu.Item position=\"right\">\n                  {this.loginRender()}\n                  {this.renderLoader()}\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(DesktopContainer);\n","import React from \"react\";\nimport MobileContainer from \"./MobileContainer\";\nimport DesktopContainer from \"./DesktopContainer\";\nimport \"./css/headerMenu.css\";\n\nconst HeaderMenu = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/landingPage.css\";\nimport { Grid, Segment, Header, Button } from \"semantic-ui-react\";\n\nconst LandingPageExample = () => {\n  return (\n    <div className=\"dark-landing\">\n      <Grid columns={1} verticalAlign=\"middle\" className=\"grid-size\">\n        <Grid.Column width={16} textAlign=\"center\">\n          <Segment className=\"dark-landing\">\n            <Header as=\"h1\" className=\"landing-header\">\n              Fast and Efficient color palettes generator\n            </Header>\n            <p className=\"text-style\">Create, edit, and save schemes</p>\n            <Link to=\"/Generate\">\n              <Button color=\"blue\" className=\"landing-btn\">\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default LandingPageExample;\n","import React from \"react\";\nimport { Icon, Grid } from \"semantic-ui-react\";\n\nconst LandingIcons = () => {\n  return (\n    <Grid columns={3} style={{ margin: \"4em 0em\" }}>\n      <Grid.Row>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"image outline\" size=\"huge\" />\n          <h3>Capture colors from Images</h3>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"adjust\" size=\"huge\" />\n          <h3>Adjust colors and refine palette</h3>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"save\" size=\"huge\" />\n          <h3>Save palettes for future reference</h3>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LandingIcons;\n","import React from \"react\";\nimport FujiExample from \"../images/FujiExample.jpg\";\nimport DabinExample from \"../images/DabinExample.jpg\";\nimport CameraExample from \"../images/CameraExample.jpg\";\nimport BladeRunnerExample from \"../images/BladeRunnerExample.jpg\";\nimport { Grid, Image } from \"semantic-ui-react\";\n\nconst renderOneColorSet = set => {\n  let colorSet = set.map((color, index) => (\n    <div className=\"color-square-container\" key={color + index}>\n      <div className=\"color-square\" style={{ backgroundColor: color }} />\n    </div>\n  ));\n  return colorSet;\n};\n\nconst LandingPageExampleSets = () => {\n  const exampleSets = [\n    { FujiExample: [\"#ECE3E0\", \"#252C32\", \"#6A707E\", \"#53262E\", \"#B81F34\"] },\n    { DabinExample: [\"#684C56\", \"#EDDFD0\", \"#87AC95\", \"#AA8489\", \"#884B86\"] },\n    { CameraExample: [\"#26221A\", \"#3D464F\", \"#96BBDC\", \"#74AACB\", \"#867D80\"] },\n    {\n      BladeRunnerExample: [\n        \"#804C27\",\n        \"#F7AC49\",\n        \"#CD6622\",\n        \"#7A2717\",\n        \"#2C2022\"\n      ]\n    }\n  ];\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column\n          className=\"column-overide-left\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={FujiExample} />\n          {renderOneColorSet(exampleSets[0].FujiExample)}\n        </Grid.Column>\n        <Grid.Column\n          className=\"column-overide-right\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={DabinExample} />\n          {renderOneColorSet(exampleSets[1].DabinExample)}\n        </Grid.Column>\n        <Grid.Column\n          className=\"column-overide-left\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={CameraExample} />\n          {renderOneColorSet(exampleSets[2].CameraExample)}\n        </Grid.Column>\n        <Grid.Column\n          className=\"column-overide-right\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={BladeRunnerExample} />\n          {renderOneColorSet(exampleSets[3].BladeRunnerExample)}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LandingPageExampleSets;\n","import React from \"react\";\nimport SavedPalettesExample from \"../images/Save_Preview.jpg\";\nimport { Grid, Image, Header } from \"semantic-ui-react\";\n\nconst SaveExample = () => {\n  return (\n    <div className=\"save-example-container\">\n      <Grid reversed=\"tablet computer\" verticalAlign=\"middle\" centered>\n        <Grid.Row>\n          <Grid.Column computer={4} tablet={5} mobile={16}>\n            <Header as=\"h1\" className=\"save-header\" textAlign=\"center\">\n              Create Your Own Gallery\n            </Header>\n          </Grid.Column>\n          <Grid.Column\n            className=\"save-example-img\"\n            computer={12}\n            tablet={11}\n            mobile={16}\n          >\n            <Image src={SavedPalettesExample} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SaveExample;\n","import React from \"react\";\nimport { Header, Grid, Icon } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst HowItWorks = () => {\n  return (\n    <Grid stackable columns={2} verticalAlign=\"middle\" centered>\n      <Grid.Row className=\"explanation-container\">\n        <Grid.Column textAlign=\"center\" computer={5} tablet={6} mobile={16}>\n          <Header as=\"h1\" className=\"explanation-header\" textAlign=\"center\">\n            How it Works\n          </Header>\n        </Grid.Column>\n        <Grid.Column computer={11} tablet={10} mobile={16}>\n          <p className=\"explanation-text\">\n            The Color Pic application uses image recognition from{\" \"}\n            <a\n              href=\"https://www.clarifai.com/models/color-image-recognition-model-eeed0b6733a644cea07cf4c60f87ebb7\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Clarifai\n            </a>{\" \"}\n            to predict what the dominant colors are in a given picture. The\n            colors are then sent to{\" \"}\n            <a\n              href=\"http://colormind.io/blog/extracting-colors-from-photos-and-video/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Colormind\n            </a>{\" \"}\n            to generate a suggested color palette, it searches for colors that\n            work well together. This works in a semi-random way, so hit\n            regenerate to see a different color set each time.\n          </p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default HowItWorks;\n","import React from \"react\";\nimport LandingPageExample from \"./LandingPageExample\";\nimport LandingIcons from \"./LandingIcons\";\nimport LandingPageExampleSets from \"./LandingPageExampleSets\";\nimport SaveExample from \"./SaveExample\";\nimport HowItWorks from \"./HowItWorks\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <div className=\"dark-landing\">\n        <Container>\n          <LandingPageExample />\n        </Container>\n      </div>\n      <Container>\n        <LandingIcons />\n        <LandingPageExampleSets />\n        <SaveExample />\n        <HowItWorks />\n      </Container>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","// Convert Hex to RGB functions\nexport const hexToR = h => {\n  return parseInt(cutHex(h).substring(0, 2), 16);\n};\n\nexport const hexToG = h => {\n  return parseInt(cutHex(h).substring(2, 4), 16);\n};\n\nexport const hexToB = h => {\n  return parseInt(cutHex(h).substring(4, 6), 16);\n};\n\nconst cutHex = h => {\n  return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n};\n\n// Convert RGB to Hex functions\nexport const rgbToHex = (R, G, B) => {\n  return \"#\" + toHex(R) + toHex(G) + toHex(B);\n};\n\nexport const toHex = n => {\n  n = parseInt(n, 10);\n  if (isNaN(n)) return \"00\";\n  n = Math.max(0, Math.min(n, 255));\n  return (\n    \"0123456789ABCDEF\".charAt((n - (n % 16)) / 16) +\n    \"0123456789ABCDEF\".charAt(n % 16)\n  );\n};\n","import { hexToR } from \"./convertRGB\";\nimport { hexToG } from \"./convertRGB\";\nimport { hexToB } from \"./convertRGB\";\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: \"SEND_COLOR_INFO\",\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  });\n};\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_RECIEVED\",\n    status: \"\"\n  });\n};\n\nexport const sendPositionInfo = position => dispatch => {\n  dispatch({\n    type: \"SEND_POSITION_INFO\",\n    position: position\n  });\n};\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_POSITION_INFO\",\n    position: 0\n  });\n};\n\nexport const sendSelectedColor = color => dispatch => {\n  dispatch({\n    type: \"SELECTED_COLOR\",\n    selectedColor: color\n  });\n};\n\nexport const sendAlphaInfo = alpha => dispatch => {\n  dispatch({\n    type: \"SEND_ALPHA_INFO\",\n    alpha: alpha\n  });\n};\n\nexport const updateHexColor = newColorSet => dispatch => {\n  dispatch({\n    type: \"UPDATE_HEX_COLOR\",\n    newColorSet: newColorSet\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render() {\n    const { hexInput, R, G, B, alpha } = this.props;\n\n    return (\n      <div className=\"color-info\">\n        <h5>Hex</h5>\n        <input\n          className=\"hex-info-input\"\n          value={hexInput}\n          onChange={event => this.props.hexColorOnChange(event)}\n        />\n        <p className=\"info-text\">R</p>\n        <p className=\"info-text\">G</p>\n        <p className=\"info-text\">B</p>\n        <p className=\"info-text\">a</p>\n        <div>\n          <input\n            className=\"info-input\"\n            value={R}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={G}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={B}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={alpha}\n            onChange={event => this.handleChange(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(EditModalColorInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ChromePicker } from \"react-color\";\nimport { updateColorPalette } from \"../actions/MyPaletteAPI\";\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\nimport EditModalColorInfo from \"./EditModalColorInfo\";\nimport { Button, Modal, Icon, Input, Grid, Segment } from \"semantic-ui-react\";\nimport \"./css/myPalettes.css\";\n\nclass EditModal extends Component {\n  state = {\n    title: \"\",\n    selectedSet: [],\n    hexInput: \"\"\n  };\n\n  componentDidMount() {\n    // send info to local state when modal opens\n    const position = this.props.colorPosition;\n    this.setState({\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n  }\n\n  handleTitleInput(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({ hexInput: color });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = color => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor;\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    });\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  };\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker-edit\"\n        style={{ marginRight: 4 + \"em\" }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) => (\n      <div className=\"color-square-container\" key={color.hexColor + index}>\n        <div\n          className=\"color-square\"\n          onClick={() =>\n            this.handleOnClickSquare(color.hexColor, index, color.alpha)\n          }\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: \"pointer\"\n          }}\n        />\n        <div style={this.renderCarot(index)} className=\"carot-container\">\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n    ));\n    return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: \"black\"\n      };\n    } else {\n      return {\n        color: \"white\"\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if (newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === \"#\") {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor;\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = dimmer => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(\n      this.props.data[position].colors[0].hexColor,\n      this.props.data[position].colors[0].alpha\n    );\n    //open state moved to parent component\n    this.props.openEdit();\n  };\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    //open state moved to parent component\n    this.props.closeEdit();\n    this.props.clearPosition();\n  };\n\n  handleConfirm = () => {\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(\n      this.props.objectID,\n      UpdateData,\n      this.props.email\n    );\n    this.props.clearPosition();\n    this.props.closeEdit();\n  };\n\n  render() {\n    const { dimmer, title, hexInput, selectedSet } = this.state;\n    return (\n      <div className=\"edit-modal edit-icon-div\">\n        <Icon\n          className=\"edit-icon\"\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <p className=\"edit-text\">Edit</p>\n        <Modal\n          open={this.props.open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Input\n              className=\"modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder=\"Edit Palette Name...\"\n            />\n            <div>{this.renderOneColorSet()}</div>\n            <Grid textAlign=\"center\" stackable columns={2}>\n              <Grid.Column computer={10} tablet={9}>\n                <Segment>{this.renderColorPicker()}</Segment>\n              </Grid.Column>\n              <Grid.Column computer={6} tablet={7}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>Cancel</Button>\n            <Button onClick={this.handleConfirm} color=\"blue\">\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateColorPalette,\n    sendPositionInfo,\n    sendSelectedColor,\n    sendColorInfo,\n    sendAlphaInfo,\n    clearPosition\n  }\n)(EditModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Modal, Button } from \"semantic-ui-react\";\nimport { deleteColorPalette } from \"../actions/MyPaletteAPI\";\nimport \"./css/confirmDeleteModal.css\";\n\nclass ConfirmDelete extends Component {\n  handleConfirm = () => {\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.props.close();\n  };\n\n  render() {\n    return (\n      <div>\n        <p onClick={this.props.openModal}>\n          <Icon name=\"trash\" />\n          Delete\n        </p>\n        <Modal size=\"tiny\" open={this.props.open} onClose={this.props.close}>\n          <Modal.Content>\n            <p>{`Are you sure you want to delete ${\n              this.props.title\n            } palette?`}</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.props.close}>Cancel</Button>\n            <Button\n              onClick={this.handleConfirm}\n              color=\"blue\"\n              content=\"Confirm\"\n            />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { deleteColorPalette }\n)(ConfirmDelete);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport EditModal from \"./EditModal\";\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\nimport { Dropdown, Menu } from \"semantic-ui-react\";\n\nclass DropdownExampleIcon extends Component {\n  state = {\n    open: false,\n    openEdit: false\n  };\n\n  openModal() {\n    // Default padding cannot be overriden easily, closes dropdown by default\n    // Set dropdown item onClick open just in case user clicks edges\n    // Only set to true if open state is already false i.e closed\n    if (this.state.open === true) {\n      return;\n    } else {\n      this.setState({ open: true });\n    }\n  }\n\n  closeModal() {\n    this.setState({ open: false });\n  }\n\n  openEdit() {\n    if (this.state.openEdit === true) {\n      return;\n    } else {\n      // send color info for first square when model opens\n      const position = this.props.colorPosition;\n      this.props.sendColorInfo(\n        this.props.data[position].colors[0].hexColor,\n        this.props.data[position].colors[0].alpha\n      );\n      this.setState({ openEdit: true });\n    }\n  }\n\n  closeEdit() {\n    this.setState({ openEdit: false });\n  }\n\n  render() {\n    return (\n      <Menu className=\"menu-parent\">\n        <Menu.Menu position=\"right\">\n          <Dropdown\n            simple\n            className=\"icon menu-styles\"\n            icon=\"ellipsis vertical\"\n          >\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => this.openEdit()}>\n                <EditModal\n                  open={this.state.openEdit}\n                  openEdit={() => this.openEdit()}\n                  closeEdit={() => this.closeEdit()}\n                  title={this.props.title}\n                  objectID={this.props.objectID}\n                  colorPosition={this.props.colorPosition}\n                  selectedSet={this.props.selectedSet}\n                />\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.openModal()}>\n                <ConfirmDeleteModal\n                  title={this.props.title}\n                  objectID={this.props.objectID}\n                  open={this.state.open}\n                  openModal={() => this.openModal()}\n                  close={() => this.closeModal()}\n                />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { sendColorInfo }\n)(DropdownExampleIcon);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getColors } from \"../actions/MyPaletteAPI\";\nimport { logoutUser } from \"../actions/authActions\";\nimport EllipseMenu from \"./EllipseMenu\";\nimport { Header, Container, Grid, Image } from \"semantic-ui-react\";\nimport \"./css/myPalettes.css\";\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors(this.props.email);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (\n      this.props.email !== prevProps.email &&\n      this.props.email !== undefined\n    ) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  // Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map((color, index) => (\n      <div\n        className=\"color-square-container column\"\n        key={color.hexColor + index}\n      >\n        <div\n          className=\"color-square\"\n          style={{ backgroundColor: color.hexColor, opacity: color.alpha }}\n        />\n      </div>\n    ));\n    return <div style={{ margin: \"0px auto\" }}>{colorSet}</div>;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) => (\n        <Grid.Column key={palette._id}>\n          <div className=\"palette-container\">\n            <h5 className=\"image-header\">{palette.title}</h5>\n            <div className=\"ellipsisMenu\">\n              <EllipseMenu\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </div>\n            <Image src={palette.url} centered />\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      ));\n      return Palettes;\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as=\"h1\" className=\"palette-header\">\n          My Color Palettes\n        </Header>\n        {/* <Grid stackable columns={3}>\n          {this.renderPalettes()}\n        </Grid> */}\n        <div className=\"ui container\">\n          <div className=\"ui three column doubling stackable masonry grid\">\n            {this.renderPalettes()}\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    loading: state.myPalettes.loading,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getColors, logoutUser }\n)(MyPallettes);\n","import React from \"react\";\nimport { Icon, Container } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst Footer = ({ url }) => {\n  return (\n    <div>\n      <Container className=\"footer\">\n        <h5 className=\"footer-header\">© 2019</h5>\n        <div className=\"icon-container\">\n          <a\n            className=\"icon-div\"\n            href=\"https://github.com/fulin426/Color-Pic\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"github\" size=\"big\" />\n          </a>\n          <a\n            className=\"icon-div\"\n            href=\"https://www.linkedin.com/in/fu-lin-liu/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"linkedin square\" size=\"big\" />\n          </a>\n          <a\n            className=\"icon-div\"\n            href=\"mailto:fulin426@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"mail\" size=\"big\" />\n          </a>\n        </div>\n        <a\n          href=\"https://fulin426.github.io/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div className=\"portfolio-link\">Portfolio</div>\n        </a>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { rgbToHex } from \"./convertRGB\";\nconst Clarifai = require(\"clarifai\");\nconst clarifaiID = require(\"../config/keys\").clarifaiID;\nconst app = new Clarifai.App({ apiKey: clarifaiID });\n\n// Califai API Call\nexport const analyzeImage = url => dispatch => {\n  // Show loading screen\n  dispatch({ type: \"CLARIFAI_REQUEST_WAITING\" });\n\n  app.models\n    .predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n    .then(res => {\n      const hexColors = [];\n      // Create new array of hexcolors from response data\n      res.outputs[0].data.colors.map(color => {\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n      });\n      // send hexcolor data as data query to back end\n      fetch(\"/api/colormind?colors=\" + hexColors)\n        .then(res => res.json())\n        .then(res => {\n          let RGBtoHexData = [];\n          let colorMindResponse = res;\n          // create new array from response data with color palette and default alpha = 1\n          for (let i = 0; i < colorMindResponse.length; i++) {\n            RGBtoHexData.push({\n              hexColor: rgbToHex(\n                colorMindResponse[i][0],\n                colorMindResponse[i][1],\n                colorMindResponse[i][2]\n              ),\n              alpha: 1\n            });\n          }\n          dispatch({\n            type: \"ANALYZE_IMAGE\",\n            payload: RGBtoHexData,\n            status: \"recieved\",\n            error: false,\n            open: false,\n            loader: \"hide\"\n          });\n        });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: \"ANALYZE_IMAGE_ERROR\",\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: \"hide\"\n      });\n    });\n};\n\n// image modal Actions\nexport const openImgModal = () => {\n  return {\n    type: \"OPEN_IMAGE_MODAL\"\n  };\n};\n\nexport const closeImgModal = () => {\n  return {\n    type: \"CLOSE_IMAGE_MODAL\"\n  };\n};\n\nexport const newImgSubmit = () => {\n  return {\n    type: \"NEW_IMAGE_SUBMIT\"\n  };\n};\n\nexport const showModalLoader = () => {\n  return {\n    type: \"CLARIFAI_REQUEST_WAITING\"\n  };\n};\n\nexport const clearImgSubmit = () => {\n  return {\n    type: \"CLEAR_IMAGE_SUBMIT\"\n  };\n};\n\nexport const sendErrorStatus = () => {\n  return {\n    type: \"SEND_ERROR\"\n  };\n};\n\nexport const clearErrorStatus = () => {\n  return {\n    type: \"CLEAR_ERROR\"\n  };\n};\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: \"MAIN_IMAGE\",\n    url: url\n  };\n};\n\nexport const addImageSelection = url => {\n  return {\n    type: \"ADD_URL\",\n    url: url\n  };\n};\n\nexport const deleteURL = url => dispatch => {\n  dispatch({\n    type: \"DELETE_URL\",\n    url: url\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { Dimmer, Loader, Grid, Icon } from \"semantic-ui-react\";\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      this.props.analyzeImage(this.props.url);\n    }\n  }\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url) {\n      this.props.analyzeImage(this.props.url);\n    }\n\n    if (this.props.status === \"recieved\") {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: \"pointer\"\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: \"black\"\n      };\n    } else {\n      return {\n        color: \"white\"\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >= 1) {\n      const ColorsList = this.props.colors.map((color, index) => (\n        <div\n          // add index in case there are of same color\n          key={color.hexColor + index}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() =>\n              this.handleOnClickSquare(color.hexColor, index, color.alpha)\n            }\n          />\n          <div style={this.renderCarot(index)} className=\"carot-container\">\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      ));\n      return ColorsList;\n    }\n  }\n\n  // Load a initial height before colors are recieved\n  renderLoaderHeight() {\n    if (this.props.colors.length === 0) {\n      return { height: 60 };\n    }\n  }\n  renderLoader() {\n    if (this.props.loader === \"show\") {\n      return (\n        <div style={this.renderLoaderHeight()}>\n          <Dimmer active inverted>\n            <Loader size=\"large\" inverted>\n              Loading Colors\n            </Loader>\n          </Dimmer>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Grid.Column width={16}>\n        {this.colorsRender()}\n        {this.renderLoader()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token,\n    loader: state.colors.loader\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    sendColorInfo,\n    sendPositionInfo,\n    sendSelectedColor,\n    clearRecieved\n  }\n)(ColorsList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Image } from \"semantic-ui-react\";\n\nconst ImageMain = ({ url }) => {\n  return (\n    <Grid.Column mobile={16} computer={13}>\n      <Image className=\"sample-img\" src={url} alt=\"analyze main\" />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { changeMainImage } from \"../actions\";\nimport { addImageSelection } from \"../actions\";\nimport { closeImgModal } from \"../actions\";\nimport { openImgModal } from \"../actions\";\nimport { newImgSubmit } from \"../actions\";\nimport { clearImgSubmit } from \"../actions\";\nimport { clearErrorStatus } from \"../actions\";\nimport { showModalLoader } from \"../actions\";\nimport { sendErrorStatus } from \"../actions\";\nimport { Button, Modal, Input, Dimmer, Loader } from \"semantic-ui-react\";\n\nclass AddImgModal extends Component {\n  state = { input: \"\" };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === \"\") {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (\n      this.checkForDuplicateUrls() === \"no duplicates\" &&\n      this.state.input !== \"\"\n    ) {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  }\n\n  checkForDuplicateUrls() {\n    for (let i = 0; i < this.props.exampleImages.length; i++) {\n      if (this.state.input === this.props.exampleImages[i]) {\n        return \"duplicate exists\";\n      }\n    }\n    return \"no duplicates\";\n  }\n\n  componentDidUpdate() {\n    if (\n      this.props.error === false &&\n      this.props.status === \"recieved\" &&\n      this.props.image === \"new\"\n    ) {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: \"\" });\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n        />\n      );\n    } else if (this.props.error !== false) {\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n        />\n      );\n    } else {\n      //everything else render normal input\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n        />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === \"\") {\n      return (\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color=\"blue\"\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color=\"blue\"\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (\n      this.props.error === true &&\n      this.state.input !== \"\" &&\n      this.checkForDuplicateUrls() === \"no duplicates\"\n    ) {\n      return <p> Please check URL and try again </p>;\n    }\n    if (this.checkForDuplicateUrls() === \"duplicate exists\") {\n      this.props.sendErrorStatus();\n      return <p> Image URL already exists. Please try a different one</p>;\n    }\n  }\n\n  renderLoader() {\n    if (this.props.loader === \"show\") {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"big\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: \"\" });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  };\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  };\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state;\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(false, true)} icon>\n          Try your own image\n        </Button>\n        <Modal\n          open={this.props.open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content className=\"add-image-modal\">\n            <h3>Try your own image</h3>\n            <form onSubmit={event => this.submitURL(event)}>\n              {this.renderURLinput()}\n              {this.renderSubmitButton()}\n            </form>\n            {this.renderErrorMessage()}\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    changeMainImage,\n    addImageSelection,\n    closeImgModal,\n    openImgModal,\n    newImgSubmit,\n    clearImgSubmit,\n    clearErrorStatus,\n    showModalLoader,\n    sendErrorStatus\n  }\n)(AddImgModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeMainImage } from \"../actions\";\nimport { analyzeImage } from \"../actions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { deleteURL } from \"../actions\";\nimport { Grid, Icon } from \"semantic-ui-react\";\nimport ImageModal from \"./ImageModal\";\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: \"3px solid #0000CC\",\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages() {\n    return this.props.exampleUrl.map(url => (\n      <div className=\"image-wrapper\" key={url}>\n        <img\n          className=\"image-selection\"\n          src={url}\n          alt=\"selection\"\n          style={this.renderBorder(url)}\n          onClick={() => this.handleClick(url)}\n        />\n        <div onClick={() => this.props.deleteURL(url)} className=\"delete-img\">\n          <Icon name=\"remove circle\" />\n        </div>\n      </div>\n    ));\n  }\n\n  render() {\n    return (\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">{this.renderImages()}</div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeMainImage,\n    clearRecieved,\n    clearPosition,\n    deleteURL,\n    analyzeImage\n  }\n)(ImageSelection);\n","import React, { Component } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\nimport { updateHexColor } from \"../actions/colorInfoActions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { Grid } from \"semantic-ui-react\";\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor;\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  };\n\n  renderColorPicker() {\n    if (this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: \"100%\",\n              marginRight: 4 + \"em\"\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return (\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateHexColor,\n    sendColorInfo,\n    sendSelectedColor,\n    sendAlphaInfo\n  }\n)(ColorPicker);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./css/colorInfo.css\";\n\nclass ColorInfo extends Component {\n  render() {\n    return (\n      <div className=\"color-info\">\n        <h5>Hex</h5>\n        <input className=\"hex-info-input\" value={this.props.hexColor} />\n        <p className=\"info-text\">R</p>\n        <p className=\"info-text\">G</p>\n        <p className=\"info-text\">B</p>\n        <p className=\"info-text\">a</p>\n        <div>\n          <input className=\"info-input\" defaultValue={this.props.R} readOnly />\n          <input className=\"info-input\" defaultValue={this.props.G} readOnly />\n          <input className=\"info-input\" defaultValue={this.props.B} readOnly />\n          <input\n            className=\"info-input\"\n            defaultValue={this.props.alpha}\n            readOnly\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(ColorInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nclass Regenerate extends Component {\n  handleClick = url => () => {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  };\n\n  render() {\n    return (\n      <Button className=\"regen-btn\" onClick={this.handleClick(this.props.url)}>\n        <Icon name=\"redo\" /> Regenerate\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    clearRecieved,\n    clearPosition\n  }\n)(Regenerate);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { newColorPalette } from \"../actions/MyPaletteAPI\";\nimport { Button, Modal, Input, Header, Icon } from \"semantic-ui-react\";\n\nclass SavePalette extends Component {\n  state = {\n    input: \"\",\n    open: false,\n    error: false,\n    placeHolder: \"New Palette Name...\"\n  };\n\n  handleInput(event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false,\n      placeHolder: \"New Palette Name...\"\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true });\n  };\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: \"\",\n      open: false,\n      error: false\n    });\n  };\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette(\n      {\n        url: this.props.url,\n        email: this.props.email,\n        title: this.state.input,\n        colors: this.props.colors\n      },\n      this.props.email\n    );\n    this.close();\n  }\n\n  setError() {\n    if (this.state.input === \"\") {\n      this.setState({\n        error: true,\n        placeHolder: \"Title Required...\"\n      });\n    }\n\n    if (this.state.input.length >= 40) {\n      this.setState({\n        error: true,\n        placeHolder: \"Over Max Characters Allowed\"\n      });\n    }\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === \"\" || this.state.input.length >= 40) {\n      return (\n        <Button\n          onClick={() => this.setError()}\n          color=\"blue\"\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return (\n        <Link to=\"/MyPallettes\">\n          <Button\n            color=\"blue\"\n            style={{ marginLeft: 0.75 + \"em\" }}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color, index) => (\n      <div key={color.hexColor + index} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    ));\n    return ColorsList;\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick,\n      error,\n      placeHolder\n    } = this.state;\n\n    return (\n      <div>\n        <Button\n          onClick={this.closeConfigShow(true, false)}\n          className=\"save-pallette\"\n          icon\n        >\n          <Icon name=\"save\" /> Save Palette\n        </Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">Save Palette</Header>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={this.state.input}\n              onChange={event => this.handleInput(event)}\n              placeholder={placeHolder}\n              error={error}\n            />\n            <div className=\"colors-render\">{this.colorsRender()}</div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { newColorPalette }\n)(SavePalette);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ColorsList from \"./ColorsList\";\nimport ImageMain from \"./ImageMain\";\nimport ImageSelection from \"./ImageSelection\";\nimport ColorPicker from \"./ColorPicker\";\nimport ColorInfo from \"./ColorInfo\";\nimport Regenerate from \"./Regenerate\";\nimport SavePalette from \"./SavePalette\";\nimport {\n  Container,\n  Grid,\n  Popup,\n  Button,\n  Icon,\n  Header\n} from \"semantic-ui-react\";\n\nclass HomePage extends Component {\n  savepaletteRender() {\n    if (this.props.Authenticated === true) {\n      return <SavePalette />;\n    } else {\n      return (\n        <Popup\n          trigger={\n            <Button className=\"save-pallette\">\n              <Icon name=\"save\" /> Save Palette\n            </Button>\n          }\n          content=\"Log In required for this feature\"\n          position=\"bottom right\"\n          size=\"large\"\n          basic\n        />\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\" className=\"generate-header\">\n            Choose a picture and analyze\n          </Header>\n          <Grid celled>\n            <Grid.Row>\n              <ImageSelection />\n              <ImageMain />\n            </Grid.Row>\n            <Grid.Row>\n              <ColorsList />\n            </Grid.Row>\n            <Grid.Row>\n              <ColorPicker />\n              <Grid.Column mobile={16} tablet={7} computer={6}>\n                <ColorInfo />\n                <div className=\"regen-save-buttons\">\n                  <Regenerate />\n                  {this.savepaletteRender()}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(HomePage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { loadUser } from \"../actions/authActions\";\nimport Analytics from \"react-router-ga\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport LandingPage from \"./LandingPage\";\nimport MyPallettes from \"./MyPallettes\";\nimport Footer from \"./Footer\";\nimport Generate from \"./Generate\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(\n      \"This app was created by Fu-Lin Liu, a web developer based out of San Francisco. I can be reached at fulin426@gmail.com\"\n    );\n    // Only load user if there is a token in local storage\n    if (localStorage.getItem(\"token\") !== null) {\n      this.props.loadUser();\n    }\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Analytics id=\"UA-135017095-3\" debug>\n          <HeaderMenu />\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/Generate\" component={Generate} />\n          <Route path=\"/MyPallettes\" component={MyPallettes} />\n          <Footer />\n        </Analytics>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { loadUser }\n)(App);\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {\n        ...state,\n        loader: 'show'\n      };\n    case 'CLEAR_RECIEVED':\n      return {\n        ...state,\n        status: action.status\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: 'new'\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: ''\n      };\n    case 'SEND_ERROR':\n      return {\n        ...state,\n        error: true\n      }\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: false\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {\n        ...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {\n        ...state,\n        open: true,\n        error: false\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {\n        ...state,\n        open: false,\n        error: false,\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\n  exampleImages: [\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/DabinExample.jpg',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: \"\",\n  DeleteColor: \"\",\n  UpdateColor: \"\",\n  loading: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_COLORS\":\n      return {\n        ...state,\n        Data: action.payload,\n        loading: false\n      };\n    case \"ADD_COLORS\":\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n    case \"UPDATE_COLORS\":\n      return {\n        ...state,\n        UpdateColor: `${action.payload} is the new update`\n      };\n    case \"DELETE_COLORS\":\n      return {\n        ...state,\n        Data: state.Data.filter(item => item._id !== action.payload),\n        DeleteColor: `${action.payload} was Deleted`\n      };\n    case \"COLORS_LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"CLEAR_PALETTE_COLORS\":\n      return {\n        ...state,\n        Data: [],\n        AddColor: \"\",\n        DeleteColor: \"\",\n        UpdateColor: \"\"\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  message: '',\n  status: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        message: action.payload.data,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: '',\n        status: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: '',\n  modal: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        modal: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: '',\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}