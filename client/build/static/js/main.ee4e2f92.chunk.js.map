{"version":3,"sources":["images/LandingPageExample.png","actions/authActions.js","components/LoginModal.js","components/MobileContainer.js","components/Logout.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingPage.js","actions/MyPaletteAPI.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/HomePageHeader.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","open","activeItem","header","button","password","verifyPassword","email","userNamePlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","showSignup","close","resetDefaults","username","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","validate","props","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","onClick","style","marginLeft","marginRight","_this3","_this$state","buttonOne","buttonTwoRender","Modal","onClose","closeIcon","Menu","pointing","secondary","Item","active","Content","onSubmit","buttonSubmit","color","verifyPasswordRender","Component","connect","dispatch","console","log","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","children","as","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","Link","to","Pusher","dimmed","Segment","textAlign","minHeight","padding","Container","Icon","components_LoginModal","Logout","display","react_router_dom","logout","Authenticated","auth","isAuthenticated","user","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","components_Logout","Visibility","once","onBottomPassed","onBottomPassedReverse","myPalettesRender","position","loginRender","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","stackable","columns","marginBottom","Column","width","Image","src","LandingPageExamplePicture","alt","height","Header","fontSize","marginTop","LandingPage","components_LandingPageExample","divided","Row","getColors","get","concat","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","title","onCancel","onConfirm","deleteColor","myPalettes","DeleteColor","id","delete","app","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","clearColorList","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","r","g","b","onChangeComplete","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","renderOneColorSet","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","prevProps","palette","_id","mobile","computer","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","Footer","href","rel","HomePageHeader","ColorsList","renderColor","Dimmer","inverted","Loader","colorsRender","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","renderURLinput","renderSubmitButton","renderErrorMessage","renderLoader","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","Regenerate","SavePalette","newColorPalette","setError","handleConfirmClick","renderTitleInput","renderConfirmButton","HomePage","components_SavePalette","components_HomePageHeader","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","savepaletteRender","loadUser","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","msg","isLoading","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","errors","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ee4e2f92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPageExample.9b6ddb1f.png\";","import axios from 'axios';\n\n// Check token & load user\nexport const loadUser = (token) => dispatch => {\n  // User loading\n  dispatch({ type: 'USER_LOADING'});\n\n  axios\n    .get('/api/auth/user', tokenConfig(token))\n    .then(res =>\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      // dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  console.log(email);\n  console.log(password);\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios.post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('register fail!')\n      dispatch({\n        type: 'REGISTER_FAIL'\n      });\n    });\n}\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password});\n\n  axios.post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: 'LOGIN_FAIL'\n      });\n    });\n}\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: 'LOGOUT_SUCCESS'\n  };\n};\n\n// Set up local storage for tokens\n// Setup config/headers and token\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem('token');\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, Input, Menu } from 'semantic-ui-react';\nimport { registerUser } from '../actions/authActions';\nimport { loginUser } from '../actions/authActions';\nconst Isemail = require('isemail');\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    open: false,\n    activeItem: 'Log In',\n    header: 'Log In to Color Pic',\n    button: 'Log In',\n    password: '',\n    verifyPassword: '',\n    email: '',\n    userNamePlaceHolder: '',\n    description:'',\n    errorStatusPassword: false,\n    errorMsgPassword:'',\n    errorStatusEmail: false,\n    errorMsgEmail:''\n   }\n\n  showLogin = size => () => {\n    this.setState({\n      size,\n      open: true,\n      activeItem: 'Log In',\n      header: 'Log In to Color Pic',\n      button: 'Log In',\n      userNamePlaceHolder:'email@email.com',\n      description: ''\n    })\n  }\n\n  showSignup = size => () => {\n    this.setState({\n      size,\n      open: true,\n      activeItem: 'Sign Up',\n      header: 'Join Color Pic Today',\n      button: 'Sign Up',\n      userNamePlaceHolder: 'Register new user',\n      description:'Register to access more features'\n    })\n  }\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      open: false,\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: ''\n    });\n  }\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Log In to Color Pic',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder:'Username',\n      description:''\n    });\n    this.resetDefaults();\n  }\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Sign Up for Color Pic',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder: 'Register New User',\n      description:'Register to access more features'\n    });\n    this.resetDefaults();\n  }\n\n  // clear all error messages\n  resetDefaults() {\n    if (this.state.activeItem === 'Sign Up') {\n      this.setState({ description:'Register to access more features' });\n    }\n\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: '',\n      errorMsgPassword: ''\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (this.state.email === '' && this.state.password === '' && this.state.verifyPassword === '' ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail:'Email cannot be empty',\n        errorMsgPassword:'Passwords cannot be empty',\n      });\n      return\n    }\n\n    // If email is empty\n    if (this.state.email === '') {\n      this.setState({\n        errorMsgEmail:'Email cannot be empty',\n        errorStatusEmail: true\n      });\n      return\n    }\n\n    // If either password is empty\n    if (this.state.activeItem === 'Sign Up' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Password cannot be empty',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If passwords do not match show error message\n    if (this.state.activeItem === 'Sign Up' && this.state.password !== this.state.verifyPassword) {\n      this.setState({\n        errorMsgPassword:'Passwords do not match',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // Validate Email\n    if(this.state.activeItem === 'Sign Up' && Isemail.validate(this.state.email) === false) {\n      this.setState({\n        errorStatusEmail: 'error',\n        errorMsgEmail:'Not a valid email',\n      });\n      return\n    }\n\n\n    if(this.state.activeItem === 'Sign Up'){\n      this.props.registerUser(this.state.email, this.state.password);\n      this.close();\n    }\n\n    if(this.state.activeItem === 'Log In'){\n      this.props.loginUser(this.state.email, this.state.password);\n      this.close();\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if(this.state.activeItem === 'Sign Up') {\n      return(\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, 'verifyPassword')}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return(\n        <Button onClick={this.showSignup('tiny')} style={{ marginLeft: '0.5em', marginRight: '1rem' }}>\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  render() {\n    const {\n      open,\n      size,\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail,\n    } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.showLogin('tiny')}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal size={size} open={open} onClose={this.close} closeIcon>\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name='Log In'\n              active={activeItem === 'Log In'}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name='Sign Up'\n              active={activeItem === 'Sign Up'}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <p>{description}</p>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, 'email')}\n                error={errorStatusEmail}\n              />\n              <p style={{\"color\": \"red\"}}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, 'password')}\n                error={errorStatusPassword}\n              />\n              <p style={{color: 'red'}}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default connect( null, {registerUser, loginUser })(LoginModal);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport { Container, Icon, Menu, Responsive, Segment, Sidebar } from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n          <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n          <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n          {/* <Menu.Item as='a'>Log In</Menu.Item>\n          <Menu.Item as='a'>Sign Up</Menu.Item> */}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 125, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <LoginModal />\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default MobileContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { logoutUser } from '../actions/authActions';\n\nclass Logout extends Component {\n  logout(event) {\n    this.props.logoutUser();\n  }\n\n  render() {\n    return(\n      <div>\n        <p style={{ 'display': 'inline-block'}}>\n          {this.props.email}\n        </p>\n        <Link to=\"/\">\n          <Button\n            style={{\n            'display': 'inline-block',\n            'marginLeft': '0.5em'}}\n            onClick={event => this.logout(event)}\n          >\n            Log Out\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(Logout);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Button,\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Icon\n} from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal\n          buttonOne=\"Log In\"\n          buttonTwo=\"Sign up\"\n        />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return(<Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>);\n    }\n  }\n  render() {\n    const { children } = this.props\n    // const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Container>\n                <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n                <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n                {this.myPalettesRender()}\n                <Menu.Item position='right'>\n                  {this.loginRender()}\n                  {/* <Icon name=\"user circle\" size=\"large\"/> */}\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(DesktopContainer);\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Header,\n  Button\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LandingPageExamplePicture from '../images/LandingPageExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExample = () => {\n  return(\n    <div>\n      <Grid\n        stackable\n        columns={2}\n        style={{ padding: '1em', marginBottom: '3em' }}\n        >\n        <Grid.Column\n          width={10}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '0em' }}>\n            <Image src={ LandingPageExamplePicture } alt='Landing Page Example Palette'/>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={6}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment style={{\n            padding: '0em 1em 3em 1em',\n            height: '100%'\n          }}>\n            <Header\n              as=\"h1\"\n              style={{\n                fontSize: '36px',\n                marginTop: '3rem',\n                marginBottom: '4rem'\n              }}\n            >\n              Fast and Efficient color palettes generator\n            </Header>\n            <p\n              style={{\n                fontSize: '20px',\n                marginBottom: '4rem'\n              }}\n            >\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n              <Button\n                style={{\n                  fontSize: '16px',\n                  marginBottom: '1rem'\n                }}\n              >\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport { Container, Grid, Icon} from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\n\nconst LandingPage = () => {\n  return(\n    <Container>\n      <LandingPageExample />\n      <Grid\n        stackable\n        columns={3}\n        divided\n        style={{ marginBottom: '2em'}}\n      >\n         <Grid.Row>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Capture colors from Images</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"adjust\" size='huge'/>\n             <h3>Adjust colors and refine palette</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Save palettes for future reference</h3>\n           </Grid.Column>\n         </Grid.Row>\n       </Grid>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import axios from 'axios';\nimport { tokenConfig } from './authActions';\n\n// Get user color palettes\nexport const getColors = (email) => dispatch => {\n  axios.get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => {\n      // Make get call to retrieve new set\n      axios.get('/api/colors')\n        .then(res =>\n          dispatch({\n            type: 'GET_COLORS',\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          console.log(error)\n        );\n    })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = (id) => dispatch => {\n  axios.delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","const Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  console.log(url);\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n// image modal Actions\nexport const closeImgModal = () => dispatch => {\n  dispatch({\n    type: 'OPEN_IMAGE_MODAL',\n    open: false,\n    error: false,\n  })\n}\n\nexport const openImgModal = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_IMAGE_MODAL',\n    open: true,\n    error: false\n  })\n}\n\nexport const newImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'NEW_IMAGE_SUBMIT',\n    image: 'new'\n  })\n}\n\nexport const showModalLoader = () => dispatch => {\n  dispatch({\n    type: 'CLARIFAI_REQUEST_WAITING',\n    loader: 'show'\n  })\n}\n\nexport const clearImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_IMAGE_SUBMIT',\n    image: ''\n  })\n}\n\nexport const sendErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'SEND_ERROR',\n    error: true\n  })\n}\n\nexport const clearErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_ERROR',\n    error: false\n  })\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({\n      hexInput: color\n    });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (dimmer) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors();\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, dimmer, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleConfirm}\n              color='blue'\n            >\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    if(this.props.email !== undefined) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (this.props.email !== prevProps.email ) {\n      console.log('get them colors!');\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.auth.user.email);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\nimport { Icon, Container } from 'semantic-ui-react';\n\nconst Footer = ({url}) => {\n  return(\n    <Container className=\"footer\">\n      <h5 className=\"footer-header\">\n        © 2019\n      </h5>\n      <div className=\"icon-container\">\n        <a\n          className=\"icon-div\"\n          href=\"https://github.com/fulin426/Color-Pic\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"github\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"https://www.linkedin.com/in/fu-lin-liu/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"linkedin square\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"mailto:fulin426@gmail.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"mail\" size='big' />\n        </a>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      // send empty array before recieving new color set\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n            closeIcon\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: '100%',\n              marginRight: 4 + 'em'\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false\n  };\n\n  handleInput (event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      email: this.props.email,\n      title: this.state.input,\n      colors: this.props.colors\n    }, this.props.token)\n    this.close();\n  }\n\n  //if empty Input\n  setError() {\n    this.setState({ error: true });\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '') {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  renderTitleInput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.state.error === true) {\n        return(\n          <Input\n            className=\"savepalette-modal-input\"\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Title Required...'\n            error\n          />\n        );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"savepalette-modal-input\"\n          label=\"Title\"\n          value={this.state.input}\n          onChange={event => this.handleInput(event)}\n          placeholder='New Palette Name...'\n        />\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            {this.renderTitleInput()}\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport LoginModal from './LoginModal';\nimport { Container, Grid, Modal } from 'semantic-ui-react';\n\nclass HomePage extends Component {\n  savepaletteRender() {\n    if(this.props.Authenticated === true) {\n      return <SavePalette />;\n    } else {\n      return (\n        <LoginModal\n          buttonOne=\"Save Palette\"\n        />\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Container textAlign='center'>\n          <HomePageHeader />\n          <Grid celled>\n            <Grid.Row>\n              <ImageSelection />\n              <ImageMain />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorsList />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorPicker />\n              <Grid.Column mobile={16} tablet={7} computer={6}>\n                <ColorInfo />\n                <div className=\"regen-save-buttons\">\n                  <Regenerate />\n                  {this.savepaletteRender()}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { })(HomePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { loadUser } from '../actions/authActions';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.loadUser();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { loadUser })(App);\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {...state,\n        loader: action.loader,\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'SEND_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'CLEAR_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n    default:\n     return state;\n  }\n}\n","const initialState = {\n  msg: {},\n  status: null,\n  id: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}