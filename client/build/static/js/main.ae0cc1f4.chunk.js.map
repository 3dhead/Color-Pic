{"version":3,"sources":["images/LandingPageExample.png","images/ExamplePhoto.jpeg","images/ExampleImageAdjust.png","images/MyPalettesExample.png","components/MobileContainer.js","components/LoginModal.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingPageStep1.js","components/LandingPageStep2.js","components/LandingPageStep3.js","components/LandingPage.js","actions/MyPaletteAPI.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/HomePageHeader.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","state","handleSidebarHide","_this","setState","sidebarOpened","handleToggle","children","this","props","react_default","a","createElement","as","Sidebar","Pushable","maxWidth","onlyMobile","Menu","animation","onHide","vertical","visible","Item","Link","to","Pusher","dimmed","Segment","textAlign","style","minHeight","padding","Container","pointing","secondary","size","onClick","Icon","name","Component","LoginModal","open","activeItem","header","button","username","password","userNamePlaceHolder","showLogin","showSignup","close","handleLogInClick","e","_ref","handleSignUpClick","_ref2","event","target","value","preventDefault","console","log","_this2","_this$state","Button","marginLeft","Modal","onClose","className","active","Content","Input","placeholder","onChange","inputUsername","type","inputPassword","color","buttonSubmit","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","position","components_LoginModal","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","stackable","columns","Column","width","Image","src","LandingPageExamplePicture","height","Header","fontSize","marginTop","marginBottom","react_router_dom","LandingPageExampleOne","verticalAlign","ExamplePhoto","LandingPageExampleTwo","fluid","display","ExampleImageAdjust","LandingPageExampleThree","computer","centered","maxHeight","MyPalettesExample","LandingPage","components_LandingPageExample","LandingPageStep1","LandingPageStep2","LandingPageStep3","getColors","dispatch","axios","get","then","res","payload","data","catch","error","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","concat","title","onCancel","onConfirm","connect","deleteColor","myPalettes","DeleteColor","id","delete","app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","err","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","clearColorList","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","closeOnEscape","closeOnDimmerClick","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","marginRight","r","g","b","onChangeComplete","key","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","_this3","label","handleTitleInput","renderOneColorSet","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","undefined","palette","_id","mobile","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","Footer","HomePageHeader","ColorsList","prevProps","renderColor","Dimmer","inverted","Loader","colorsRender","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","handleInput","submitURL","_this4","onSubmit","renderURLinput","renderSubmitButton","renderErrorMessage","renderLoader","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","Regenerate","SavePalette","newColorPalette","setError","handleConfirmClick","renderTitleInput","renderConfirmButton","post","HomePage","components_HomePageHeader","celled","Row","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","Object","objectSpread","array","item","updateObjectInArray","newImageList","filter","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae0cc1f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPageExample.9b6ddb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/ExamplePhoto.7cf658b5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ExampleImageAdjust.637f5330.png\";","module.exports = __webpack_public_path__ + \"static/media/MyPalettesExample.605dd10a.png\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Icon, Menu, Responsive, Segment, Sidebar } from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n          <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n          <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n          {/* <Menu.Item as='a'>Log In</Menu.Item>\n          <Menu.Item as='a'>Sign Up</Menu.Item> */}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 125, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                {/* <Menu.Item position='right'>\n                  <Button as='a'>\n                    Log in\n                  </Button>\n                  <Button as='a'>\n                    Sign Up\n                  </Button>\n                </Menu.Item> */}\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default MobileContainer;\n","import React, { Component } from 'react'\nimport { Button, Modal, Input, Menu, Header } from 'semantic-ui-react'\n\nclass LoginModal extends Component {\n  state = {\n    open: false,\n    activeItem: 'Log In',\n    header: 'Log In to Color Pic',\n    button: 'Log In',\n    username: '',\n    password: '',\n    userNamePlaceHolder: ''\n   }\n\n  showLogin = size => () => {\n    this.setState({\n      size,\n      open: true,\n      activeItem: 'Log In',\n      header: 'Log In to Color Pic',\n      button: 'Log In',\n      userNamePlaceHolder:'Username'\n    })\n  }\n\n  showSignup = size => () => {\n    this.setState({\n      size,\n      open: true,\n      activeItem: 'Sign Up',\n      header: 'Sign Up for Color Pic',\n      button: 'Sign Up',\n      userNamePlaceHolder: 'Register new user'\n    })\n  }\n\n  close = () => {\n    this.setState({ open: false });\n  }\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Log In to Color Pic',\n      username: '',\n      password: '',\n      userNamePlaceHolder:'Username'\n    });\n  }\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Sign Up for Color Pic',\n      username: '',\n      password: '',\n      userNamePlaceHolder: 'Register New User'\n    });\n  }\n\n  inputUsername(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  inputPassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    console.log('submit that login');\n  }\n  render() {\n    const {\n      open,\n      size,\n      activeItem,\n      button,\n      header,\n      username,\n      password,\n      userNamePlaceHolder\n    } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.showLogin('tiny')}>Log In</Button>\n        <Button\n          onClick={this.showSignup('tiny')}\n          style={{ marginLeft: '0.5em' }}\n        >\n          Sign Up\n        </Button>\n        <Modal size={size} open={open} onClose={this.close}>\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name='Log In'\n              active={activeItem === 'Log In'}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name='Sign Up'\n              active={activeItem === 'Sign Up'}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <form>\n              <label className=\"login-label\">Username</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={username}\n                onChange={event => this.inputUsername(event)}\n              />\n              <label className=\"login-label\">Password</label>\n              <Input\n                type='password'\n                className=\"login-input\"\n                placeholder='Password'\n                value={password}\n                onChange={event => this.inputPassword(event)}\n              />\n              <div className=\"login-btn\">\n                <Button\n                  color=\"blue\"\n                  onClick={event => this.buttonSubmit(event)}\n                >\n                  {button}\n                </Button>\n              </div>\n            </form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default LoginModal;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport { Button, Container, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    // const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Container>\n                <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n                <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n                <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n                <Menu.Item position='right'>\n                  <LoginModal />\n                  {/* <Button as='a'>\n                    Log in\n                  </Button> */}\n                  {/* <Button as='a' style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button> */}\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default DesktopContainer;\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Header,\n  Button\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LandingPageExamplePicture from '../images/LandingPageExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExample = () => {\n  return(\n    <div>\n      <Grid\n        stackable\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          width={10}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '0em' }}>\n            <Image src={ LandingPageExamplePicture } />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={6}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment style={{\n            padding: '0em 1em 3em 1em',\n            height: '100%'\n          }}>\n            <Header\n              as=\"h1\"\n              style={{\n                fontSize: '36px',\n                marginTop: '3rem',\n                marginBottom: '4rem'\n              }}\n            >\n              Fast and Efficient color palettes generator\n            </Header>\n            <p\n              style={{\n                fontSize: '20px',\n                marginBottom: '4rem'\n              }}\n            >\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n            <Button\n              style={{\n                fontSize: '16px',\n                marginBottom: '1rem'\n              }}\n            >\n              Start Generator\n            </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport {\n  Grid,\n  Image,\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\nimport ExamplePhoto from '../images/ExamplePhoto.jpeg';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExampleOne = () => {\n  return(\n    <div>\n      <Grid\n        verticalAlign='middle'\n        textAlign='center'\n        stackable\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          width={9}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '1em' }}>\n            <Image src={ ExamplePhoto } />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={7}\n          style={{ padding: '0em' }}\n          >\n          <Segment\n            style={{\n            padding: '0em 2em 0em 2em',\n            height: '100%',\n          }}>\n            <p\n              style={{\n                fontSize: '24px'\n              }}>\n              <Icon name=\"images\" />\n              Capture colors from Images\n            </p>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExampleOne;\n","import React from 'react';\nimport {\n  Grid,\n  Image,\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\nimport ExampleImageAdjust from '../images/ExampleImageAdjust.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExampleTwo = () => {\n  return(\n    <div>\n      <Grid\n        verticalAlign='middle'\n        textAlign='center'\n        stackable\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          columns={7}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment\n            fluid vertical\n            style={{\n            padding: '0em 2em 0em 2em',\n            height: '100%',\n          }}>\n            <p\n              style={{\n                display: 'block',\n                fontSize: '24px',\n                textAlign: 'center'\n              }}>\n              <Icon name=\"adjust\" />\n              Adjust colors and refine palette.\n            </p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          columns={9}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '1em' }}>\n            <Image src={ ExampleImageAdjust } />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExampleTwo;\n","import React from 'react';\nimport {\n  Grid,\n  Image,\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\nimport MyPalettesExample from '../images/MyPalettesExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExampleThree = () => {\n  return(\n    <div>\n      <Grid\n        verticalAlign='middle'\n        textAlign='center'\n        stackable\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          computer={9}\n          style={{ padding: '0em' }}\n          >\n          <Segment\n            style={{\n              textAlign: 'center',\n              padding: '1em'\n            }}\n          >\n            <Image\n            centered\n            style={{ maxHeight: '400px'}}\n            src={ MyPalettesExample }\n          />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          computer={7}\n          style={{ padding: '0em' }}\n          >\n          <Segment\n            style={{\n            padding: '0em 2em 0em 2em',\n            height: '100%'\n          }}>\n            <p\n              style={{\n                display: 'block',\n                fontSize: '24px'\n              }}>\n              <Icon name=\"save\" />\n              Save palettes for future reference\n            </p>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExampleThree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\nimport LandingPageStep1 from './LandingPageStep1';\nimport LandingPageStep2 from './LandingPageStep2';\nimport LandingPageStep3 from './LandingPageStep3';\n\nconst LandingPage = () => {\n  return(\n    <Container>\n      <LandingPageExample />\n      <LandingPageStep1 />\n      <LandingPageStep2 />\n      <LandingPageStep3 />\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import axios from 'axios';\n// Get user color palettes\nexport const getColors = () => dispatch => {\n  axios.get('/api/colors')\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet)\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet)\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => {\n      // Make get call to retrieve new set\n      axios.get('/api/colors')\n        .then(res =>\n          dispatch({\n            type: 'GET_COLORS',\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          console.log(error)\n        );\n    })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios.delete(`/api/colors/${id}`)\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","const Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  console.log(url);\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n// image modal Actions\nexport const closeImgModal = () => dispatch => {\n  dispatch({\n    type: 'OPEN_IMAGE_MODAL',\n    open: false,\n    error: false,\n  })\n}\n\nexport const openImgModal = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_IMAGE_MODAL',\n    open: true,\n    error: false\n  })\n}\n\nexport const newImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'NEW_IMAGE_SUBMIT',\n    image: 'new'\n  })\n}\n\nexport const showModalLoader = () => dispatch => {\n  dispatch({\n    type: 'CLARIFAI_REQUEST_WAITING',\n    loader: 'show'\n  })\n}\n\nexport const clearImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_IMAGE_SUBMIT',\n    image: ''\n  })\n}\n\nexport const sendErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'SEND_ERROR',\n    error: true\n  })\n}\n\nexport const clearErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_ERROR',\n    error: false\n  })\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({\n      hexInput: color\n    });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors();\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(false, true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleConfirm}\n              color='blue'\n            >\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors();\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\n\nconst Footer = ({url}) => {\n  return(\n    <div className=\"footer\">\n      © 2019\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      // send empty array before recieving new color set\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: '100%',\n              marginRight: 4 + 'em'\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false\n  };\n\n  handleInput (event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      title: this.state.input,\n      colors: this.props.colors\n    })\n    this.close();\n  }\n\n  //if empty Input\n  setError() {\n    this.setState({ error: true });\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '') {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  renderTitleInput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.state.error === true) {\n        return(\n          <Input\n            className=\"savepalette-modal-input\"\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Title Required...'\n            error\n          />\n        );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"savepalette-modal-input\"\n          label=\"Title\"\n          value={this.state.input}\n          onChange={event => this.handleInput(event)}\n          placeholder='New Palette Name...'\n        />\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            {this.renderTitleInput()}\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React from 'react';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport { Container, Grid } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign='center'>\n        <HomePageHeader />\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} tablet={7} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                <SavePalette />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {...state,\n        loader: action.loader,\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'SEND_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'CLEAR_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}