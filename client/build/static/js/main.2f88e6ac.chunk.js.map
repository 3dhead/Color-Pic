{"version":3,"sources":["components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPage.js","actions/MyPaletteAPI.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/HomePageHeader.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Footer.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/index.js","index.js"],"names":["getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","state","handleSidebarHide","_this","setState","sidebarOpened","handleToggle","children","this","props","react_default","a","createElement","as","Sidebar","Pushable","maxWidth","onlyMobile","Menu","animation","onHide","vertical","visible","react_router_dom","to","Item","Pusher","dimmed","Segment","textAlign","style","minHeight","padding","Container","pointing","secondary","size","onClick","Icon","name","Component","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","position","Button","marginLeft","HeaderMenu","_ref","className","components_DesktopContainer","components_MobileContainer","LandingPage","Header","getColors","dispatch","axios","get","then","res","type","payload","data","catch","error","console","log","ConfirmDelete","open","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","concat","title","onCancel","onConfirm","connect","deleteColor","myPalettes","DeleteColor","id","delete","app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","color","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","err","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","clearColorList","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","event","target","value","_this$props","hexInput","onChange","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","closeOnEscape","closeOnDimmerClick","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","marginRight","r","g","b","onChangeComplete","_this2","key","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","_this3","_this$state","Modal","onClose","close","Content","Input","label","handleTitleInput","placeholder","renderOneColorSet","Grid","stackable","columns","Column","width","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","undefined","palette","_id","mobile","computer","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","HomePageHeader","ColorsList","prevProps","renderColor","Dimmer","active","inverted","Loader","colorsRender","Image","src","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","openImgModal","preventDefault","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","handleInput","submitURL","_this4","onSubmit","renderURLinput","renderSubmitButton","renderErrorMessage","renderLoader","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","newColorSet","ColorInfo","Regenerate","SavePalette","newColorPalette","setError","handleConfirmClick","renderTitleInput","renderConfirmButton","post","Footer","HomePage","components_HomePageHeader","celled","Row","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_Footer","components_HeaderMenu","react_router","path","exact","component","Generate","initialState","combineReducers","arguments","action","Object","objectSpread","array","item","updateObjectInArray","newImageList","filter","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f88e6ac.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Icon, Menu, Responsive, Segment, Sidebar } from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Link to=\"/\">\n          <Menu.Item as='a'>Color Pic</Menu.Item>\n            </Link>\n          <Link to=\"/Generate\">\n            <Menu.Item as='a'>Generate</Menu.Item>\n          </Link>\n          <Link to=\"/MyPallettes\">\n            <Menu.Item as='a'>My Palettes</Menu.Item>\n          </Link>\n          <Menu.Item as='a'>Log In</Menu.Item>\n          <Menu.Item as='a'>Sign Up</Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 225, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                {/* <Menu.Item position='right'>\n                  <Button as='a'>\n                    Log in\n                  </Button>\n                  <Button as='a'>\n                    Sign Up\n                  </Button>\n                </Menu.Item> */}\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default MobileContainer;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    // const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Container>\n                <Link to=\"/\">\n                  <Menu.Item as='a'>Color Pic</Menu.Item>\n                </Link>\n                <Link to=\"/Generate\">\n                  <Menu.Item as='a'>Generate</Menu.Item>\n                </Link>\n                <Link to=\"/MyPallettes\">\n                  <Menu.Item as='a'>My Palettes</Menu.Item>\n                </Link>\n                <Menu.Item position='right'>\n                  <Button as='a'>\n                    Log in\n                  </Button>\n                  <Button as='a' style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default DesktopContainer;\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react'\nimport { Header, Container, Grid } from 'semantic-ui-react';\n\nconst LandingPage = () => {\n  return(\n    <div className=\"header\">\n      <Container>\n        <Header>Color Pic App</Header>\n      </Container>\n    </div>\n\n  );\n}\n\nexport default LandingPage;\n","import axios from 'axios';\n// Get user color palettes\nexport const getColors = () => dispatch => {\n  axios.get('/api/colors')\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet)\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet)\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => {\n      // Make get call to retrieve new set\n      axios.get('/api/colors')\n        .then(res =>\n          dispatch({\n            type: 'GET_COLORS',\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          console.log(error)\n        );\n    })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios.delete(`/api/colors/${id}`)\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","import axios from 'axios';\nconst Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  console.log(url);\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n// image modal Actions\nexport const closeImgModal = () => dispatch => {\n  dispatch({\n    type: 'OPEN_IMAGE_MODAL',\n    open: false,\n    error: false,\n  })\n}\n\nexport const openImgModal = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_IMAGE_MODAL',\n    open: true,\n    error: false\n  })\n}\n\nexport const newImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'NEW_IMAGE_SUBMIT',\n    image: 'new'\n  })\n}\n\nexport const showModalLoader = () => dispatch => {\n  dispatch({\n    type: 'CLARIFAI_REQUEST_WAITING',\n    loader: 'show'\n  })\n}\n\nexport const clearImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_IMAGE_SUBMIT',\n    image: ''\n  })\n}\n\nexport const sendErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'SEND_ERROR',\n    error: true\n  })\n}\n\nexport const clearErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_ERROR',\n    error: false\n  })\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({\n      hexInput: color\n    });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors();\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(false, true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleConfirm}\n              color='blue'\n            >\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors();\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      // send empty array before recieving new color set\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{ marginRight: 4 + 'em' }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false\n  };\n\n  handleInput (event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      title: this.state.input,\n      colors: this.props.colors\n    })\n    this.close();\n  }\n\n  //if empty Input\n  setError() {\n    this.setState({ error: true });\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '') {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  renderTitleInput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.state.error === true) {\n        return(\n          <Input\n            className=\"savepalette-modal-input\"\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Title Required...'\n            error\n          />\n        );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"savepalette-modal-input\"\n          label=\"Title\"\n          value={this.state.input}\n          onChange={event => this.handleInput(event)}\n          placeholder='New Palette Name...'\n        />\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            {this.renderTitleInput()}\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React from 'react';\n\nconst Footer = ({url}) => {\n  return(\n    <div className=\"footer\">\n      © 2019\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport Footer from './Footer';\nimport { Container, Grid } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign='center'>\n        <HomePageHeader />\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                <SavePalette />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Footer />\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {...state,\n        loader: action.loader,\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'SEND_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'CLEAR_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}