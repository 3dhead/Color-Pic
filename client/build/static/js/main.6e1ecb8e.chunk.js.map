{"version":3,"sources":["images/FujiExample.jpg","images/DabinExample.jpg","images/CameraExample.jpg","images/BladeRunnerExample.jpg","config/keys.js","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingIcons.js","components/LandingPageExampleSets.js","components/HowItWorks.js","components/LandingPage.js","components/ConfirmDeleteModal.js","actions/convertRGB.js","actions/colorInfoActions.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","actions/index.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","clarifaiID","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","verifyPassword","email","userNamePlaceHolder","passWordPlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","password","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","color","onClick","style","marginLeft","marginRight","isLoading","Dimmer","active","inverted","Loader","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","Content","errorMessage","onSubmit","buttonSubmit","verifyPasswordRender","renderLoader","Component","connect","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","console","log","response","callAPI","get","concat","getColors","Logout","clearColors","react_router_dom","to","logout","user","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Authenticated","components_Logout","components_LoginModal","as","Link","minHeight","padding","children","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","myPalettesMenuItemRender","Pusher","dimmed","Segment","textAlign","sideBarStyles","Container","Icon","position","loginRender","isAuthenticated","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","borderless","myPalettesRender","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","columns","verticalAlign","Column","width","Header","LandingIcons","margin","Row","renderOneColorSet","set","map","index","backgroundColor","LandingPageExampleSets","exampleSets","FujiExample","DabinExample","CameraExample","BladeRunnerExample","Image","src","HowItWorks","centered","href","rel","LandingPage","components_LandingPageExample","components_LandingIcons","components_LandingPageExampleSets","components_HowItWorks","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","title","onCancel","onConfirm","deleteColor","myPalettes","DeleteColor","id","delete","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","sendColorInfo","hexColor","alpha","R","G","hexToG","B","hexToB","clearRecieved","status","sendPositionInfo","clearPosition","sendSelectedColor","selectedColor","sendAlphaInfo","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","colors","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","cancel","UpdateData","updateColorPalette","react_color_lib","r","g","b","onChangeComplete","handleOnClickSquare","opacity","cursor","renderCarot","newHexColor","trim","length","label","handleTitleInput","stackable","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","prevProps","palette","_id","ConfirmDeleteModal","components_EditModal","url","renderPalettes","addColor","AddColor","updateColor","UpdateColor","loading","Footer","Clarifai","app","App","apiKey","analyzeImage","models","predict","hexColors","outputs","push","raw_hex","slice","fetch","json","RGBtoHexData","colorMindResponse","i","loader","errorData","details","changeMainImage","ColorsList","renderColor","height","renderLoaderHeight","colorsRender","mobile","computer","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","icon","renderURLinput","renderSubmitButton","renderErrorMessage","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","defaultValue","readOnly","Regenerate","SavePalette","placeHolder","newColorPalette","setError","handleConfirmClick","renderConfirmButton","HomePage","components_SavePalette","Popup","trigger","basic","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","savepaletteRender","loadUser","lib_default","debug","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6e1ecb8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FujiExample.647af6bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DabinExample.221dac11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CameraExample.d7b0995e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BladeRunnerExample.df8cfb47.jpg\";","module.exports = {\n  clarifaiID: 'bd8644854b19417dacdfa3adba21aab1'\n}\n","import axios from \"axios\";\n\n// Check token & load user\nexport const loadUser = () => dispatch => {\n  // User loading\n  dispatch({ type: \"USER_LOADING\" });\n\n  axios\n    .get(\"/api/auth/user\", tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  // Show loading bubble in user register\n  dispatch({ type: \"USER_LOADING\" });\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log(\"register fail!\");\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"REGISTER_FAIL\"\n      });\n    });\n};\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // Show loading bubble in login\n  dispatch({ type: \"USER_LOADING\" });\n\n  // headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log(\"login fail!\");\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"LOGIN_FAIL\"\n      });\n    });\n};\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: \"LOGOUT_SUCCESS\"\n  };\n};\n\n// Set up local storage for tokens\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem(\"token\");\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n\n// Modal Actions\nexport const openModal = () => {\n  return {\n    type: \"OPEN_MODAL\"\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\"\n  };\n};\n\n// Logout User\nexport const clearErrors = () => {\n  return {\n    type: \"CLEAR_ERRORS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/authActions\";\nimport { loginUser } from \"../actions/authActions\";\nimport { openModal } from \"../actions/authActions\";\nimport { closeModal } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/authActions\";\nimport { Button, Modal, Input, Menu, Dimmer, Loader } from \"semantic-ui-react\";\n\nconst Isemail = require(\"isemail\");\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    activeItem: \"Log In\",\n    header: \"Log In to Color Pic\",\n    button: \"Log In\",\n    verifyPassword: \"\",\n    email: \"\",\n    userNamePlaceHolder: \"\",\n    passWordPlaceHolder: \"\",\n    description: \"\",\n    errorStatusPassword: false,\n    errorMsgPassword: \"\",\n    errorStatusEmail: false,\n    errorMsgEmail: \"\"\n  };\n\n  showLogin = size => () => {\n    this.setState({\n      activeItem: \"Log In\",\n      header: \"Log In to Color Pic\",\n      button: \"Log In\",\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\n      passWordPlaceHolder: \"Demo Password: demo\",\n      description: \"\"\n    });\n    this.props.openModal();\n    this.props.clearErrors();\n  };\n\n  showSignup = size => () => {\n    this.setState({\n      activeItem: \"Sign Up\",\n      header: \"Join Color Pic\",\n      button: \"Sign Up\",\n      userNamePlaceHolder: \"Register new user\",\n      passWordPlaceHolder: \"Password\",\n      description: \"Register to access more features\"\n    });\n    this.props.openModal();\n    this.props.clearErrors();\n  };\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\"\n    });\n    this.props.closeModal();\n    this.props.clearErrors();\n  };\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: \"Log In to Color Pic\",\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\",\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\n      passWordPlaceHolder: \"Demo Password: demo\",\n      description: \"\"\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  };\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: \"Join Color Pic Today\",\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\",\n      userNamePlaceHolder: \"Register New User\",\n      passWordPlaceHolder: \"Password\",\n      description: \"Register to access more features\"\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  };\n\n  // clear all error messages\n  resetDefaults() {\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: \"\",\n      errorMsgPassword: \"\"\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (\n      this.state.email === \"\" &&\n      this.state.password === \"\" &&\n      this.state.verifyPassword === \"\"\n    ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail: \"Email cannot be empty\",\n        errorMsgPassword: \"Passwords cannot be empty\"\n      });\n      return;\n    }\n\n    // If email is empty\n    if (this.state.email === \"\") {\n      this.setState({\n        errorMsgEmail: \"Email cannot be empty\",\n        errorStatusEmail: true\n      });\n      return;\n    }\n\n    // If either password is empty on Sign Up\n    if (this.state.activeItem === \"Sign Up\" && this.state.password === \"\") {\n      this.setState({\n        errorMsgPassword: \"Password cannot be empty\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // If Login Password is empty\n    if (this.state.activeItem === \"Log In\" && this.state.password === \"\") {\n      this.setState({\n        errorMsgPassword: \"Please enter password\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // If passwords do not match show error message\n    if (\n      this.state.activeItem === \"Sign Up\" &&\n      this.state.password !== this.state.verifyPassword\n    ) {\n      this.setState({\n        errorMsgPassword: \"Passwords do not match\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // Validate Email\n    if (\n      this.state.activeItem === \"Sign Up\" &&\n      Isemail.validate(this.state.email) === false\n    ) {\n      this.setState({\n        errorStatusEmail: \"error\",\n        errorMsgEmail: \"Not a valid email\"\n      });\n      return;\n    }\n\n    // If Sign Up and No errors statuses\n    if (this.state.activeItem === \"Sign Up\") {\n      this.props.registerUser(this.state.email, this.state.password);\n    }\n\n    // If Log In and No errors statuses\n    if (this.state.activeItem === \"Log In\") {\n      this.props.loginUser(this.state.email, this.state.password);\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if (this.state.activeItem === \"Sign Up\") {\n      return (\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, \"verifyPassword\")}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return (\n        <Button\n          color=\"blue\"\n          onClick={this.showSignup()}\n          style={{ marginLeft: \"0.5em\", marginRight: \"1rem\" }}\n        >\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  renderLoader() {\n    if (this.props.isLoading === true) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"big\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const {\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      passWordPlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail\n    } = this.state;\n\n    return (\n      <div>\n        <Button color=\"blue\" onClick={this.showLogin()}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal\n          size=\"tiny\"\n          open={this.props.modal}\n          onClose={this.close}\n          closeIcon\n        >\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name=\"Log In\"\n              active={activeItem === \"Log In\"}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name=\"Sign Up\"\n              active={activeItem === \"Sign Up\"}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <h5>{description}</h5>\n              <h5 style={{ color: \"red\" }}>{this.props.errorMessage}</h5>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, \"email\")}\n                error={errorStatusEmail}\n              />\n              <p style={{ color: \"red\" }}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder={passWordPlaceHolder}\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, \"password\")}\n                error={errorStatusPassword}\n              />\n              <p style={{ color: \"red\" }}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    errorMessage: state.errors.message,\n    modal: state.auth.modal,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    registerUser,\n    loginUser,\n    openModal,\n    closeModal,\n    clearErrors\n  }\n)(LoginModal);\n","import axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\n\nconst callAPI = (email, dispatch) => {\n  // Data Loading\n  dispatch({ type: \"COLORS_LOADING\" });\n\n  axios\n    .get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: \"GET_COLORS\",\n        payload: res.data\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Get user color palettes\nexport const getColors = email => dispatch => {\n  callAPI(email, dispatch);\n};\n\n// Add color palettes\nexport const newColorPalette = colorSet => dispatch => {\n  axios\n    .post(\"/api/colors\", colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"ADD_COLORS\",\n        payload: res.data\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\n  axios\n    .put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"UPDATE_COLORS\",\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error);\n    })\n    .then(() => {\n      callAPI(email, dispatch);\n    });\n};\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios\n    .delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"DELETE_COLORS\",\n        payload: id\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Clear Colors\nexport const clearColors = () => {\n  return {\n    type: \"CLEAR_PALETTE_COLORS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { clearColors } from \"../actions/MyPaletteAPI\";\nimport \"./css/logout.css\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    // If token expired log out user\n    if (this.props.email === undefined) {\n      this.props.logoutUser();\n    }\n  }\n\n  logout(event) {\n    this.props.logoutUser();\n    this.props.clearColors();\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"username\">Welcome! {this.props.email}</p>\n        <Link to=\"/\">\n          <Button\n            color=\"blue\"\n            className=\"logout-btn\"\n            onClick={event => this.logout(event)}\n          >\n            Log Out\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, clearColors }\n)(Logout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport Logout from \"./Logout\";\nimport { logoutUser } from \"../actions/authActions\";\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesMenuItemRender() {\n    if (this.props.Authenticated === true) {\n      return (\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          My Palettes\n        </Menu.Item>\n      );\n    }\n  }\n\n  sideBarStyles() {\n    if (this.props.Authenticated === true) {\n      return { minHeight: 122, padding: \"1em 0em\" };\n    } else {\n      return { minHeight: 82, padding: \"0em 0em\" };\n    }\n  }\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to=\"/\">\n            Color Pic\n          </Menu.Item>\n          <Menu.Item as={Link} to=\"/Generate\">\n            Generate\n          </Menu.Item>\n          {this.myPalettesMenuItemRender()}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment textAlign=\"center\" style={this.sideBarStyles()} vertical>\n            <Container>\n              <Menu pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n                <Menu.Item position=\"right\">{this.loginRender()}</Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(MobileContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport Logout from \"./Logout\";\nimport { logoutUser } from \"../actions/authActions\";\nimport {\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Dimmer,\n  Loader\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => {\n    this.setState({ fixed: false });\n  };\n  showFixedMenu = () => {\n    this.setState({ fixed: true });\n  };\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return (\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          <h5>My Palettes</h5>\n        </Menu.Item>\n      );\n    }\n  }\n\n  renderLoader() {\n    if (this.props.isLoading === true) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"small\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment className=\"menu-container\" textAlign=\"center\" vertical>\n            <Menu className=\"menu-small\" size=\"small\" borderless>\n              <Menu.Item as={Link} to=\"/\">\n                <h5>Color Pic</h5>\n              </Menu.Item>\n              <Menu.Item as={Link} to=\"/Generate\">\n                <h5>Generate</h5>\n              </Menu.Item>\n              {this.myPalettesRender()}\n              <Menu.Item position=\"right\">\n                {this.loginRender()}\n                {this.renderLoader()}\n              </Menu.Item>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(DesktopContainer);\n","import React from \"react\";\nimport MobileContainer from \"./MobileContainer\";\nimport DesktopContainer from \"./DesktopContainer\";\nimport \"./css/headerMenu.css\";\n\nconst HeaderMenu = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/landingPage.css\";\nimport { Grid, Segment, Header, Button } from \"semantic-ui-react\";\n\nconst LandingPageExample = () => {\n  return (\n    <div className=\"dark-landing\">\n      <Grid columns={1} verticalAlign=\"middle\" className=\"grid-size\">\n        <Grid.Column width={16} textAlign=\"center\">\n          <Segment className=\"dark-landing\">\n            <Header as=\"h1\" className=\"landing-header\">\n              Fast and Efficient color palettes generator\n            </Header>\n            <p className=\"text-style\">Create, edit, and save schemes</p>\n            <Link to=\"/Generate\">\n              <Button color=\"blue\" className=\"landing-btn\">\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default LandingPageExample;\n","import React from \"react\";\nimport { Icon, Grid } from \"semantic-ui-react\";\n\nconst LandingIcons = () => {\n  return (\n    <Grid columns={3} style={{ margin: \"4em 0em\" }}>\n      <Grid.Row>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"images\" size=\"huge\" />\n          <h3>Capture colors from Images</h3>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"adjust\" size=\"huge\" />\n          <h3>Adjust colors and refine palette</h3>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"save\" size=\"huge\" />\n          <h3>Save palettes for future reference</h3>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LandingIcons;\n","import React from \"react\";\nimport FujiExample from \"../images/FujiExample.jpg\";\nimport DabinExample from \"../images/DabinExample.jpg\";\nimport CameraExample from \"../images/CameraExample.jpg\";\nimport BladeRunnerExample from \"../images/BladeRunnerExample.jpg\";\nimport { Grid, Image } from \"semantic-ui-react\";\n\nconst renderOneColorSet = set => {\n  let colorSet = set.map((color, index) => (\n    <div className=\"color-square-container\" key={color + index}>\n      <div className=\"color-square\" style={{ backgroundColor: color }} />\n    </div>\n  ));\n  return colorSet;\n};\n\nconst LandingPageExampleSets = () => {\n  const exampleSets = [\n    { FujiExample: [\"#ECE3E0\", \"#252C32\", \"#6A707E\", \"#53262E\", \"#B81F34\"] },\n    { DabinExample: [\"#684C56\", \"#EDDFD0\", \"#87AC95\", \"#AA8489\", \"#884B86\"] },\n    { CameraExample: [\"#26221A\", \"#3D464F\", \"#96BBDC\", \"#74AACB\", \"#867D80\"] },\n    { BladeRunnerExample: [ \"#804C27\", \"#F7AC49\", \"#CD6622\", \"#7A2717\", \"#2C2022\"]}\n  ];\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <Image src={FujiExample} />\n          {renderOneColorSet(exampleSets[0].FujiExample)}\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Image src={DabinExample} />\n          {renderOneColorSet(exampleSets[1].DabinExample)}\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <Image src={CameraExample} />\n          {renderOneColorSet(exampleSets[2].CameraExample)}\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Image src={BladeRunnerExample} />\n          {renderOneColorSet(exampleSets[3].BladeRunnerExample)}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LandingPageExampleSets;\n","import React from \"react\";\nimport { Header, Grid } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst HowItWorks = () => {\n  return (\n    <Grid verticalAlign=\"middle\" centered>\n      <Grid.Row className=\"explanation-container\">\n        <Grid.Column>\n          <Header as=\"h1\" className=\"explanation-header\" textAlign=\"center\">\n            How it Works\n          </Header>\n          <p className=\"explanation-text\">\n            The Color Pic application uses image recognition from{\" \"}\n            <a\n              href=\"https://www.clarifai.com/models/color-image-recognition-model-eeed0b6733a644cea07cf4c60f87ebb7\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Clarifai\n            </a>{\" \"}\n            to predict what the dominant colors are in a given picture. The\n            colors are then sent to{\" \"}\n            <a\n              href=\"http://colormind.io/blog/extracting-colors-from-photos-and-video/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Colormind\n            </a>{\" \"}\n            to generate a suggested color palette, it searches for colors that\n            work well together. This works in a semi-random way, so hit\n            regenerate to see a different color set each time.\n          </p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default HowItWorks;\n","import React from \"react\";\nimport LandingPageExample from \"./LandingPageExample\";\nimport LandingIcons from \"./LandingIcons\";\nimport LandingPageExampleSets from \"./LandingPageExampleSets\";\nimport HowItWorks from \"./HowItWorks\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <div className=\"dark-landing\">\n        <Container>\n          <LandingPageExample />\n        </Container>\n      </div>\n      <Container>\n        <LandingIcons />\n        <LandingPageExampleSets />\n        <HowItWorks />\n      </Container>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Confirm, Icon } from \"semantic-ui-react\";\nimport { deleteColorPalette } from \"../actions/MyPaletteAPI\";\nimport \"./css/confirmDeleteModal.css\";\n\nclass ConfirmDelete extends Component {\n  state = { open: false };\n\n  show = () => {\n    this.setState({ open: true });\n  };\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.setState({ open: false });\n  };\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal icon-div\">\n        <Icon\n          className=\"\"\n          size=\"large\"\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${\n            this.props.title\n          } palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    deleteColorPalette\n  }\n)(ConfirmDelete);\n","// Convert Hex to RGB functions\nexport const hexToR = h => {\n  return parseInt(cutHex(h).substring(0, 2), 16);\n};\n\nexport const hexToG = h => {\n  return parseInt(cutHex(h).substring(2, 4), 16);\n};\n\nexport const hexToB = h => {\n  return parseInt(cutHex(h).substring(4, 6), 16);\n};\n\nconst cutHex = h => {\n  return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n};\n\n// Convert RGB to Hex functions\nexport const rgbToHex = (R, G, B) => {\n  return \"#\" + toHex(R) + toHex(G) + toHex(B);\n};\n\nexport const toHex = n => {\n  n = parseInt(n, 10);\n  if (isNaN(n)) return \"00\";\n  n = Math.max(0, Math.min(n, 255));\n  return (\n    \"0123456789ABCDEF\".charAt((n - (n % 16)) / 16) +\n    \"0123456789ABCDEF\".charAt(n % 16)\n  );\n};\n","import { hexToR } from \"./convertRGB\";\nimport { hexToG } from \"./convertRGB\";\nimport { hexToB } from \"./convertRGB\";\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: \"SEND_COLOR_INFO\",\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  });\n};\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_RECIEVED\",\n    status: \"\"\n  });\n};\n\nexport const sendPositionInfo = position => dispatch => {\n  dispatch({\n    type: \"SEND_POSITION_INFO\",\n    position: position\n  });\n};\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_POSITION_INFO\",\n    position: 0\n  });\n};\n\nexport const sendSelectedColor = color => dispatch => {\n  dispatch({\n    type: \"SELECTED_COLOR\",\n    selectedColor: color\n  });\n};\n\nexport const sendAlphaInfo = alpha => dispatch => {\n  dispatch({\n    type: \"SEND_ALPHA_INFO\",\n    alpha: alpha\n  });\n};\n\nexport const updateHexColor = newColorSet => dispatch => {\n  dispatch({\n    type: \"UPDATE_HEX_COLOR\",\n    newColorSet: newColorSet\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render() {\n    const { hexInput, R, G, B, alpha } = this.props;\n\n    return (\n      <div className=\"color-info\">\n        <h5>Hex</h5>\n        <input\n          className=\"hex-info-input\"\n          value={hexInput}\n          onChange={event => this.props.hexColorOnChange(event)}\n        />\n        <p className=\"info-text\">R</p>\n        <p className=\"info-text\">G</p>\n        <p className=\"info-text\">B</p>\n        <p className=\"info-text\">a</p>\n        <div>\n          <input\n            className=\"info-input\"\n            value={R}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={G}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={B}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={alpha}\n            onChange={event => this.handleChange(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(EditModalColorInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ChromePicker } from \"react-color\";\nimport { Button, Modal, Icon, Input, Grid, Segment } from \"semantic-ui-react\";\nimport { updateColorPalette } from \"../actions/MyPaletteAPI\";\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\nimport { getColors } from \"../actions/MyPaletteAPI\";\nimport EditModalColorInfo from \"./EditModalColorInfo\";\nimport \"./css/editModal.css\";\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: \"\",\n    selectedSet: [],\n    hexInput: \"\"\n  };\n\n  handleTitleInput(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({ hexInput: color });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = color => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor;\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    });\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  };\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker-edit\"\n        style={{ marginRight: 4 + \"em\" }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) => (\n      <div className=\"color-square-container\" key={color.hexColor + index}>\n        <div\n          className=\"color-square\"\n          onClick={() =>\n            this.handleOnClickSquare(color.hexColor, index, color.alpha)\n          }\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: \"pointer\"\n          }}\n        />\n        <div style={this.renderCarot(index)} className=\"carot-container\">\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n    ));\n    return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: \"black\"\n      };\n    } else {\n      return {\n        color: \"white\"\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if (newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === \"#\") {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor;\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = dimmer => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(\n      this.props.data[position].colors[0].hexColor,\n      this.props.data[position].colors[0].alpha\n    );\n  };\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors(this.props.email);\n  };\n\n  handleConfirm = () => {\n    this.setState({\n      open: false\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(\n      this.props.objectID,\n      UpdateData,\n      this.props.email\n    );\n    this.props.clearPosition();\n  };\n\n  render() {\n    const { open, dimmer, title, hexInput, selectedSet } = this.state;\n\n    return (\n      <div className=\"edit-modal icon-div\">\n        <Icon size=\"large\" onClick={this.closeConfigShow(true)} name=\"edit\" />\n        <Modal\n          open={open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder=\"Edit Palette Name...\"\n            />\n            <div>{this.renderOneColorSet()}</div>\n            <Grid textAlign=\"center\" stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>{this.renderColorPicker()}</Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>Cancel</Button>\n            <Button onClick={this.handleConfirm} color=\"blue\">\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateColorPalette,\n    sendPositionInfo,\n    sendSelectedColor,\n    sendColorInfo,\n    sendAlphaInfo,\n    clearPosition,\n    getColors\n  }\n)(EditModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getColors } from \"../actions/MyPaletteAPI\";\nimport { logoutUser } from \"../actions/authActions\";\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\nimport EditModal from \"./EditModal\";\nimport { Header, Container, Grid, Image } from \"semantic-ui-react\";\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors(this.props.email);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (\n      this.props.email !== prevProps.email &&\n      this.props.email !== undefined\n    ) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  // Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map((color, index) => (\n      <div className=\"color-square-container\" key={color.hexColor + index}>\n        <div\n          className=\"color-square\"\n          style={{ backgroundColor: color.hexColor, opacity: color.alpha }}\n        />\n      </div>\n    ));\n    return <div style={{ margin: \"0px auto\" }}>{colorSet}</div>;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) => (\n        <Grid.Column key={palette._id}>\n          <div className=\"palette-container\">\n            <h5>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </h5>\n            <Image src={palette.url} centered />\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      ));\n      return Palettes;\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as=\"h1\" className=\"palette-header\">\n          My Color Palettes\n        </Header>\n        <Grid stackable columns={3}>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    loading: state.myPalettes.loading,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getColors, logoutUser }\n)(MyPallettes);\n","import React from \"react\";\nimport { Icon, Container } from \"semantic-ui-react\";\nimport \"./css/footer.css\";\n\nconst Footer = ({ url }) => {\n  return (\n    <div>\n      <Container className=\"footer\">\n        <h5 className=\"footer-header\">© 2019</h5>\n        <div className=\"icon-container\">\n          <a\n            className=\"icon-div\"\n            href=\"https://github.com/fulin426/Color-Pic\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"github\" size=\"big\" />\n          </a>\n          <a\n            className=\"icon-div\"\n            href=\"https://www.linkedin.com/in/fu-lin-liu/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"linkedin square\" size=\"big\" />\n          </a>\n          <a\n            className=\"icon-div\"\n            href=\"mailto:fulin426@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"mail\" size=\"big\" />\n          </a>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { rgbToHex } from \"./convertRGB\";\nconst Clarifai = require(\"clarifai\");\nconst clarifaiID = require(\"../config/keys\").clarifaiID;\nconst app = new Clarifai.App({ apiKey: clarifaiID });\n\n// Califai API Call\nexport const analyzeImage = url => dispatch => {\n  // Show loading screen\n  dispatch({ type: \"CLARIFAI_REQUEST_WAITING\" });\n\n  app.models\n    .predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n    .then(res => {\n      const hexColors = [];\n      // Create new array of hexcolors from response data\n      res.outputs[0].data.colors.map(color => {\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n      });\n      // send hexcolor data as data query to back end\n      fetch(\"/api/colormind?colors=\" + hexColors)\n        .then(res => res.json())\n        .then(res => {\n          let RGBtoHexData = [];\n          let colorMindResponse = res;\n          // create new array from response data with color palette and default alpha = 1\n          for (let i = 0; i < colorMindResponse.length; i++) {\n            RGBtoHexData.push({\n              hexColor: rgbToHex(\n                colorMindResponse[i][0],\n                colorMindResponse[i][1],\n                colorMindResponse[i][2]\n              ),\n              alpha: 1\n            });\n          }\n          dispatch({\n            type: \"ANALYZE_IMAGE\",\n            payload: RGBtoHexData,\n            status: \"recieved\",\n            error: false,\n            open: false,\n            loader: \"hide\"\n          });\n        });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: \"ANALYZE_IMAGE_ERROR\",\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: \"hide\"\n      });\n    });\n};\n\n// image modal Actions\nexport const openImgModal = () => {\n  return {\n    type: \"OPEN_IMAGE_MODAL\"\n  };\n};\n\nexport const closeImgModal = () => {\n  return {\n    type: \"CLOSE_IMAGE_MODAL\"\n  };\n};\n\nexport const newImgSubmit = () => {\n  return {\n    type: \"NEW_IMAGE_SUBMIT\"\n  };\n};\n\nexport const showModalLoader = () => {\n  return {\n    type: \"CLARIFAI_REQUEST_WAITING\"\n  };\n};\n\nexport const clearImgSubmit = () => {\n  return {\n    type: \"CLEAR_IMAGE_SUBMIT\"\n  };\n};\n\nexport const sendErrorStatus = () => {\n  return {\n    type: \"SEND_ERROR\"\n  };\n};\n\nexport const clearErrorStatus = () => {\n  return {\n    type: \"CLEAR_ERROR\"\n  };\n};\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: \"MAIN_IMAGE\",\n    url: url\n  };\n};\n\nexport const addImageSelection = url => {\n  return {\n    type: \"ADD_URL\",\n    url: url\n  };\n};\n\nexport const deleteURL = url => dispatch => {\n  dispatch({\n    type: \"DELETE_URL\",\n    url: url\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { Dimmer, Loader, Grid, Icon } from \"semantic-ui-react\";\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      this.props.analyzeImage(this.props.url);\n    }\n  }\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url) {\n      this.props.analyzeImage(this.props.url);\n    }\n\n    if (this.props.status === \"recieved\") {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: \"pointer\"\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: \"black\"\n      };\n    } else {\n      return {\n        color: \"white\"\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >= 1) {\n      const ColorsList = this.props.colors.map((color, index) => (\n        <div\n          // add index in case there are of same color\n          key={color.hexColor + index}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() =>\n              this.handleOnClickSquare(color.hexColor, index, color.alpha)\n            }\n          />\n          <div style={this.renderCarot(index)} className=\"carot-container\">\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      ));\n      return ColorsList;\n    }\n  }\n\n  // Load a initial height before colors are recieved\n  renderLoaderHeight() {\n    if (this.props.colors.length === 0) {\n      return { height: 60 };\n    }\n  }\n  renderLoader() {\n    if (this.props.loader === \"show\") {\n      return (\n        <div style={this.renderLoaderHeight()}>\n          <Dimmer active inverted>\n            <Loader size=\"large\" inverted>\n              Loading Colors\n            </Loader>\n          </Dimmer>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Grid.Column width={16}>\n        {this.colorsRender()}\n        {this.renderLoader()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token,\n    loader: state.colors.loader\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    sendColorInfo,\n    sendPositionInfo,\n    sendSelectedColor,\n    clearRecieved\n  }\n)(ColorsList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Image } from \"semantic-ui-react\";\n\nconst ImageMain = ({ url }) => {\n  return (\n    <Grid.Column mobile={16} computer={13}>\n      <Image className=\"sample-img\" src={url} alt=\"analyze main\" />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { changeMainImage } from \"../actions\";\nimport { addImageSelection } from \"../actions\";\nimport { closeImgModal } from \"../actions\";\nimport { openImgModal } from \"../actions\";\nimport { newImgSubmit } from \"../actions\";\nimport { clearImgSubmit } from \"../actions\";\nimport { clearErrorStatus } from \"../actions\";\nimport { showModalLoader } from \"../actions\";\nimport { sendErrorStatus } from \"../actions\";\nimport { Button, Modal, Input, Dimmer, Loader } from \"semantic-ui-react\";\n\nclass AddImgModal extends Component {\n  state = { input: \"\" };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === \"\") {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (\n      this.checkForDuplicateUrls() === \"no duplicates\" &&\n      this.state.input !== \"\"\n    ) {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  }\n\n  checkForDuplicateUrls() {\n    for (let i = 0; i < this.props.exampleImages.length; i++) {\n      if (this.state.input === this.props.exampleImages[i]) {\n        return \"duplicate exists\";\n      }\n    }\n    return \"no duplicates\";\n  }\n\n  componentDidUpdate() {\n    if (\n      this.props.error === false &&\n      this.props.status === \"recieved\" &&\n      this.props.image === \"new\"\n    ) {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: \"\" });\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n        />\n      );\n    } else if (this.props.error !== false) {\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n        />\n      );\n    } else {\n      //everything else render normal input\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n        />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === \"\") {\n      return (\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color=\"blue\"\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color=\"blue\"\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (\n      this.props.error === true &&\n      this.state.input !== \"\" &&\n      this.checkForDuplicateUrls() === \"no duplicates\"\n    ) {\n      return <p> Please check URL and try again </p>;\n    }\n    if (this.checkForDuplicateUrls() === \"duplicate exists\") {\n      this.props.sendErrorStatus();\n      return <p> Image URL already exists. Please try a different one</p>;\n    }\n  }\n\n  renderLoader() {\n    if (this.props.loader === \"show\") {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"big\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: \"\" });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  };\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  };\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state;\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(false, true)} icon>\n          Try your own image\n        </Button>\n        <Modal\n          open={this.props.open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content className=\"add-image-modal\">\n            <h3>Try your own image</h3>\n            <form onSubmit={event => this.submitURL(event)}>\n              {this.renderURLinput()}\n              {this.renderSubmitButton()}\n            </form>\n            {this.renderErrorMessage()}\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    changeMainImage,\n    addImageSelection,\n    closeImgModal,\n    openImgModal,\n    newImgSubmit,\n    clearImgSubmit,\n    clearErrorStatus,\n    showModalLoader,\n    sendErrorStatus\n  }\n)(AddImgModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeMainImage } from \"../actions\";\nimport { analyzeImage } from \"../actions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { deleteURL } from \"../actions\";\nimport { Grid, Icon } from \"semantic-ui-react\";\nimport ImageModal from \"./ImageModal\";\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: \"3px solid #0000CC\",\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages() {\n    return this.props.exampleUrl.map(url => (\n      <div className=\"image-wrapper\" key={url}>\n        <img\n          className=\"image-selection\"\n          src={url}\n          alt=\"selection\"\n          style={this.renderBorder(url)}\n          onClick={() => this.handleClick(url)}\n        />\n        <div onClick={() => this.props.deleteURL(url)} className=\"delete-img\">\n          <Icon name=\"remove circle\" />\n        </div>\n      </div>\n    ));\n  }\n\n  render() {\n    return (\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">{this.renderImages()}</div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeMainImage,\n    clearRecieved,\n    clearPosition,\n    deleteURL,\n    analyzeImage\n  }\n)(ImageSelection);\n","import React, { Component } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\nimport { updateHexColor } from \"../actions/colorInfoActions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { Grid } from \"semantic-ui-react\";\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor;\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  };\n\n  renderColorPicker() {\n    if (this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: \"100%\",\n              marginRight: 4 + \"em\"\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return (\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateHexColor,\n    sendColorInfo,\n    sendSelectedColor,\n    sendAlphaInfo\n  }\n)(ColorPicker);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ColorInfo extends Component {\n  render() {\n    return (\n      <div className=\"color-info\">\n        <h5>Hex</h5>\n        <input className=\"hex-info-input\" value={this.props.hexColor} />\n        <p className=\"info-text\">R</p>\n        <p className=\"info-text\">G</p>\n        <p className=\"info-text\">B</p>\n        <p className=\"info-text\">a</p>\n        <div>\n          <input className=\"info-input\" defaultValue={this.props.R} readOnly />\n          <input className=\"info-input\" defaultValue={this.props.G} readOnly />\n          <input className=\"info-input\" defaultValue={this.props.B} readOnly />\n          <input\n            className=\"info-input\"\n            defaultValue={this.props.alpha}\n            readOnly\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(ColorInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nclass Regenerate extends Component {\n  handleClick = url => () => {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  };\n\n  render() {\n    return (\n      <Button className=\"regen-btn\" onClick={this.handleClick(this.props.url)}>\n        <Icon name=\"redo\" /> Regenerate\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    clearRecieved,\n    clearPosition\n  }\n)(Regenerate);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { newColorPalette } from \"../actions/MyPaletteAPI\";\nimport { Button, Modal, Input, Header, Icon } from \"semantic-ui-react\";\n\nclass SavePalette extends Component {\n  state = {\n    input: \"\",\n    open: false,\n    error: false,\n    placeHolder: \"New Palette Name...\"\n  };\n\n  handleInput(event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false,\n      placeHolder: \"New Palette Name...\"\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true });\n  };\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: \"\",\n      open: false,\n      error: false\n    });\n  };\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette(\n      {\n        url: this.props.url,\n        email: this.props.email,\n        title: this.state.input,\n        colors: this.props.colors\n      },\n      this.props.token\n    );\n    this.close();\n  }\n\n  setError() {\n    if (this.state.input === \"\") {\n      this.setState({\n        error: true,\n        placeHolder: \"Title Required...\"\n      });\n    }\n\n    if (this.state.input.length >= 40) {\n      this.setState({\n        error: true,\n        placeHolder: \"Over Max Characters Allowed\"\n      });\n    }\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === \"\" || this.state.input.length >= 40) {\n      return (\n        <Button\n          onClick={() => this.setError()}\n          color=\"blue\"\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return (\n        <Link to=\"/MyPallettes\">\n          <Button\n            color=\"blue\"\n            style={{ marginLeft: 0.75 + \"em\" }}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color, index) => (\n      <div key={color.hexColor + index} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    ));\n    return ColorsList;\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick,\n      error,\n      placeHolder\n    } = this.state;\n\n    return (\n      <div>\n        <Button\n          onClick={this.closeConfigShow(true, false)}\n          className=\"save-pallette\"\n          icon\n        >\n          <Icon name=\"save\" /> Save Palette\n        </Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">Save Palette</Header>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={this.state.input}\n              onChange={event => this.handleInput(event)}\n              placeholder={placeHolder}\n              error={error}\n            />\n            <div className=\"colors-render\">{this.colorsRender()}</div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { newColorPalette }\n)(SavePalette);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ColorsList from \"./ColorsList\";\nimport ImageMain from \"./ImageMain\";\nimport ImageSelection from \"./ImageSelection\";\nimport ColorPicker from \"./ColorPicker\";\nimport ColorInfo from \"./ColorInfo\";\nimport Regenerate from \"./Regenerate\";\nimport SavePalette from \"./SavePalette\";\nimport {\n  Container,\n  Grid,\n  Popup,\n  Button,\n  Icon,\n  Header\n} from \"semantic-ui-react\";\n\nclass HomePage extends Component {\n  savepaletteRender() {\n    if (this.props.Authenticated === true) {\n      return <SavePalette />;\n    } else {\n      return (\n        <Popup\n          trigger={\n            <Button className=\"save-pallette\">\n              <Icon name=\"save\" /> Save Palette\n            </Button>\n          }\n          content=\"Log In required for this feature\"\n          position=\"bottom right\"\n          size=\"large\"\n          basic\n        />\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Container textAlign=\"center\">\n          <Header as=\"h1\" className=\"generate-header\">\n            Choose a picture and analyze\n          </Header>\n          <Grid celled>\n            <Grid.Row>\n              <ImageSelection />\n              <ImageMain />\n            </Grid.Row>\n            <Grid.Row>\n              <ColorsList />\n            </Grid.Row>\n            <Grid.Row>\n              <ColorPicker />\n              <Grid.Column mobile={16} tablet={7} computer={6}>\n                <ColorInfo />\n                <div className=\"regen-save-buttons\">\n                  <Regenerate />\n                  {this.savepaletteRender()}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(HomePage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { loadUser } from \"../actions/authActions\";\nimport Analytics from \"react-router-ga\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport LandingPage from \"./LandingPage\";\nimport MyPallettes from \"./MyPallettes\";\nimport Footer from \"./Footer\";\nimport Generate from \"./Generate\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(\n      \"This app was created by Fu-Lin Liu, a web developer based out of San Francisco. I can be reached at fulin426@gmail.com\"\n    );\n    // Only load user if there is a token in local storage\n    if (localStorage.getItem(\"token\") !== null) {\n      this.props.loadUser();\n    }\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Analytics id=\"UA-135017095-3\" debug>\n          <HeaderMenu />\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/Generate\" component={Generate} />\n          <Route path=\"/MyPallettes\" component={MyPallettes} />\n          <Footer />\n        </Analytics>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { loadUser }\n)(App);\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {\n        ...state,\n        loader: 'show'\n      };\n    case 'CLEAR_RECIEVED':\n      return {\n        ...state,\n        status: action.status\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: 'new'\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: ''\n      };\n    case 'SEND_ERROR':\n      return {\n        ...state,\n        error: true\n      }\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: false\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {\n        ...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {\n        ...state,\n        open: true,\n        error: false\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {\n        ...state,\n        open: false,\n        error: false,\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\n  exampleImages: [\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/DabinExample.jpg',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n  loading: false\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload,\n        loading: false\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n      case 'COLORS_LOADING':\n        return {\n          ...state,\n          loading: true\n        };\n      case 'CLEAR_PALETTE_COLORS':\n        return {\n          ...state,\n          Data: [],\n          AddColor: '',\n          DeleteColor: '',\n          UpdateColor: '',\n        };\n    default:\n     return state;\n  }\n}\n","const initialState = {\n  message: '',\n  status: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        message: action.payload.data,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: '',\n        status: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: '',\n  modal: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        modal: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: '',\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}