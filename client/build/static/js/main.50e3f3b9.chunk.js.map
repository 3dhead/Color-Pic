{"version":3,"sources":["images/LandingPageExample.png","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingPage.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","password","verifyPassword","email","userNamePlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","onClick","style","marginLeft","marginRight","isLoading","Dimmer","active","inverted","Loader","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","Content","color","errorMessage","onSubmit","buttonSubmit","focus","verifyPasswordRender","renderLoader","Component","connect","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","console","log","response","callAPI","get","concat","getColors","Logout","clearColors","display","react_router_dom","to","logout","user","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Authenticated","components_Logout","components_LoginModal","as","Link","minHeight","padding","children","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","myPalettesMenuItemRender","Pusher","dimmed","Segment","textAlign","sideBarStyles","Container","Icon","position","loginRender","isAuthenticated","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","myPalettesRender","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","stackable","columns","verticalAlign","marginBottom","Column","width","height","Image","src","LandingPageExamplePicture","alt","box","border","boxShadow","Header","fontSize","marginTop","LandingPage","components_LandingPageExample","margin","Row","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","title","onCancel","onConfirm","deleteColor","myPalettes","DeleteColor","id","delete","app","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","r","g","b","onChangeComplete","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","renderOneColorSet","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","prevProps","palette","_id","ConfirmDeleteModal","components_EditModal","centered","loading","renderPalettes","addColor","AddColor","updateColor","UpdateColor","Footer","href","rel","ColorsList","renderColor","colorsRender","mobile","computer","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","icon","renderURLinput","renderSubmitButton","renderErrorMessage","ImageSelection","selectedUrl","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","Regenerate","SavePalette","placeHolder","newColorPalette","setError","handleConfirmClick","renderConfirmButton","HomePage","components_SavePalette","Popup","trigger","basic","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","savepaletteRender","loadUser","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.50e3f3b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPageExample.9b6ddb1f.png\";","import axios from 'axios';\n\n// Check token & load user\nexport const loadUser = () => dispatch => {\n  // User loading\n  dispatch({ type: 'USER_LOADING'});\n  \n  axios\n    .get('/api/auth/user', tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  // Show loading bubble in user register\n  dispatch({ type: 'USER_LOADING'});\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios.post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('register fail!')\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'REGISTER_FAIL'\n      });\n    });\n}\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // Show loading bubble in login\n  dispatch({ type: 'USER_LOADING'});\n\n  // headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password});\n\n  axios.post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('login fail!')\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'LOGIN_FAIL'\n      });\n    });\n}\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: 'LOGOUT_SUCCESS'\n  };\n};\n\n// Set up local storage for tokens\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem('token');\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n\n// Modal Actions\nexport const openModal = () => {\n  return {\n    type: 'OPEN_MODAL'\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: 'CLOSE_MODAL'\n  };\n};\n\n// Logout User\nexport const clearErrors = () => {\n  return {\n    type: 'CLEAR_ERRORS'\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../actions/authActions';\nimport { loginUser } from '../actions/authActions';\nimport { openModal } from '../actions/authActions';\nimport { closeModal } from '../actions/authActions';\nimport { clearErrors } from '../actions/authActions';\nimport { Button, Modal, Input, Menu, Dimmer, Loader } from 'semantic-ui-react';\n\nconst Isemail = require('isemail');\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    activeItem: 'Log In',\n    header: 'Log In to Color Pic',\n    button: 'Log In',\n    password: '',\n    verifyPassword: '',\n    email: '',\n    userNamePlaceHolder: '',\n    description:'',\n    errorStatusPassword: false,\n    errorMsgPassword:'',\n    errorStatusEmail: false,\n    errorMsgEmail:''\n   }\n\n  showLogin = size => () => {\n    this.setState({\n      activeItem: 'Log In',\n      header: 'Log In to Color Pic',\n      button: 'Log In',\n      userNamePlaceHolder:'email@email.com',\n      description: ''\n    })\n    this.props.openModal();\n    this.props.clearErrors();\n  }\n\n  showSignup = size => () => {\n    this.setState({\n      activeItem: 'Sign Up',\n      header: 'Join Color Pic',\n      button: 'Sign Up',\n      userNamePlaceHolder: 'Register new user',\n      description:'Register to access more features'\n    })\n    this.props.openModal();\n    this.props.clearErrors();\n  }\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: ''\n    });\n    this.props.closeModal();\n    this.props.clearErrors();\n  }\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Log In to Color Pic',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder:'Username',\n      description:''\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  }\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Join Color Pic Today',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder: 'Register New User',\n      description:'Register to access more features'\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  }\n\n  // clear all error messages\n  resetDefaults() {\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: '',\n      errorMsgPassword: ''\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (this.state.email === '' && this.state.password === '' && this.state.verifyPassword === '' ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail:'Email cannot be empty',\n        errorMsgPassword:'Passwords cannot be empty',\n      });\n      return\n    }\n\n    // If email is empty\n    if (this.state.email === '') {\n      this.setState({\n        errorMsgEmail:'Email cannot be empty',\n        errorStatusEmail: true\n      });\n      return\n    }\n\n    // If either password is empty on Sign Up\n    if (this.state.activeItem === 'Sign Up' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Password cannot be empty',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If Login Password is empty\n    if (this.state.activeItem === 'Log In' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Please enter password',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If passwords do not match show error message\n    if (this.state.activeItem === 'Sign Up' && this.state.password !== this.state.verifyPassword) {\n      this.setState({\n        errorMsgPassword:'Passwords do not match',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // Validate Email\n    if(this.state.activeItem === 'Sign Up' && Isemail.validate(this.state.email) === false) {\n      this.setState({\n        errorStatusEmail: 'error',\n        errorMsgEmail:'Not a valid email',\n      });\n      return\n    }\n\n    // If Sign Up and No errors statuses\n    if(this.state.activeItem === 'Sign Up') {\n      this.props.registerUser(this.state.email, this.state.password);\n    }\n\n    // If Log In and No errors statuses\n    if(this.state.activeItem === 'Log In') {\n      this.props.loginUser(this.state.email, this.state.password);\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if(this.state.activeItem === 'Sign Up') {\n      return(\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, 'verifyPassword')}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return(\n        <Button\n          onClick={this.showSignup()}\n          style={{ marginLeft: '0.5em', marginRight: '1rem' }}\n        >\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.isLoading === true) {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const {\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail,\n    } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.showLogin()}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal size='tiny' open={this.props.modal} onClose={this.close} closeIcon>\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name='Log In'\n              active={activeItem === 'Log In'}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name='Sign Up'\n              active={activeItem === 'Sign Up'}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <p>{description}</p>\n              <p style={{color: 'red'}}>{this.props.errorMessage}</p>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, 'email')}\n                error={errorStatusEmail}\n                focus\n              />\n              <p style={{\"color\": \"red\"}}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, 'password')}\n                error={errorStatusPassword}\n              />\n              <p style={{color: 'red'}}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    errorMessage: state.errors.message,\n    modal: state.auth.modal,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect( mapStateToProps, {\n  registerUser,\n  loginUser,\n  openModal,\n  closeModal,\n  clearErrors\n})(LoginModal);\n","import axios from 'axios';\nimport { tokenConfig } from './authActions';\n\nconst callAPI = (email, dispatch) => {\n  // Data Loading\n  dispatch({ type: 'COLORS_LOADING' });\n\n  axios.get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Get user color palettes\nexport const getColors = (email) => dispatch => {\n  callAPI(email, dispatch);\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => { callAPI(email, dispatch) })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = (id) => dispatch => {\n  axios.delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Clear Colors\nexport const clearColors = () => {\n  return {\n    type: 'CLEAR_PALETTE_COLORS'\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { logoutUser } from '../actions/authActions';\nimport { clearColors } from '../actions/MyPaletteAPI';\n\nclass Logout extends Component {\n  componentDidMount() {\n    // If token expired log out user\n    if (this.props.email === undefined) {\n      this.props.logoutUser();\n    }\n  }\n\n  logout(event) {\n    this.props.logoutUser();\n    this.props.clearColors();\n  }\n\n  render() {\n    return(\n      <div>\n        <p style={{ 'display': 'inline-block'}}>\n          {this.props.email}\n        </p>\n        <Link to=\"/\">\n          <Button\n            style={{\n            'display': 'inline-block',\n            'marginLeft': '0.5em'}}\n            onClick={event => this.logout(event)}\n          >\n            Log Out\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.auth.user.email\n  };\n}\n\nexport default connect(mapStateToProps, { logoutUser, clearColors })(Logout);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesMenuItemRender() {\n    if (this.props.Authenticated === true) {\n      return(\n        <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n      );\n    }\n  }\n\n  sideBarStyles() {\n    if (this.props.Authenticated === true) {\n      return({ minHeight: 122, padding: '1em 0em' });\n    }\n    else {\n      return({ minHeight: 82, padding: '1em 0em' })\n    }\n  }\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n          <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n          {this.myPalettesMenuItemRender()}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={this.sideBarStyles()}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                  {this.loginRender()}\n                </Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(MobileContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Dimmer,\n  Loader,\n  Icon\n} from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return(<Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>);\n    }\n  }\n\n  renderLoader() {\n    if(this.props.isLoading === true) {\n      return(\n        <Dimmer active inverted>\n          <Loader size='small' inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Menu.Item as={Link} to='/'><Icon name='home' />Color Pic</Menu.Item>\n              <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n              {this.myPalettesRender()}\n              <Menu.Item position='right'>\n                {this.loginRender()}\n                {this.renderLoader()}\n              </Menu.Item>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(DesktopContainer);\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport {\n  Grid,\n  Image,\n  Segment,\n  Header,\n  Button\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LandingPageExamplePicture from '../images/LandingPageExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExample = () => {\n  return(\n    <div>\n      <Grid\n        stackable\n        columns={2}\n        verticalAlign='middle'\n        style={{ padding: '1em', marginBottom: '1em' }}\n        >\n        <Grid.Column\n          width={10}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '0em', height: '100%' }}>\n            <Image src={ LandingPageExamplePicture } alt='Landing Page Example Palette'/>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={6}\n          style={{\n            textAlign: \"center\",\n            padding: '0em',\n            box: '0'\n          }}\n          >\n          <Segment style={{\n            padding: '1em',\n            height: '100%',\n            border: '0',\n            boxShadow: 'none'\n          }}>\n            <Header\n              as=\"h1\"\n              style={{\n                fontSize: '36px',\n                marginTop: '2rem',\n                marginBottom: '3rem'\n              }}\n            >\n              Fast and Efficient color palettes generator\n            </Header>\n            <p style={{ fontSize: '18px', marginBottom: '3rem' }} >\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n              <Button style={{ fontSize: '16px', marginBottom: '1rem' }} >\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport { Container, Grid, Icon} from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\n\nconst LandingPage = () => {\n  return(\n    <Container>\n      <LandingPageExample />\n      <Grid\n        stackable\n        columns={3}\n        style={{ margin: '4em 0em' }}\n      >\n         <Grid.Row>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Capture colors from Images</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"adjust\" size='huge'/>\n             <h3>Adjust colors and refine palette</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"save\" size='huge'/>\n             <h3>Save palettes for future reference</h3>\n           </Grid.Column>\n         </Grid.Row>\n       </Grid>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = { open: false };\n\n  show = () => {\n    this.setState({ open: true });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.setState({ open: false });\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","const Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  // Show loading screen\n  dispatch({ type: 'CLARIFAI_REQUEST_WAITING' });\n\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n\n// image modal Actions\nexport const openImgModal = () => {\n  return ({\n    type: 'OPEN_IMAGE_MODAL'\n  });\n}\n\nexport const closeImgModal = () => {\n  return ({\n    type: 'CLOSE_IMAGE_MODAL',\n  });\n}\n\nexport const newImgSubmit = () => {\n  return ({\n    type: 'NEW_IMAGE_SUBMIT'\n  });\n}\n\nexport const showModalLoader = () => {\n  return ({\n    type: 'CLARIFAI_REQUEST_WAITING'\n  });\n}\n\nexport const clearImgSubmit = () => {\n  return ({\n    type: 'CLEAR_IMAGE_SUBMIT'\n  });\n}\n\nexport const sendErrorStatus = () => {\n  return ({\n    type: 'SEND_ERROR'\n  });\n}\n\nexport const clearErrorStatus = () => {\n  return ({\n    type: 'CLEAR_ERROR'\n  });\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({ hexInput: color });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker-edit\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (dimmer) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors(this.props.email);\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData, this.props.email);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, dimmer, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n              focus\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>Cancel</Button>\n            <Button onClick={this.handleConfirm} color='blue'>\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport { logoutUser } from '../actions/authActions';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\nimport {\n  Header,\n  Container,\n  Grid,\n  Image,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors(this.props.email);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (this.props.email !== prevProps.email && this.props.email !== undefined) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  // Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{ backgroundColor: color.hexColor, opacity: color.alpha }}\n        />\n      </div>\n     );\n     return (\n       <div style={{ margin: '0px auto' }}>\n         {colorSet}\n       </div>\n     );\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n        >\n          <div className=\"palette-container\">\n            <h5>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </h5>\n            <Image\n              src={palette.url}\n              centered\n            />\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loading === true) {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"palette-header\">\n          My Color Palettes\n        </Header>\n        <Grid stackable columns={3}>\n          {this.renderPalettes()}\n          {this.renderLoader()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    loading: state.myPalettes.loading,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect (mapStateToProps, { getColors, logoutUser })(MyPallettes);\n","import React from 'react';\nimport { Icon, Container } from 'semantic-ui-react';\n\nconst Footer = ({url}) => {\n  return(\n    <Container className=\"footer\">\n      <h5 className=\"footer-header\">\n        © 2019\n      </h5>\n      <div className=\"icon-container\">\n        <a\n          className=\"icon-div\"\n          href=\"https://github.com/fulin426/Color-Pic\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"github\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"https://www.linkedin.com/in/fu-lin-liu/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"linkedin square\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"mailto:fulin426@gmail.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"mail\" size='big' />\n        </a>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >= 1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n      {this.renderLoader()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token,\n    loader: state.colors.loader\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader, Icon } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = { input: '' };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          focus\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          focus\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n          focus\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)} icon>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n            closeIcon\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"remove circle\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: '100%',\n              marginRight: 4 + 'em'\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    //empty now to reduce errors in console.log\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button, Icon } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick = url => () => {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        onClick={this.handleClick(this.props.url)}\n      >\n        <Icon name='redo' />  Regenerate\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n})(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header, Icon } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false,\n    placeHolder: 'New Palette Name...'\n  };\n\n  handleInput(event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false,\n      placeHolder: 'New Palette Name...'\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      url: this.props.url,\n      email: this.props.email,\n      title: this.state.input,\n      colors: this.props.colors\n    }, this.props.token)\n    this.close();\n  }\n\n  setError() {\n    if (this.state.input === '') {\n      this.setState({\n        error: true,\n        placeHolder: 'Title Required...'\n      });\n    }\n\n    if (this.state.input.length >= 40) {\n      this.setState({\n        error: true,\n        placeHolder: 'Over Max Characters Allowed'\n      });\n    }\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '' || this.state.input.length >= 40) {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick,\n      error,\n      placeHolder\n    } = this.state\n\n    return (\n      <div>\n        <Button\n          onClick={this.closeConfigShow(true, false)}\n          className=\"save-pallette\"\n          icon\n        >\n          <Icon name='save' />  Save Palette\n        </Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">Save Palette</Header>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={this.state.input}\n              onChange={event => this.handleInput(event)}\n              placeholder={placeHolder}\n              focus\n              error={error}\n            />\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport {\n  Container,\n  Grid,\n  Popup,\n  Button,\n  Icon,\n  Header\n} from 'semantic-ui-react';\n\nclass HomePage extends Component {\n  savepaletteRender() {\n    if(this.props.Authenticated === true) {\n      return <SavePalette />;\n    } else {\n      return (\n        <Popup\n          trigger={<Button className=\"save-pallette\"><Icon name='save' />  Save Palette</Button>}\n          content=\"Log In required for this feature\"\n          position='bottom right'\n          size='small'\n          basic\n        />\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Container textAlign='center'>\n          <Header as=\"h1\" className=\"generate-header\">\n            Choose a picture and analyze\n          </Header>\n          <Grid celled>\n            <Grid.Row>\n              <ImageSelection />\n              <ImageMain />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorsList />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorPicker />\n              <Grid.Column mobile={16} tablet={7} computer={6}>\n                <ColorInfo />\n                <div className=\"regen-save-buttons\">\n                  <Regenerate />\n                  {this.savepaletteRender()}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { })(HomePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { loadUser } from '../actions/authActions';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    // Only load user if there is a token in local storage\n    if(localStorage.getItem('token') !== null) {\n      this.props.loadUser();\n    }\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { loadUser })(App);\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {\n        ...state,\n        loader: 'show'\n      };\n    case 'CLEAR_RECIEVED':\n      return {\n        ...state,\n        status: action.status\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: 'new'\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: ''\n      };\n    case 'SEND_ERROR':\n      return {\n        ...state,\n        error: true\n      }\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: false\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {\n        ...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {\n        ...state,\n        open: true,\n        error: false\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {\n        ...state,\n        open: false,\n        error: false,\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n  loading: false\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload,\n        loading: false\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n      case 'COLORS_LOADING':\n        return {\n          ...state,\n          loading: true\n        };\n      case 'CLEAR_PALETTE_COLORS':\n        return {\n          ...state,\n          Data: [],\n          AddColor: '',\n          DeleteColor: '',\n          UpdateColor: '',\n        };\n    default:\n     return state;\n  }\n}\n","const initialState = {\n  message: '',\n  status: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        message: action.payload.data,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: '',\n        status: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: '',\n  modal: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        modal: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: '',\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}