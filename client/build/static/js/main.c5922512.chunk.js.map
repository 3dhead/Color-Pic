{"version":3,"sources":["images/LandingPageExample.png","components/LoginModal.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingPage.js","actions/MyPaletteAPI.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/HomePageHeader.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","LoginModal","state","open","activeItem","header","button","username","password","email","userNamePlaceHolder","description","showLogin","size","_this","setState","showSignup","close","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","event","this","target","value","preventDefault","console","log","_this2","react_default","a","createElement","className","Input","type","placeholder","onChange","inputEmail","_this3","_this$state","Button","onClick","style","marginLeft","marginRight","Modal","onClose","Menu","pointing","secondary","Item","active","Content","inputUsername","inputPassword","emailRender","color","buttonSubmit","Component","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","children","props","as","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","Link","to","Pusher","dimmed","Segment","textAlign","minHeight","padding","Container","Icon","components_LoginModal","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","position","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","stackable","columns","marginBottom","Column","width","Image","src","LandingPageExamplePicture","height","Header","fontSize","marginTop","react_router_dom","LandingPage","components_LandingPageExample","divided","Row","getColors","dispatch","axios","get","then","res","payload","data","catch","error","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","concat","title","onCancel","onConfirm","connect","deleteColor","myPalettes","DeleteColor","id","delete","app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","err","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","clearColorList","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","r","g","b","onChangeComplete","key","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","renderOneColorSet","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","undefined","palette","_id","mobile","computer","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","Footer","href","HomePageHeader","ColorsList","prevProps","renderColor","Dimmer","inverted","Loader","colorsRender","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","handleInput","submitURL","_this4","onSubmit","renderURLinput","renderSubmitButton","renderErrorMessage","renderLoader","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","Regenerate","SavePalette","newColorPalette","setError","handleConfirmClick","renderTitleInput","renderConfirmButton","post","HomePage","components_HomePageHeader","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","Object","objectSpread","array","item","updateObjectInArray","newImageList","filter","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c5922512.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPageExample.9b6ddb1f.png\";","import React, { Component } from 'react';\nimport { Button, Modal, Input, Menu, Header } from 'semantic-ui-react';\n\nclass LoginModal extends Component {\n  state = {\n    open: false,\n    activeItem: 'Log In',\n    header: 'Log In to Color Pic',\n    button: 'Log In',\n    username: '',\n    password: '',\n    email: '',\n    userNamePlaceHolder: '',\n    description:''\n   }\n\n  showLogin = size => () => {\n    this.setState({\n      size,\n      open: true,\n      activeItem: 'Log In',\n      header: 'Log In to Color Pic',\n      button: 'Log In',\n      userNamePlaceHolder:'Username',\n      description: ''\n    })\n  }\n\n  showSignup = size => () => {\n    this.setState({\n      size,\n      open: true,\n      activeItem: 'Sign Up',\n      header: 'Join Color Pic Today',\n      button: 'Sign Up',\n      userNamePlaceHolder: 'Register new user',\n      description:'Register to access more features'\n    })\n  }\n\n  close = () => {\n    this.setState({\n      open: false,\n      username: '',\n      password: '',\n      email: ''\n    });\n  }\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Log In to Color Pic',\n      username: '',\n      password: '',\n      email: '',\n      userNamePlaceHolder:'Username',\n      description:''\n    });\n  }\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Sign Up for Color Pic',\n      username: '',\n      password: '',\n      email: '',\n      userNamePlaceHolder: 'Register New User',\n      description:'Register to access more features'\n    });\n  }\n\n  inputUsername(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  inputPassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  inputEmail(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    console.log('submit that login');\n  }\n\n  emailRender() {\n    // Only show email for sign up\n    if(this.state.activeItem === 'Sign Up') {\n      return(\n        <div>\n          <label className=\"login-label\">Email</label>\n          <Input\n            type='email'\n            className=\"login-input\"\n            placeholder='email@example.com'\n            value={this.state.email}\n            onChange={event => this.inputEmail(event)}\n          />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const {\n      open,\n      size,\n      activeItem,\n      button,\n      header,\n      username,\n      password,\n      userNamePlaceHolder,\n      description\n    } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.showLogin('tiny')}>\n          Log In\n        </Button>\n        <Button onClick={this.showSignup('tiny')} style={{ marginLeft: '0.5em', marginRight: '1rem' }}>\n          Sign Up\n        </Button>\n        <Modal size={size} open={open} onClose={this.close}>\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name='Log In'\n              active={activeItem === 'Log In'}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name='Sign Up'\n              active={activeItem === 'Sign Up'}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <p>{description}</p>\n            </div>\n            <form>\n              <label className=\"login-label\">Username</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={username}\n                onChange={event => this.inputUsername(event)}\n              />\n              <label className=\"login-label\">Password</label>\n              <Input\n                type='password'\n                className=\"login-input\"\n                placeholder='Password'\n                value={password}\n                onChange={event => this.inputPassword(event)}\n              />\n              {this.emailRender()}\n              <Button className=\"login-btn\" color=\"blue\" onClick={event => this.buttonSubmit(event)}>\n                {button}\n              </Button>\n            </form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default LoginModal;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport { Container, Icon, Menu, Responsive, Segment, Sidebar } from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n          <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n          <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n          {/* <Menu.Item as='a'>Log In</Menu.Item>\n          <Menu.Item as='a'>Sign Up</Menu.Item> */}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 125, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <LoginModal />\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default MobileContainer;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport { Button, Container, Menu, Responsive, Segment, Visibility, Icon } from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    // const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Container>\n                <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n                <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n                <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n                <Menu.Item position='right'>\n                  <LoginModal />\n                  <Icon name=\"user circle\" size=\"large\"/>\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default DesktopContainer;\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Header,\n  Button\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LandingPageExamplePicture from '../images/LandingPageExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExample = () => {\n  return(\n    <div>\n      <Grid\n        stackable\n        columns={2}\n        style={{ padding: '1em', marginBottom: '3em' }}\n        >\n        <Grid.Column\n          width={10}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '0em' }}>\n            <Image src={ LandingPageExamplePicture } />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={6}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment style={{\n            padding: '0em 1em 3em 1em',\n            height: '100%'\n          }}>\n            <Header\n              as=\"h1\"\n              style={{\n                fontSize: '36px',\n                marginTop: '3rem',\n                marginBottom: '4rem'\n              }}\n            >\n              Fast and Efficient color palettes generator\n            </Header>\n            <p\n              style={{\n                fontSize: '20px',\n                marginBottom: '4rem'\n              }}\n            >\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n            <Button\n              style={{\n                fontSize: '16px',\n                marginBottom: '1rem'\n              }}\n            >\n              Start Generator\n            </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Grid, Image, Icon} from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\n\nconst LandingPage = () => {\n  return(\n    <Container>\n      <LandingPageExample />\n      <Grid\n        stackable\n        columns={3}\n        divided\n        style={{ marginBottom: '2em'}}\n      >\n         <Grid.Row>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Capture colors from Images</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"adjust\" size='huge'/>\n             <h3>Adjust colors and refine palette</h3>\n           </Grid.Column>\n           <Grid.Column textAlign='center'>\n             <Icon name=\"images\" size='huge'/>\n             <h3>Save palettes for future reference</h3>\n           </Grid.Column>\n         </Grid.Row>\n       </Grid>\n    </Container>\n  );\n}\n\nexport default LandingPage;\n","import axios from 'axios';\n// Get user color palettes\nexport const getColors = () => dispatch => {\n  axios.get('/api/colors')\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet)\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet)\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => {\n      // Make get call to retrieve new set\n      axios.get('/api/colors')\n        .then(res =>\n          dispatch({\n            type: 'GET_COLORS',\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          console.log(error)\n        );\n    })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios.delete(`/api/colors/${id}`)\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","const Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  console.log(url);\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n// image modal Actions\nexport const closeImgModal = () => dispatch => {\n  dispatch({\n    type: 'OPEN_IMAGE_MODAL',\n    open: false,\n    error: false,\n  })\n}\n\nexport const openImgModal = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_IMAGE_MODAL',\n    open: true,\n    error: false\n  })\n}\n\nexport const newImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'NEW_IMAGE_SUBMIT',\n    image: 'new'\n  })\n}\n\nexport const showModalLoader = () => dispatch => {\n  dispatch({\n    type: 'CLARIFAI_REQUEST_WAITING',\n    loader: 'show'\n  })\n}\n\nexport const clearImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_IMAGE_SUBMIT',\n    image: ''\n  })\n}\n\nexport const sendErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'SEND_ERROR',\n    error: true\n  })\n}\n\nexport const clearErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_ERROR',\n    error: false\n  })\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({\n      hexInput: color\n    });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (dimmer) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors();\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, dimmer, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleConfirm}\n              color='blue'\n            >\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors();\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\nimport { Icon, Container } from 'semantic-ui-react';\n\nconst Footer = ({url}) => {\n  return(\n    <Container className=\"footer\">\n      <h5 className=\"footer-header\">\n        © 2019\n      </h5>\n      <div className=\"icon-container\">\n        <a className=\"icon-div\" href=\"https://github.com/fulin426/Color-Pic\" target=\"_blank\">\n          <Icon name=\"github\" size='big' />\n        </a>\n        <a className=\"icon-div\" href=\"https://www.linkedin.com/in/fu-lin-liu/\" target=\"_blank\">\n          <Icon className=\"icon-div\" name=\"linkedin square\" size='big' />\n        </a>\n        <a className=\"icon-div\" href=\"mailto:fulin426@gmail.com\" target=\"_blank\">\n          <Icon className=\"icon-div\" name=\"mail\" size='big' />\n        </a>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      // send empty array before recieving new color set\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: '100%',\n              marginRight: 4 + 'em'\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false\n  };\n\n  handleInput (event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      title: this.state.input,\n      colors: this.props.colors\n    })\n    this.close();\n  }\n\n  //if empty Input\n  setError() {\n    this.setState({ error: true });\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '') {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  renderTitleInput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.state.error === true) {\n        return(\n          <Input\n            className=\"savepalette-modal-input\"\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Title Required...'\n            error\n          />\n        );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"savepalette-modal-input\"\n          label=\"Title\"\n          value={this.state.input}\n          onChange={event => this.handleInput(event)}\n          placeholder='New Palette Name...'\n        />\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            {this.renderTitleInput()}\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React from 'react';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport { Container, Grid } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign='center'>\n        <HomePageHeader />\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} tablet={7} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                <SavePalette />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {...state,\n        loader: action.loader,\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'SEND_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'CLEAR_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}