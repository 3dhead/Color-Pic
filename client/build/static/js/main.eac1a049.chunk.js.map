{"version":3,"sources":["images/LandingPageExample.png","images/ExamplePhoto.jpeg","images/ExampleImageAdjust.png","images/MyPalettesExample.png","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingPageStep1.js","components/LandingPageStep2.js","components/LandingPageStep3.js","components/LandingPage.js","actions/MyPaletteAPI.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/HomePageHeader.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","state","handleSidebarHide","_this","setState","sidebarOpened","handleToggle","children","this","props","react_default","a","createElement","as","Sidebar","Pushable","maxWidth","onlyMobile","Menu","animation","onHide","vertical","visible","react_router_dom","to","Item","Pusher","dimmed","Segment","textAlign","style","minHeight","padding","Container","pointing","secondary","size","onClick","Icon","name","Component","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","position","Button","marginLeft","HeaderMenu","_ref","className","components_DesktopContainer","components_MobileContainer","LandingPageExample","mobile","Grid","stackable","columns","Column","width","Image","src","LandingPageExamplePicture","height","Header","fontSize","marginTop","marginBottom","LandingPageExampleOne","ExamplePhoto","display","alignItems","LandingPageExampleTwo","ExampleImageAdjust","maxHeight","margin","MyPalettesExample","LandingPage","components_LandingPageExample","LandingPageStep1","LandingPageStep2","LandingPageStep3","getColors","dispatch","axios","get","then","res","type","payload","data","catch","error","console","log","ConfirmDelete","open","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","concat","title","onCancel","onConfirm","connect","deleteColor","myPalettes","DeleteColor","id","delete","app","require","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","map","color","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","err","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","clearColorList","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","event","target","value","_this$props","hexInput","onChange","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","closeOnEscape","closeOnDimmerClick","colorPosition","cancel","UpdateData","updateColorPalette","index","lib","marginRight","r","g","b","onChangeComplete","_this2","key","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","_this3","_this$state","Modal","onClose","close","Content","Input","label","handleTitleInput","placeholder","renderOneColorSet","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","undefined","palette","_id","computer","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","Footer","HomePageHeader","ColorsList","prevProps","renderColor","Dimmer","active","inverted","Loader","colorsRender","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","openImgModal","preventDefault","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","handleInput","submitURL","_this4","onSubmit","renderURLinput","renderSubmitButton","renderErrorMessage","renderLoader","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","newColorSet","ColorInfo","Regenerate","SavePalette","newColorPalette","setError","handleConfirmClick","renderTitleInput","renderConfirmButton","post","HomePage","components_HomePageHeader","celled","Row","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","Object","objectSpread","array","item","updateObjectInArray","newImageList","filter","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.eac1a049.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPageExample.9b6ddb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/ExamplePhoto.7cf658b5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ExampleImageAdjust.637f5330.png\";","module.exports = __webpack_public_path__ + \"static/media/MyPalettesExample.605dd10a.png\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Icon, Menu, Responsive, Segment, Sidebar } from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Link to=\"/\">\n          <Menu.Item as='a'>Color Pic</Menu.Item>\n            </Link>\n          <Link to=\"/Generate\">\n            <Menu.Item as='a'>Generate</Menu.Item>\n          </Link>\n          <Link to=\"/MyPallettes\">\n            <Menu.Item as='a'>My Palettes</Menu.Item>\n          </Link>\n          {/* <Menu.Item as='a'>Log In</Menu.Item>\n          <Menu.Item as='a'>Sign Up</Menu.Item> */}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 125, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                {/* <Menu.Item position='right'>\n                  <Button as='a'>\n                    Log in\n                  </Button>\n                  <Button as='a'>\n                    Sign Up\n                  </Button>\n                </Menu.Item> */}\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default MobileContainer;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    // const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 80, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu size='large'>\n              <Container>\n                <Link to=\"/\">\n                  <Menu.Item as='a'>Color Pic</Menu.Item>\n                </Link>\n                <Link to=\"/Generate\">\n                  <Menu.Item as='a'>Generate</Menu.Item>\n                </Link>\n                <Link to=\"/MyPallettes\">\n                  <Menu.Item as='a'>My Palettes</Menu.Item>\n                </Link>\n                <Menu.Item position='right'>\n                  <Button as='a'>\n                    Log in\n                  </Button>\n                  <Button as='a' style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default DesktopContainer;\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\n\nconst HeaderMenu = ({ children }) => (\n  <div className=\"header-menu\">\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Header,\n  Button\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LandingPageExamplePicture from '../images/LandingPageExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExample = ( {mobile} ) => {\n  return(\n    <div>\n      <Grid\n        stackable\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          width={10}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '0em' }}>\n            <Image src={ LandingPageExamplePicture } />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={6}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment style={{\n            padding: '0em 1em 3em 1em',\n            height: '100%'\n          }}>\n            <Header\n              as=\"h1\"\n              style={{\n                fontSize: mobile ? '24px' : '36px',\n                marginTop: '3rem',\n                marginBottom: '4rem'\n              }}\n            >\n              Fast and Efficient color palettes generator\n            </Header>\n            <p\n              style={{\n                fontSize: '20px',\n                marginBottom: '4rem'\n              }}\n            >\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n            <Button\n              style={{\n                fontSize: '16px',\n                marginBottom: '1rem'\n              }}\n            >\n              Start Generator\n            </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\nimport ExamplePhoto from '../images/ExamplePhoto.jpeg';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExampleOne = ( {mobile} ) => {\n  return(\n    <div>\n      <Grid\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          width={9}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '1em' }}>\n            <Image src={ ExamplePhoto } />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={7}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment\n            style={{\n            padding: '0em 2em 0em 2em',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center'\n          }}>\n            <p\n              style={{\n                fontSize: '24px'\n              }}>\n              <Icon name=\"images\" />\n              Capture colors from Images\n            </p>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExampleOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\nimport ExampleImageAdjust from '../images/ExampleImageAdjust.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExampleTwo = ( {mobile} ) => {\n  return(\n    <div>\n      <Grid\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          width={7}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment\n            style={{\n            padding: '0em 2em 0em 2em',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center'\n          }}>\n            <p\n              style={{\n                display: 'block',\n                fontSize: '24px'\n              }}>\n              <Icon name=\"adjust\" />\n              Adjust colors and refine palette.\n            </p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={9}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '1em' }}>\n            <Image src={ ExampleImageAdjust } />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExampleTwo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Grid,\n  Image,\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\nimport MyPalettesExample from '../images/MyPalettesExample.png';\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst LandingPageExampleTwo = ( {mobile} ) => {\n  return(\n    <div>\n      <Grid\n        columns={2}\n        style={{ padding: '1em' }}\n        >\n        <Grid.Column\n          width={9}\n          style={{ padding: '0em' }}\n          >\n          <Segment style={{ padding: '1em' }}>\n            <Image style={{\n              maxHeight: '400px',\n              margin: 'auto 0'\n            }}\n            src={ MyPalettesExample }\n          />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column\n          width={7}\n          style={{\n            textAlign: \"center\",\n            padding: '0em'\n          }}\n          >\n          <Segment\n            style={{\n            padding: '0em 2em 0em 2em',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center'\n          }}>\n            <p\n              style={{\n                display: 'block',\n                fontSize: '24px'\n              }}>\n              <Icon name=\"save\" />\n              Save palettes for future reference\n            </p>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExampleTwo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\nimport LandingPageStep1 from './LandingPageStep1';\nimport LandingPageStep2 from './LandingPageStep2';\nimport LandingPageStep3 from './LandingPageStep3';\n\nconst LandingPage = ({ mobile }) => {\n  return(\n    <Container>\n      <LandingPageExample />\n      <LandingPageStep1 />\n      <LandingPageStep2 />\n      <LandingPageStep3 />\n    </Container>\n  );\n}\n\nLandingPage.propTypes = {\n  mobile: PropTypes.bool,\n}\n\nexport default LandingPage;\n","import axios from 'axios';\n// Get user color palettes\nexport const getColors = () => dispatch => {\n  axios.get('/api/colors')\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet)\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet)\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => {\n      // Make get call to retrieve new set\n      axios.get('/api/colors')\n        .then(res =>\n          dispatch({\n            type: 'GET_COLORS',\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          console.log(error)\n        );\n    })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios.delete(`/api/colors/${id}`)\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\n\nclass ConfirmDelete extends Component {\n  state = {\n    open: false\n  };\n\n  show = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID);\n    this.setState({\n      open: false\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal\">\n        <Icon\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","import axios from 'axios';\nconst Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  console.log(url);\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n// image modal Actions\nexport const closeImgModal = () => dispatch => {\n  dispatch({\n    type: 'OPEN_IMAGE_MODAL',\n    open: false,\n    error: false,\n  })\n}\n\nexport const openImgModal = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_IMAGE_MODAL',\n    open: true,\n    error: false\n  })\n}\n\nexport const newImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'NEW_IMAGE_SUBMIT',\n    image: 'new'\n  })\n}\n\nexport const showModalLoader = () => dispatch => {\n  dispatch({\n    type: 'CLARIFAI_REQUEST_WAITING',\n    loader: 'show'\n  })\n}\n\nexport const clearImgSubmit = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_IMAGE_SUBMIT',\n    image: ''\n  })\n}\n\nexport const sendErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'SEND_ERROR',\n    error: true\n  })\n}\n\nexport const clearErrorStatus = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_ERROR',\n    error: false\n  })\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const clearColorList = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_COLORS',\n    colors: []\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({\n      hexInput: color\n    });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors();\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(false, true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div className=\"colors-render\">\n              {this.renderOneColorSet()}\n            </div>\n            <Grid stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleConfirm}\n              color='blue'\n            >\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors();\n  }\n\n  //Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n          mobile={16}\n          computer={8}\n        >\n          <div className=\"palette-container\">\n            <p>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </p>\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"header\">\n          My Color Palettes\n        </Header>\n        <Grid>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor\n  };\n};\n\nexport default connect (mapStateToProps, { getColors })(MyPallettes);\n","import React from 'react';\n\nconst Footer = ({url}) => {\n  return(\n    <div className=\"footer\">\n      © 2019\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nconst HomePageHeader = () => {\n  return (\n    <Header as=\"h1\" className=\"header\">\n      Choose a picture and analyze\n    </Header>\n  );\n}\n\nexport default HomePageHeader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearColorList } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      // send empty array before recieving new color set\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.clearColorList();\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >=1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n    // otherwise return error statement\n    return (\n      <div className=\"color-loader\" >\n        <Dimmer active inverted>\n          <Loader size='big' inverted>Loading Colors</Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n  clearColorList,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = {\n    input: '',\n  };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)}>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{ marginRight: 4 + 'em' }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearColorList } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick(url) {\n    // send empty array before recieving new color set\n    this.props.clearColorList();\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        content=\"Regenerate\"\n        onClick={() => this.handleClick(this.props.url)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n  clearColorList })(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false\n  };\n\n  handleInput (event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      title: this.state.input,\n      colors: this.props.colors\n    })\n    this.close();\n  }\n\n  //if empty Input\n  setError() {\n    this.setState({ error: true });\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '') {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  renderTitleInput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.state.error === true) {\n        return(\n          <Input\n            className=\"savepalette-modal-input\"\n            label=\"Title\"\n            value={this.state.input}\n            onChange={event => this.handleInput(event)}\n            placeholder='Title Required...'\n            error\n          />\n        );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"savepalette-modal-input\"\n          label=\"Title\"\n          value={this.state.input}\n          onChange={event => this.handleInput(event)}\n          placeholder='New Palette Name...'\n        />\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\n\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(true, false)}>Save Palette</Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Header as=\"h2\">\n              Save Palette\n            </Header>\n            {this.renderTitleInput()}\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React from 'react';\nimport HomePageHeader from './HomePageHeader';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport { Container, Grid } from 'semantic-ui-react';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign='center'>\n        <HomePageHeader />\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n        </Grid>\n        <Grid celled>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                <SavePalette />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {...state,\n        loader: action.loader,\n      };\n    case 'CLEAR_RECIEVED':\n      return {...state,\n        status: action.status,\n      };\n    case 'CLEAR_COLORS':\n      return {...state,\n        colors: action.colors\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {...state,\n        image: action.image\n      };\n    case 'SEND_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'CLEAR_ERROR':\n      return {...state,\n        error: action.error\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {...state,\n        open: action.open,\n        error: action.error\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1502691876148-a84978e59af8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\n    'https://images.unsplash.com/photo-1429497612798-1f189166a08a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n    default:\n     return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}