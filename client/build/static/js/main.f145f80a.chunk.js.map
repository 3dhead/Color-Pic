{"version":3,"sources":["images/FujiExample.jpg","images/DabinExample.jpg","images/CameraExample.jpg","images/BladeRunnerExample.jpg","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingIcons.js","components/LandingPageExampleSets.js","components/HowItWorks.js","components/LandingPage.js","components/ConfirmDeleteModal.js","actions/index.js","components/EditModalColorInfo.js","components/EditModal.js","components/MyPallettes.js","components/Footer.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","verifyPassword","email","userNamePlaceHolder","passWordPlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","password","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","color","onClick","style","marginLeft","marginRight","isLoading","Dimmer","active","inverted","Loader","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","Content","errorMessage","onSubmit","buttonSubmit","verifyPasswordRender","renderLoader","Component","connect","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","console","log","response","callAPI","get","concat","getColors","Logout","clearColors","react_router_dom","to","logout","user","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Authenticated","components_Logout","components_LoginModal","as","Link","minHeight","padding","children","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","myPalettesMenuItemRender","Pusher","dimmed","Segment","textAlign","sideBarStyles","Container","Icon","position","loginRender","isAuthenticated","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","borderless","myPalettesRender","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","columns","verticalAlign","Column","width","Header","LandingIcons","margin","Row","renderOneColorSet","set","map","index","backgroundColor","LandingPageExampleSets","exampleSets","FujiExample","DabinExample","CameraExample","BladeRunnerExample","Image","src","HowItWorks","centered","href","rel","LandingPage","components_LandingPageExample","components_LandingIcons","components_LandingPageExampleSets","components_HowItWorks","ConfirmDelete","show","handleConfirm","deleteColorPalette","objectID","handleCancel","Confirm","content","title","onCancel","onConfirm","deleteColor","myPalettes","DeleteColor","id","delete","app","App","apiKey","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","analyzeImage","url","models","predict","hexColors","outputs","colors","push","raw_hex","slice","length","fetch","json","R","G","B","RGBtoHexData","colorMindResponse","i","hexColor","alpha","status","loader","errorData","details","sendColorInfo","hexToG","hexToB","clearRecieved","sendPositionInfo","clearPosition","sendSelectedColor","selectedColor","sendAlphaInfo","changeMainImage","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","EditModal","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","cancel","UpdateData","updateColorPalette","lib","r","g","b","onChangeComplete","handleOnClickSquare","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","stackable","renderColorPicker","components_EditModalColorInfo","Actions","Data","colorSet","put","MyPallettes","prevProps","palette","_id","ConfirmDeleteModal","components_EditModal","renderPalettes","addColor","AddColor","updateColor","UpdateColor","loading","Footer","ColorsList","renderColor","height","renderLoaderHeight","colorsRender","mobile","computer","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","icon","renderURLinput","renderSubmitButton","renderErrorMessage","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","tablet","newColorSet","ColorInfo","Regenerate","SavePalette","placeHolder","newColorPalette","setError","handleConfirmClick","renderConfirmButton","HomePage","components_SavePalette","Popup","trigger","basic","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","savepaletteRender","loadUser","components_HeaderMenu","react_router","path","exact","component","Generate","components_Footer","initialState","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yYC+F3BC,EAAa,WACxB,MAAO,CACLC,KAAM,mBAKGC,EAAc,WAEzB,IAAMC,EAAQC,aAAaC,QAAQ,SAG7BC,EAAS,CACbC,QAAS,CACPC,eAAgB,qBASpB,OAJIL,IACFG,EAAOC,QAAQ,gBAAkBJ,GAG5BG,kEC7GHG,EAAUC,EAAQ,KAElBC,6MACJC,MAAQ,CACNC,WAAY,SACZC,OAAQ,sBACRC,OAAQ,SACRC,eAAgB,GAChBC,MAAO,GACPC,oBAAqB,GACrBC,oBAAoB,GACpBC,YAAY,GACZC,qBAAqB,EACrBC,iBAAiB,GACjBC,kBAAkB,EAClBC,cAAc,MAGhBC,UAAY,SAAAC,GAAI,OAAI,WAClBC,EAAKC,SAAS,CACZf,WAAY,SACZC,OAAQ,sBACRC,OAAQ,SACRG,oBAAoB,4BACpBC,oBAAoB,sBACpBC,YAAa,KAEfO,EAAKE,MAAMC,YACXH,EAAKE,MAAME,kBAGbC,WAAa,SAAAN,GAAI,OAAI,WACnBC,EAAKC,SAAS,CACZf,WAAY,UACZC,OAAQ,iBACRC,OAAQ,UACRG,oBAAqB,oBACrBC,oBAAoB,WACpBC,YAAY,qCAEdO,EAAKE,MAAMC,YACXH,EAAKE,MAAME,kBAGbE,MAAQ,WACNN,EAAKO,gBAELP,EAAKC,SAAS,CACZO,SAAU,GACVC,SAAU,GACVpB,eAAgB,GAChBC,MAAO,KAETU,EAAKE,MAAMQ,aACXV,EAAKE,MAAME,iBAGbO,iBAAmB,SAACC,EAADC,GAAiB,IAAXC,EAAWD,EAAXC,KACvBd,EAAKC,SAAS,CACZf,WAAY4B,EACZ1B,OAAQ0B,EACR3B,OAAQ,sBACRqB,SAAU,GACVC,SAAU,GACVpB,eAAgB,GAChBC,MAAO,GACPC,oBAAoB,4BACpBC,oBAAoB,sBACpBC,YAAY,KAEdO,EAAKO,gBACLP,EAAKE,MAAME,iBAGbW,kBAAoB,SAACH,EAADI,GAAiB,IAAXF,EAAWE,EAAXF,KACxBd,EAAKC,SAAS,CACZf,WAAY4B,EACZ1B,OAAQ0B,EACR3B,OAAQ,uBACRqB,SAAU,GACVC,SAAU,GACVpB,eAAgB,GAChBC,MAAO,GACPC,oBAAqB,oBACrBC,oBAAoB,WACpBC,YAAY,qCAEdO,EAAKO,gBACLP,EAAKE,MAAME,8FAKXa,KAAKhB,SAAS,CACZP,qBAAqB,EACrBE,kBAAkB,EAClBC,cAAe,GACfF,iBAAkB,yCAIVuB,EAAOC,GACjBF,KAAKhB,SAALmB,OAAAC,EAAA,EAAAD,CAAA,GAAiBD,EAAMD,EAAMI,OAAOC,QACpCN,KAAKV,qDAGMW,GACXA,EAAMM,iBAEmB,KAArBP,KAAKhC,MAAMK,OAAwC,KAAxB2B,KAAKhC,MAAMwB,UAAiD,KAA9BQ,KAAKhC,MAAMI,eAW/C,KAArB4B,KAAKhC,MAAMK,MASe,YAA1B2B,KAAKhC,MAAMC,YAAoD,KAAxB+B,KAAKhC,MAAMwB,SASxB,WAA1BQ,KAAKhC,MAAMC,YAAmD,KAAxB+B,KAAKhC,MAAMwB,SASvB,YAA1BQ,KAAKhC,MAAMC,YAA4B+B,KAAKhC,MAAMwB,WAAaQ,KAAKhC,MAAMI,eASjD,YAA1B4B,KAAKhC,MAAMC,aAAmE,IAAvCJ,EAAQ2C,SAASR,KAAKhC,MAAMK,QASzC,YAA1B2B,KAAKhC,MAAMC,YACZ+B,KAAKf,MAAMwB,aAAaT,KAAKhC,MAAMK,MAAO2B,KAAKhC,MAAMwB,UAI1B,WAA1BQ,KAAKhC,MAAMC,YACZ+B,KAAKf,MAAMyB,UAAUV,KAAKhC,MAAMK,MAAO2B,KAAKhC,MAAMwB,WAdlDQ,KAAKhB,SAAS,CACZL,iBAAkB,QAClBC,cAAc,sBAXhBoB,KAAKhB,SAAS,CACZN,iBAAiB,yBACjBD,qBAAqB,IAXvBuB,KAAKhB,SAAS,CACZN,iBAAiB,wBACjBD,qBAAqB,IAXvBuB,KAAKhB,SAAS,CACZN,iBAAiB,2BACjBD,qBAAqB,IAXvBuB,KAAKhB,SAAS,CACZJ,cAAc,wBACdD,kBAAkB,IAbpBqB,KAAKhB,SAAS,CACZL,kBAAkB,EAClBF,qBAAqB,EACrBG,cAAc,wBACdF,iBAAiB,6EA8DA,IAAAiC,EAAAX,KACrB,GAA6B,YAA1BA,KAAKhC,MAAMC,WACZ,OACE2C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,mBACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE3D,KAAK,WACL0D,UAAU,cACVE,YAAY,WACZC,aAAa,KACbZ,MAAON,KAAKhC,MAAMI,eAClB+C,SAAU,SAAAlB,GAAK,OAAIU,EAAKS,YAAYnB,EAAO,mBAC3CoB,MAAOrB,KAAKhC,MAAMS,iEAQ1B,QAA6B6C,IAAzBtB,KAAKf,MAAMsC,UACb,OACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,MAAM,OACNC,QAAS1B,KAAKZ,aACduC,MAAO,CAAEC,WAAY,QAASC,YAAa,SAE1C7B,KAAKf,MAAMsC,kDAOlB,IAA4B,IAAzBvB,KAAKf,MAAM6C,UACZ,OACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQpD,KAAK,MAAMmD,UAAQ,sCAM1B,IAAAE,EAAAnC,KAAAoC,EAaHpC,KAAKhC,MAXPC,EAFKmE,EAELnE,WACAE,EAHKiE,EAGLjE,OACAD,EAJKkE,EAILlE,OACAG,EALK+D,EAKL/D,MACAmB,EANK4C,EAML5C,SACAlB,EAPK8D,EAOL9D,oBACAC,EARK6D,EAQL7D,oBACAE,EATK2D,EASL3D,oBACAE,EAVKyD,EAULzD,iBACAH,EAXK4D,EAWL5D,YACAI,EAZKwD,EAYLxD,cAGF,OACEgC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS1B,KAAKnB,aAChCmB,KAAKf,MAAMoD,WAEbrC,KAAKsC,kBACN1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOzD,KAAK,OAAO0D,KAAMxC,KAAKf,MAAMwD,MAAOC,QAAS1C,KAAKX,MAAOsD,WAAS,GACvE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAK5C,IAEP0C,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAM7B,UAAU,eAAe8B,UAAQ,EAACC,WAAS,GAC/ClC,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CACElD,KAAK,SACLmC,OAAuB,WAAf/D,EACRyD,QAAS1B,KAAKN,mBAEhBkB,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CACElD,KAAK,UACLmC,OAAuB,YAAf/D,EACRyD,QAAS1B,KAAKF,qBAGlBc,EAAAC,EAAAC,cAACyB,EAAA,EAAMS,QAAP,KACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAItC,GACJoC,EAAAC,EAAAC,cAAA,KAAGa,MAAO,CAACF,MAAO,QAASzB,KAAKf,MAAMgE,eAExCrC,EAAAC,EAAAC,cAAA,QAAMoC,SAAU,SAAAjD,GAAK,OAAIkC,EAAKgB,aAAalD,KACzCW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,SACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,cACVE,YAAa3C,EACbgC,MAAOjC,EACP6C,aAAa,KACbC,SAAU,SAAAlB,GAAK,OAAIkC,EAAKf,YAAYnB,EAAO,UAC3CoB,MAAO1C,IAETiC,EAAAC,EAAAC,cAAA,KAAGa,MAAO,CAACF,MAAS,QAAS7C,GAC7BgC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,YACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE3D,KAAK,WACL0D,UAAU,cACVE,YAAa1C,EACb2C,aAAa,KACbZ,MAAOd,EACP2B,SAAU,SAAAlB,GAAK,OAAIkC,EAAKf,YAAYnB,EAAO,aAC3CoB,MAAO5C,IAETmC,EAAAC,EAAAC,cAAA,KAAGa,MAAO,CAACF,MAAO,QAASzB,KAAKhC,MAAMU,kBACrCsB,KAAKoD,uBACNxC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACET,UAAU,YACVU,MAAM,OACNC,QAAS,SAAAzB,GAAK,OAAIkC,EAAKgB,aAAalD,KAEnC9B,IAGJ6B,KAAKqD,yBAlSOC,aAkTVC,cARS,SAAAvF,GACtB,MAAO,CACLiF,aAAcjF,EAAMwF,OAAOC,QAC3BhB,MAAOzE,EAAM0F,KAAKjB,MAClBX,UAAW9D,EAAM0F,KAAK5B,YAIe,CACvCrB,aDnS0B,SAACpC,EAAOmB,GAAR,OAAqB,SAAAmE,GAE/CA,EAAS,CAAEtG,KAAM,iBAGjB,IAOMuG,EAAOC,KAAKC,UAAU,CAAEzF,QAAOmB,aAErCuE,IAAMC,KAAK,aAAcJ,EATV,CACbjG,QAAS,CACPsG,eAAgB,sBAQjBC,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,mBACN+G,QAASD,EAAIE,SAGhBC,MAAM,SAAAC,GACLC,QAAQC,IAAI,kBACZd,EAAS,CACPtG,KAAM,aACN+G,QAASG,EAAIG,WAEff,EAAS,CACPtG,KAAM,sBCwQZqD,UDlQuB,SAACrC,EAAOmB,GAAR,OAAqB,SAAAmE,GAE5CA,EAAS,CAAEtG,KAAM,iBAGjB,IAOMuG,EAAOC,KAAKC,UAAU,CAAEzF,QAAOmB,aAErCuE,IAAMC,KAAK,YAAaJ,EATT,CACbjG,QAAS,CACPsG,eAAgB,sBAQjBC,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,gBACN+G,QAASD,EAAIE,SAGhBC,MAAM,SAAAC,GACLC,QAAQC,IAAI,eACZd,EAAS,CACPtG,KAAM,aACN+G,QAASG,EAAIG,WAEff,EAAS,CACPtG,KAAM,mBCuOZ6B,UDtMuB,WACvB,MAAO,CACL7B,KAAM,eCqMRoC,WDjMwB,WACxB,MAAO,CACLpC,KAAM,gBCgMR8B,YD3LyB,WACzB,MAAO,CACL9B,KAAM,kBCoLKkG,CAMZxF,GChUG4G,EAAU,SAACtG,EAAOsF,GAEtBA,EAAS,CAAEtG,KAAM,mBAEjB0G,IAAMa,IAAN,eAAAC,OAAyBxG,IACtB6F,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,aACN+G,QAASD,EAAIE,SAGhBC,MAAM,SAAAjD,GAAK,OACVmD,QAAQC,IAAIpD,MAKLyD,EAAY,SAACzG,GAAD,OAAW,SAAAsF,GAClCgB,EAAQtG,EAAOsF,KCbXoB,2MAGuBzD,IAArBtB,KAAKf,MAAMZ,OACb2B,KAAKf,MAAM7B,4CAIR6C,GACLD,KAAKf,MAAM7B,aACX4C,KAAKf,MAAM+F,+CAGJ,IAAAjG,EAAAiB,KACP,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,YACYf,KAAKf,MAAMZ,OAEvBuC,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAMC,GAAG,KACPtE,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,MAAM,OACNV,UAAU,aACVW,QAAS,SAAAzB,GAAK,OAAIlB,EAAKoG,OAAOlF,KAHhC,oBApBWqD,cAuCNC,cANS,SAAAvF,GACtB,MAAO,CACLK,MAAOL,EAAM0F,KAAK0B,KAAK/G,QAIa,CAAEjB,aAAY4H,YDqB3B,WACzB,MAAO,CACL3H,KAAM,0BCvBKkG,CAAsDwB,+CChC/DM,EAAW,WAGf,MAFgC,qBAAXC,OAENC,IAAWC,WAAWC,SAAWH,OAAOI,YAGnDC,6MACJ3H,MAAQ,KAER4H,kBAAoB,kBAAM7G,EAAKC,SAAS,CAAE6G,eAAe,OAEzDC,aAAe,kBAAM/G,EAAKC,SAAS,CAAE6G,eAAe,kFAGlD,OAAiC,IAA7B7F,KAAKf,MAAM8G,cACNnF,EAAAC,EAAAC,cAACkF,EAAD,MAILpF,EAAAC,EAAAC,cAACmF,EAAD,CAAY5D,UAAU,SAASd,UAAU,+DAM7C,IAAiC,IAA7BvB,KAAKf,MAAM8G,cACb,OACEnF,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWmD,GAAIC,IAAMjB,GAAG,gBAAxB,uDAMJ,OAAiC,IAA7BlF,KAAKf,MAAM8G,cACN,CAAEK,UAAW,IAAKC,QAAS,WAG3B,CAAED,UAAW,GAAIC,QAAS,4CAG5B,IACCC,EAAatG,KAAKf,MAAlBqH,SACAT,EAAkB7F,KAAKhC,MAAvB6H,cAER,OACEjF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEW,GAAIK,IAAQC,SACZnB,SAAUA,EACVoB,SAAUlB,IAAWmB,WAAWD,UAEhC7F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEL,GAAItD,IACJ+D,UAAU,OACVC,OAAQ5G,KAAK4F,kBACbiB,UAAQ,EACRC,QAASjB,GAETjF,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWmD,GAAIC,IAAMjB,GAAG,KAAxB,aACAtE,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWmD,GAAIC,IAAMjB,GAAG,aAAxB,YACClF,KAAK+G,4BAGRnG,EAAAC,EAAAC,cAACyF,EAAA,EAAQS,OAAT,CAAgBC,OAAQpB,GACtBjF,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEC,UAAU,SACVxF,MAAO3B,KAAKoH,gBACZP,UAAQ,GAERjG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,EAAChE,KAAK,SAC5B8B,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWrB,QAAS1B,KAAK8F,cACvBlF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,aAEbe,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWwE,SAAS,SACjBvH,KAAKwH,kBAKblB,WAzEmBhD,aAsFfC,cANS,SAAAvF,GACtB,MAAO,CACL+H,cAAe/H,EAAM0F,KAAK+D,kBAIU,CAAErK,cAA3BmG,CAAyCoC,YC1FlDN,EAAW,WAGf,MAFgC,qBAAXC,OAENC,IAAWC,WAAWC,SAAWH,OAAOI,YAGnDgC,6MACJ1J,MAAQ,KAER2J,cAAgB,WACd5I,EAAKC,SAAS,CAAE4I,OAAO,OAEzBC,cAAgB,WACd9I,EAAKC,SAAS,CAAE4I,OAAO,kFAIvB,OAAiC,IAA7B5H,KAAKf,MAAM8G,cACNnF,EAAAC,EAAAC,cAACkF,EAAD,MAILpF,EAAAC,EAAAC,cAACmF,EAAD,CAAY5D,UAAU,SAASd,UAAU,uDAM7C,IAAiC,IAA7BvB,KAAKf,MAAM8G,cACb,OACEnF,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWmD,GAAIC,IAAMjB,GAAG,gBACtBtE,EAAAC,EAAAC,cAAA,iEAON,IAA4B,IAAzBd,KAAKf,MAAM6C,UACZ,OACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQpD,KAAK,QAAQmD,UAAQ,sCAM5B,IACCqE,EAAatG,KAAKf,MAAlBqH,SAER,OACE1F,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAYF,SAAUA,EAAUI,SAAUF,IAAWC,WAAWC,UAC9D7E,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACEC,MAAM,EACNC,eAAgBhI,KAAK6H,cACrBI,sBAAuBjI,KAAK2H,eAE5B/G,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAASnG,UAAU,iBAAiBoG,UAAU,SAASN,UAAQ,GAC7DjG,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAM7B,UAAU,aAAajC,KAAK,QAAQoJ,YAAU,GAClDtH,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWmD,GAAIC,IAAMjB,GAAG,KACtBtE,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWmD,GAAIC,IAAMjB,GAAG,aACtBtE,EAAAC,EAAAC,cAAA,uBAEDd,KAAKmI,mBACNvH,EAAAC,EAAAC,cAAC8B,EAAA,EAAKG,KAAN,CAAWwE,SAAS,SACjBvH,KAAKwH,cACLxH,KAAKqD,mBAMbiD,UApEsBhD,aAiFhBC,cAPS,SAAAvF,GACtB,MAAO,CACL+H,cAAe/H,EAAM0F,KAAK+D,gBAC1B3F,UAAW9D,EAAM0F,KAAK5B,YAIc,CAAE1E,cAA3BmG,CAAyCmE,GC5FzCU,UAPI,SAAAxI,GAAA,IAAG0G,EAAH1G,EAAG0G,SAAH,OACjB1F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,EAAD,KAAmB/B,GACnB1F,EAAAC,EAAAC,cAACwH,EAAD,KAAkBhC,iCCqBPiC,EAxBY,WACzB,OACE3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMC,QAAS,EAAGC,cAAc,SAAS3H,UAAU,aACjDH,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAAIzB,UAAU,UAChCvG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAASnG,UAAU,gBACjBH,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQ3C,GAAG,KAAKnF,UAAU,kBAA1B,+CAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,kCAGAH,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAMC,GAAG,aACPtE,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,MAAM,OAAOV,UAAU,eAA/B,yBCMC+H,EArBM,WACnB,OACElI,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMC,QAAS,EAAG9G,MAAO,CAAEoH,OAAQ,YAChCnI,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,KACEpI,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaxB,UAAU,UACrBvG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,SAASf,KAAK,SACzB8B,EAAAC,EAAAC,cAAA,yCAEFF,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaxB,UAAU,UACrBvG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,SAASf,KAAK,SACzB8B,EAAAC,EAAAC,cAAA,+CAEFF,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaxB,UAAU,UACrBvG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,OAAOf,KAAK,SACvB8B,EAAAC,EAAAC,cAAA,+ICVLmI,GAAoB,SAACC,GAMzB,OALeA,EAAIC,IAAI,SAAC1H,EAAO2H,GAAR,OACvBxI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBb,IAAKuB,EAAM2H,GACjDxI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeY,MAAO,CAAE0H,gBAAiB5H,SAwC7C6H,GAlCgB,WAC7B,IAAMC,EAAc,CAClB,CAAEC,YAAa,CAAE,UAAW,UAAW,UAAW,UAAW,YAC7D,CAAEC,aAAc,CAAE,UAAW,UAAW,UAAW,UAAW,YAC9D,CAAEC,cAAe,CAAE,UAAW,UAAW,UAAW,UAAW,YAC/D,CAAEC,mBAAoB,CAAE,UAAW,UAAW,UAAW,UAAW,aAGtE,OACE/I,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,KACE5H,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,KACEpI,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAClBhI,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAOC,IAAKL,MACXP,GAAkBM,EAAY,GAAGC,cAEpC5I,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAClBhI,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAOC,IAAKJ,OACXR,GAAkBM,EAAY,GAAGE,gBAGnC7I,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,KACApI,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAClBhI,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAOC,IAAKH,OACXT,GAAkBM,EAAY,GAAGG,gBAEpC9I,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAClBhI,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAOC,IAAKF,OACXV,GAAkBM,EAAY,GAAGI,wBCnB9BG,GApBI,WACjB,OACElJ,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAME,cAAc,SAASqB,UAAQ,GACnCnJ,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,CAAUjI,UAAU,yBAClBH,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,KACE/H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQ3C,GAAG,KAAKiB,UAAU,UAA1B,gBAGAvG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,wDAEEH,EAAAC,EAAAC,cAAA,KAAGkJ,KAAK,iGAAiG3J,OAAO,SAAS4J,IAAI,uBAA7H,YAFF,4FAG8BrJ,EAAAC,EAAAC,cAAA,KAAGkJ,KAAK,oEAAoE3J,OAAO,SAAS4J,IAAI,uBAAhG,aAH9B,0LCaKC,GAjBK,WAClB,OACEtJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACqJ,EAAD,QAGJvJ,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACsJ,EAAD,MACAxJ,EAAAC,EAAAC,cAACuJ,GAAD,MACAzJ,EAAAC,EAAAC,cAACwJ,GAAD,mBCbFC,sNACJvM,MAAQ,CAAEwE,MAAM,KAEhBgI,KAAO,WACLzL,EAAKC,SAAS,CAAEwD,MAAM,OAGxBiI,cAAgB,WAEd1L,EAAKE,MAAMyL,mBAAmB3L,EAAKE,MAAM0L,SAAU5L,EAAKE,MAAM1B,OAC9DwB,EAAKC,SAAS,CAAEwD,MAAM,OAGxBoI,aAAe,WACb7L,EAAKC,SAAS,CAAEwD,MAAM,6EAItB,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEvG,UAAU,GACVjC,KAAK,QACL4C,QAAS1B,KAAKwK,KACd3K,KAAK,oBAEPe,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,CACErI,KAAMxC,KAAKhC,MAAMwE,KACjBsI,QAAO,mCAAAjG,OAAqC7E,KAAKf,MAAM8L,MAAhD,aACPC,SAAUhL,KAAK4K,aACfK,UAAWjL,KAAKyK,cAChB3L,KAAK,kBA/BawE,cA6CbC,eAPS,SAAAvF,GACtB,MAAO,CACLkN,YAAalN,EAAMmN,WAAWC,YAC9B7N,MAAOS,EAAM0F,KAAKnG,QAIkB,CACtCmN,mBVEgC,SAACW,GAAD,OAAQ,SAAA1H,GACxCI,IAAMuH,OAAN,eAAAzG,OAA4BwG,GAAM/N,KAC/B4G,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,gBACN+G,QAASiH,MAGZ/G,MAAM,SAAAjD,GAAK,OACVmD,QAAQC,IAAIpD,QUZHkC,CAEZgH,aCpDGgB,GAAM,IADKzN,EAAQ,KACA0N,KAAI,CAACC,OAAQ,qCAKtC,SAASC,GAAOC,GAAI,MAAsB,MAAdA,EAAEC,OAAO,GAAYD,EAAEE,UAAU,EAAE,GAAGF,EAGlE,SAASG,GAAMC,GAEd,OADAA,EAAIC,SAASD,EAAE,IACXE,MAAMF,GAAW,MACrBA,EAAIG,KAAKC,IAAI,EAAED,KAAKE,IAAIL,EAAE,MACnB,mBAAmBH,QAAQG,EAAEA,EAAE,IAAI,IACnC,mBAAmBH,OAAOG,EAAE,KAI7B,IAAMM,GAAe,SAACC,GAAD,OAAS,SAAA3I,GAEnCA,EAAS,CAAEtG,KAAM,6BAEjBkO,GAAIgB,OAAOC,QAAQ,mCAAoCF,GACtDpI,KAAK,SAAAC,GACJ,IAAMsI,EAAY,GAElBtI,EAAIuI,QAAQ,GAAGrI,KAAKsI,OAAOxD,IAAI,SAAA1H,GAC7B,OAAOgL,EAAUG,KAAKnL,EAAMoL,QAAQC,MAAM,EAAGrL,EAAMoL,QAAQE,WAG7DC,MAAM,yBAA2BP,GAC9BvI,KAAK,SAAAC,GAAG,OAAIA,EAAI8I,SAChB/I,KAAK,SAAAC,GAIJ,IAHA,IAzBU+I,EAAEC,EAAEC,EAyBVC,EAAe,GACfC,EAAoBnJ,EAEfoJ,EAAI,EAAGA,EAAID,EAAkBP,OAAQQ,IAC5CF,EAAaT,KAAK,CAChBY,UA9BMN,EA8BaI,EAAkBC,GAAG,GA9BhCJ,EA8BoCG,EAAkBC,GAAG,GA9BvDH,EA8B2DE,EAAkBC,GAAG,GA9BrE,IAAIzB,GAAMoB,GAAGpB,GAAMqB,GAAGrB,GAAMsB,IA+BjDK,MAAO,IAGX9J,EAAS,CACPtG,KAAM,gBACN+G,QAASiJ,EACTK,OAAQ,WACRrM,OAAO,EACPmB,MAAM,EACNmL,OAAQ,aAIbrJ,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZZ,EAAS,CACPtG,KAAM,sBACNuQ,UAAWrJ,EAAIF,KAAKqJ,OAAOG,QAC3BxM,OAAO,EACPmB,MAAM,EACNmL,OAAQ,aAiDHG,GAAgB,SAACN,EAAUC,GAAX,OAAqB,SAAA9J,GAChD,IAAIuJ,EA1GqBlB,SAAUN,GA0GpB8B,GA1G+B3B,UAAU,EAAE,GAAG,IA2GzDsB,EA1GN,SAAgBxB,GAAI,OAAOK,SAAUN,GAAOC,GAAIE,UAAU,EAAE,GAAG,IA0GrDkC,CAAOP,GACXJ,EA1GN,SAAgBzB,GAAI,OAAOK,SAAUN,GAAOC,GAAIE,UAAU,EAAE,GAAG,IA0GrDmC,CAAOR,GACf7J,EAAS,CACPtG,KAAM,kBACNmQ,SAAUA,EACVN,EAAGA,EACHC,EAAGA,EACHC,EAAGA,EACHK,MAAOA,MAIEQ,GAAgB,kBAAM,SAAAtK,GACjCA,EAAS,CACPtG,KAAM,iBACNqQ,OAAQ,OAKCQ,GAAmB,SAAC3G,GAAD,OAAc,SAAA5D,GAC5CA,EAAS,CACPtG,KAAM,qBACNkK,SAAUA,MAID4G,GAAgB,kBAAM,SAAAxK,GACjCA,EAAS,CACPtG,KAAM,sBACNkK,SAAU,MAID6G,GAAoB,SAAC3M,GAAD,OAAW,SAAAkC,GAC1CA,EAAS,CACPtG,KAAM,iBACNgR,cAAe5M,MAIN6M,GAAgB,SAACb,GAAD,OAAW,SAAA9J,GACtCA,EAAS,CACPtG,KAAM,kBACNoQ,MAAOA,MAYEc,GAAkB,SAAAjC,GAC7B,MAAO,CACLjP,KAAM,aACNiP,IAAKA,ICtKHkC,wLACSvO,GACXuE,QAAQC,IAAIxE,EAAMI,OAAOC,wCAGnB,IAAAvB,EAAAiB,KAAAyO,EAC+BzO,KAAKf,MAAlCyP,EADFD,EACEC,SAAUxB,EADZuB,EACYvB,EAAGC,EADfsB,EACetB,EAAGC,EADlBqB,EACkBrB,EAAGK,EADrBgB,EACqBhB,MAE3B,OACE7M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SACEC,UAAU,iBACVT,MAAOoO,EACPvN,SAAU,SAAAlB,GAAK,OAAIlB,EAAKE,MAAM0P,iBAAiB1O,MAEjDW,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAO4M,EACP/L,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,MAEvCW,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAO6M,EACPhM,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,MAEvCW,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAO8M,EACPjM,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,MAEvCW,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAOmN,EACPtM,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,eAvCfqD,aA2DlBC,eAZS,SAAAvF,GACtB,MAAO,CACLwP,SAAUxP,EAAM6Q,UAAUrB,SAC1BN,EAAGlP,EAAM6Q,UAAU3B,EACnBC,EAAGnP,EAAM6Q,UAAU1B,EACnBC,EAAGpP,EAAM6Q,UAAUzB,EACnBK,MAAOzP,EAAM6Q,UAAUpB,MACvBd,OAAQ3O,EAAM2O,OAAOA,OACrBpF,SAAUvJ,EAAM6Q,UAAUtH,WAIU,GAAzBhE,CAA8BiL,IChDvCM,sNACJ9Q,MAAQ,CACNwE,MAAM,EACNuI,MAAO,GACPgE,YAAa,GACbL,SAAS,MAcXE,aAAe,SAACnN,GACd,IAAIuN,EAAejQ,EAAKf,MAAM+Q,YAE1BE,EAAW,CACbzB,SAAU/L,EAAMyN,IAAIC,cACpB1B,MAAOhM,EAAM2N,IAAIvO,GAGnBmO,EAAajQ,EAAKE,MAAMsI,UAAY0H,EAEpClQ,EAAKC,SAAS,CACZ+P,YAAaC,EACbN,SAAUjN,EAAMyN,IAAIC,gBAGtBpQ,EAAKE,MAAM6O,cAAcrM,EAAMyN,IAAIC,eACnCpQ,EAAKE,MAAMmP,kBAAkB3M,EAAMyN,IAAIC,eACvCpQ,EAAKE,MAAMqP,cAAc7M,EAAM2N,IAAIvO,MA+ErCwO,gBAAkB,SAACC,GAAD,OAAY,WAC5B,IAAM/H,EAAWxI,EAAKE,MAAMsQ,cAC5BxQ,EAAKC,SAAS,CACZsQ,SACA9M,MAAM,EAENuI,MAAOhM,EAAKE,MAAMoF,KAAKkD,GAAUwD,MACjCgE,YAAahQ,EAAKE,MAAMoF,KAAKkD,GAAUoF,OACvC+B,SAAU3P,EAAKE,MAAMoF,KAAKkD,GAAUoF,OAAO,GAAGa,WAGhDzO,EAAKE,MAAM6O,cAAc/O,EAAKE,MAAMoF,KAAKkD,GAAUoF,OAAO,GAAGa,SAAUzO,EAAKE,MAAMoF,KAAKkD,GAAUoF,OAAO,GAAGc,WAG7G+B,OAAS,WAEP,IAAMjI,EAAWxI,EAAKE,MAAMsQ,cAC5BxQ,EAAKC,SAAS,CACZwD,MAAM,EACNuI,MAAOhM,EAAKE,MAAMoF,KAAKkD,GAAUwD,MACjC2D,SAAU3P,EAAKE,MAAMoF,KAAKkD,GAAUoF,OAAO,GAAGa,SAC9CuB,YAAahQ,EAAKE,MAAMoF,KAAKkD,GAAUoF,SAEzC5N,EAAKE,MAAMkP,gBAEXpP,EAAKE,MAAM6F,UAAU/F,EAAKE,MAAMZ,UAGlCoM,cAAgB,WACd1L,EAAKC,SAAS,CACZwD,MAAM,IAER,IAAMiN,EAAa,CACjB1E,MAAOhM,EAAKf,MAAM+M,MAClB4B,OAAQ5N,EAAKf,MAAM+Q,aAErBhQ,EAAKE,MAAMyQ,mBAAmB3Q,EAAKE,MAAM0L,SAAU8E,EAAY1Q,EAAKE,MAAMZ,OAC1EU,EAAKE,MAAMkP,iGAhJIlO,GACfD,KAAKhB,SAAS,CAAE+L,MAAO9K,EAAMI,OAAOC,oDAGlBmB,EAAO2H,EAAOqE,GAChCzN,KAAKhB,SAAS,CAAE0P,SAAUjN,IAC1BzB,KAAKf,MAAMmP,kBAAkB3M,GAC7BzB,KAAKf,MAAM6O,cAAcrM,EAAOgM,GAChCzN,KAAKf,MAAMiP,iBAAiB9E,+CAwB5B,OACExI,EAAAC,EAAAC,cAAC6O,GAAA,aAAD,CACE5O,UAAU,qBACVY,MAAO,CAAEE,YAAa,OACtBJ,MAAO,CACLmO,EAAG5P,KAAKf,MAAMiO,EACd2C,EAAG7P,KAAKf,MAAMkO,EACd2C,EAAG9P,KAAKf,MAAMmO,EACdvM,EAAGb,KAAKf,MAAMwO,OAEhBsC,iBAAkB/P,KAAK4O,2DAKT,IAAAjO,EAAAX,KAoBjB,OAnBgBA,KAAKhC,MAAM+Q,YAAY5F,IAAI,SAAC1H,EAAO2H,GAAR,OAC1CxI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBb,IAAKuB,EAAM+L,UACjD5M,EAAAC,EAAAC,cAAA,OACEC,UAAU,eACVW,QAAS,kBAAMf,EAAKqP,oBAAoBvO,EAAM+L,SAAUpE,EAAO3H,EAAMgM,QACrE9L,MAAO,CACL0H,gBAAiB5H,EAAM+L,SACvByC,QAASxO,EAAMgM,MACfyC,OAAQ,aAGZtP,EAAAC,EAAAC,cAAA,OACEa,MAAOhB,EAAKwP,YAAY/G,GACxBrI,UAAU,mBAEVH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMxI,KAAK,MAAMe,KAAK,qDAOlBuJ,GACV,OAAIA,IAAUpJ,KAAKf,MAAMsI,SAChB,CACL9F,MAAO,SAGF,CACLA,MAAO,kDAKIxB,GAEf,IAAMmQ,EAAcnQ,EAAMI,OAAOC,MAAM6O,cAAckB,OAQrD,GANGD,EAAYrD,QAAU,GACvB/M,KAAKhB,SAAS,CACZ0P,SAAU0B,IAIa,IAAvBA,EAAYrD,QAAmC,MAAnBqD,EAAY,GAAY,CACtD,IAAIpB,EAAehP,KAAKf,MAAM8P,YAC1BE,EAAW,CACbzB,SAAU4C,EACV3C,MAAOzN,KAAKf,MAAM4B,GAGpBmO,EAAahP,KAAKf,MAAMsI,UAAY0H,EAEpCjP,KAAKf,MAAM6O,cAAcsC,GACzBpQ,KAAKf,MAAMmP,kBAAkBgC,GAC7BpQ,KAAKf,MAAMqP,cAActO,KAAKf,MAAM4B,qCA4C/B,IAAAsB,EAAAnC,KAAAoC,EACgDpC,KAAKhC,MAApDwE,EADDJ,EACCI,KAAM8M,EADPlN,EACOkN,OAAQvE,EADf3I,EACe2I,MAAO2D,EADtBtM,EACsBsM,SAAUK,EADhC3M,EACgC2M,YAEvC,OACEnO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACExI,KAAK,QACL4C,QAAS1B,KAAKqP,iBAAgB,GAC9BxP,KAAK,SAEPe,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEC,KAAMA,EAEN8M,OAAQA,EACR5M,QAAS1C,KAAKX,OAEduB,EAAAC,EAAAC,cAACyB,EAAA,EAAMsG,OAAP,qBACAjI,EAAAC,EAAAC,cAACyB,EAAA,EAAMS,QAAP,KACEpC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,cACVuP,MAAM,QACNhQ,MAAOyK,EACP5J,SAAU,SAAAlB,GAAK,OAAIkC,EAAKoO,iBAAiBtQ,IACzCgB,YAAY,yBAEdL,EAAAC,EAAAC,cAAA,WACGd,KAAKiJ,qBAERrI,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMrB,UAAU,SAASqJ,WAAS,EAAC/H,QAAS,GAC1C7H,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,IAClBhI,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACGlH,KAAKyQ,sBAGV7P,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAClBhI,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAAC4P,GAAD,CACEhC,SAAUA,EACVC,iBAAkB,SAAA1O,GAAK,OAAIkC,EAAKwM,iBAAiB1O,IACjD8O,YAAaA,QAMvBnO,EAAAC,EAAAC,cAACyB,EAAA,EAAMoO,QAAP,KACE/P,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQE,QAAS1B,KAAKwP,QAAtB,UACA5O,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQE,QAAS1B,KAAKyK,cAAehJ,MAAM,QAA3C,qBA1MY6B,cAiOTC,eAbS,SAAAvF,GACtB,MAAO,CACLqG,KAAMrG,EAAMmN,WAAWyF,KACvBrJ,SAAUvJ,EAAM6Q,UAAUtH,SAC1BiG,SAAUxP,EAAM6Q,UAAUrB,SAC1BN,EAAGlP,EAAM6Q,UAAU3B,EACnBC,EAAGnP,EAAM6Q,UAAU1B,EACnBC,EAAGpP,EAAM6Q,UAAUzB,EACnBK,MAAOzP,EAAM6Q,UAAUpB,MACvBpP,MAAOL,EAAM0F,KAAK0B,KAAK/G,QAIa,CACtCqR,mBbzMgC,SAACrE,EAAIwF,EAAUxS,GAAf,OAAyB,SAAAsF,GACzDI,IAAM+M,IAAN,eAAAjM,OAAyBwG,GAAMwF,EAAUvT,KACtC4G,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,gBACN+G,QAASyM,MAGZvM,MAAM,SAAAjD,GACLmD,QAAQC,IAAIpD,KAEb6C,KAAK,WAAQS,EAAQtG,EAAOsF,Oa+L/BuK,oBACAE,qBACAN,iBACAQ,iBACAH,iBACArJ,aAPavB,CAQZuL,IC/OGiC,+LAEF/Q,KAAKf,MAAM6F,UAAU9E,KAAKf,MAAMZ,kDAGf2S,GAEbhR,KAAKf,MAAMZ,QAAU2S,EAAU3S,YAA8BiD,IAArBtB,KAAKf,MAAMZ,OACrD2B,KAAKf,MAAM6F,UAAU9E,KAAKf,MAAMZ,iDAKlBsO,GAChB,IAAMkE,EAAWlE,EAAOxD,IAAI,SAAA1H,GAAK,OAC/Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBb,IAAKuB,EAAM+L,UACjD5M,EAAAC,EAAAC,cAAA,OACEC,UAAU,eACVY,MAAO,CAAE0H,gBAAiB5H,EAAM+L,SAAUyC,QAASxO,EAAMgM,YAI9D,OACE7M,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAAEoH,OAAQ,aACnB8H,4CAKS,IAAA9R,EAAAiB,KACf,QAA8BsB,IAA1BtB,KAAKf,MAAMkM,WA2Bb,OA1BiBnL,KAAKf,MAAMkM,WAAWhC,IAAI,SAAC8H,EAAS7H,GAAV,OACzCxI,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CACEzI,IAAK+Q,EAAQC,KAEbtQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACGmQ,EAAQlG,MACTnK,EAAAC,EAAAC,cAACqQ,GAAD,CACEpG,MAAOkG,EAAQlG,MACfJ,SAAUsG,EAAQC,MAEpBtQ,EAAAC,EAAAC,cAACsQ,GAAD,CACErG,MAAOkG,EAAQlG,MACfJ,SAAUsG,EAAQC,IAClB3B,cAAenG,EACf2F,YAAakC,EAAQtE,UAGzB/L,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CACEC,IAAKoH,EAAQ3E,IACbvC,UAAQ,IAEThL,EAAKkK,kBAAkBgI,EAAQtE,6CASxC,OACE/L,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQ3C,GAAG,KAAKnF,UAAU,kBAA1B,qBAGAH,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMgI,WAAS,EAAC/H,QAAS,GACtBzI,KAAKqR,0BApEU/N,aAsFXC,eAXS,SAAAvF,GAEtB,OADAwG,QAAQC,IAAIzG,GACL,CACLmN,WAAYnN,EAAMmN,WAAWyF,KAC7BU,SAAUtT,EAAMmN,WAAWoG,SAC3BC,YAAaxT,EAAMmN,WAAWsG,YAC9BC,QAAS1T,EAAMmN,WAAWuG,QAC1BrT,MAAOL,EAAM0F,KAAK0B,KAAK/G,QAIc,CAAEyG,YAAW1H,cAAvCmG,CAAqDwN,ICtDrDY,WApCA,SAAA/R,GAAWA,EAAT0M,IACf,OACE1L,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAWtG,UAAU,UACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,aAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACViJ,KAAK,wCACL3J,OAAO,SACP4J,IAAI,uBAEJrJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMvG,UAAU,WAAWlB,KAAK,SAASf,KAAK,SAEhD8B,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACViJ,KAAK,0CACL3J,OAAO,SACP4J,IAAI,uBAEJrJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMvG,UAAU,WAAWlB,KAAK,kBAAkBf,KAAK,SAEzD8B,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACViJ,KAAK,4BACL3J,OAAO,SACP4J,IAAI,uBAEJrJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMvG,UAAU,WAAWlB,KAAK,OAAOf,KAAK,aCxBhD8S,+LAGE5R,KAAKf,MAAM0N,OAAOI,QAAU,IAC9B/M,KAAKf,MAAMgP,gBACXjO,KAAKf,MAAMoN,aAAarM,KAAKf,MAAMqN,iDAKpB0E,GAKjB,GAJIhR,KAAKf,MAAMqN,MAAQ0E,EAAU1E,KAC/BtM,KAAKf,MAAMoN,aAAarM,KAAKf,MAAMqN,KAGX,aAAtBtM,KAAKf,MAAMyO,OAAuB,CAGpC,IAAIF,EAAWxN,KAAKf,MAAM0N,OAAO,GAAGa,SAChCpE,EAAQpJ,KAAKf,MAAMsI,SAEvBvH,KAAKgQ,oBAAoBxC,EAAUpE,EADvB,GAEZpJ,KAAKf,MAAMgP,6DAIKxM,EAAO2H,EAAOqE,GAChCzN,KAAKf,MAAMmP,kBAAkB3M,GAC7BzB,KAAKf,MAAM6O,cAAcrM,EAAOgM,GAChCzN,KAAKf,MAAMiP,iBAAiB9E,uCAGlB3H,EAAOgM,GACjB,MAAO,CACLpE,gBAAiB5H,EACjBwO,QAASxC,EACTyC,OAAQ,+CAIA9G,GACV,OAAIA,IAAUpJ,KAAKf,MAAMsI,SAChB,CACL9F,MAAO,SAGF,CACLA,MAAO,gDAKE,IAAA1C,EAAAiB,KAEb,GAAIA,KAAKf,MAAM0N,OAAOI,QAAU,EAmB9B,OAlBmB/M,KAAKf,MAAM0N,OAAOxD,IAAI,SAAC1H,EAAM2H,GAAP,OACvCxI,EAAAC,EAAAC,cAAA,OACEZ,IAAKuB,EAAM+L,SACXzM,UAAU,0BAEVH,EAAAC,EAAAC,cAAA,OACEC,UAAU,eACVY,MAAO5C,EAAK8S,YAAYpQ,EAAM+L,SAAU/L,EAAMgM,OAC9C/L,QAAS,kBAAM3C,EAAKiR,oBAAoBvO,EAAM+L,SAAUpE,EAAO3H,EAAMgM,UAEvE7M,EAAAC,EAAAC,cAAA,OACEa,MAAO5C,EAAKoR,YAAY/G,GACxBrI,UAAU,mBAEVH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMxI,KAAK,MAAMe,KAAK,8DAU9B,GAAgC,IAA7BG,KAAKf,MAAM0N,OAAOI,OACnB,MAAO,CAAE+E,OAAQ,2CAInB,GAAyB,SAAtB9R,KAAKf,MAAM0O,OACZ,OACE/M,EAAAC,EAAAC,cAAA,OAAKa,MAAO3B,KAAK+R,sBACfnR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQpD,KAAK,QAAQmD,UAAQ,GAA7B,qDAQR,OACArB,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAaC,MAAO,IACjB5I,KAAKgS,eACLhS,KAAKqD,uBAnGaC,aAuHVC,eAdS,SAAAvF,GAEtB,OADAwG,QAAQC,IAAIzG,GACL,CACL2O,OAAQ3O,EAAM2O,OAAOA,OACrB0B,cAAerQ,EAAM6Q,UAAUR,cAC/B9G,SAAUvJ,EAAM6Q,UAAUtH,SAC1B+E,IAAKtO,EAAMsO,IAAIA,IACfjL,MAAOrD,EAAMqD,MACbqM,OAAQ1P,EAAM2O,OAAOe,OACrBnQ,MAAOS,EAAM0F,KAAKnG,MAClBoQ,OAAQ3P,EAAM2O,OAAOgB,SAIe,CACtCtB,gBACAyB,iBACAI,oBACAE,qBACAH,kBALa1K,CAMZqO,IChHYrO,eANS,SAAAvF,GACtB,MAAO,CACLsO,IAAKtO,EAAMsO,IAAIA,MAIJ/I,CAlBG,SAAA3D,GAAW,IAAT0M,EAAS1M,EAAT0M,IAClB,OACE1L,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAasJ,OAAQ,GAAIC,SAAU,IACjCtR,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CACE7I,UAAU,aACV8I,IAAKyC,EACL6F,IAAI,oBCINC,8MACJpU,MAAQ,CAAEqU,MAAO,MAmIjBhT,MAAQ,WACNN,EAAKC,SAAS,CAAEqT,MAAO,KAEvBtT,EAAKE,MAAMqT,gBACXvT,EAAKE,MAAMsT,mBACXxT,EAAKE,MAAMuT,oBAGbnD,gBAAkB,SAACoD,EAAeC,GAAhB,OAAuC,WACvD3T,EAAKC,SAAS,CACZyT,gBACAC,uBAEF3T,EAAKE,MAAM0T,eACX5T,EAAKE,MAAMsT,mBACXxT,EAAKE,MAAMuT,4FAhJHvS,GAER,GADAA,EAAMM,iBACmB,KAArBP,KAAKhC,MAAMqU,MACb,OAAOrS,KAAKf,MAAM2T,kBAGiB,kBAAjC5S,KAAK6S,yBAAoE,KAArB7S,KAAKhC,MAAMqU,QACjErS,KAAKf,MAAMoN,aAAarM,KAAKhC,MAAMqU,OACnCrS,KAAKf,MAAM6T,eACX9S,KAAKf,MAAM8T,mEAKb,IAAI,IAAIxF,EAAE,EAAGA,EAAIvN,KAAKf,MAAM+T,cAAcjG,OAAQQ,IAChD,GAAGvN,KAAKhC,MAAMqU,QAAUrS,KAAKf,MAAM+T,cAAczF,GAC/C,MAAO,mBAGX,MAAO,8DAIkB,IAArBvN,KAAKf,MAAMoC,OAAyC,aAAtBrB,KAAKf,MAAMyO,QAA8C,QAArB1N,KAAKf,MAAMgU,QAE/EjT,KAAKf,MAAMsP,gBAAgBvO,KAAKhC,MAAMqU,OACtCrS,KAAKf,MAAMiU,kBAAkBlT,KAAKhC,MAAMqU,OACxCrS,KAAKf,MAAMuT,iBACXxS,KAAKhB,SAAS,CAAEqT,MAAO,0CAIfpS,GACVD,KAAKhB,SAAS,CAAEqT,MAAOpS,EAAMI,OAAOC,QAEpCN,KAAKf,MAAMsT,mBAEXvS,KAAKf,MAAMuT,0DAGI,IAAA7R,EAAAX,KAGf,OAAyB,IAArBA,KAAKf,MAAMoC,MAEXT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,YACV1D,KAAK,OACL8D,SAAU,SAAAlB,GAAK,OAAIU,EAAKS,YAAYnB,IACpCK,MAAON,KAAKhC,MAAMqU,MAClBpR,YAAY,wBACZI,OAAK,KAGqB,IAArBrB,KAAKf,MAAMoC,MAElBT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,YACV1D,KAAK,OACL8D,SAAU,SAAAlB,GAAK,OAAIU,EAAKS,YAAYnB,IACpCK,MAAON,KAAKhC,MAAMqU,MAClBpR,YAAY,2CACZI,OAAK,IAOPT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,YACV1D,KAAK,OACL8D,SAAU,SAAAlB,GAAK,OAAIU,EAAKS,YAAYnB,IACpCK,MAAON,KAAKhC,MAAMqU,MAClBpR,YAAY,6EAMC,IAAAkB,EAAAnC,KACnB,MAAyB,KAArBA,KAAKhC,MAAMqU,MAEXzR,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEE,QAAS,SAAAzB,GAAK,OAAIkC,EAAKgR,UAAUlT,IACjCc,UAAU,YACVU,MAAM,OACNE,MAAO,CAAEsO,QAAS,KAJpB,UAWArP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEE,QAAS,SAAAzB,GAAK,OAAIkC,EAAKgR,UAAUlT,IACjCc,UAAU,YACVU,MAAM,QAHR,uDAYJ,OAAyB,IAArBzB,KAAKf,MAAMoC,OAAuC,KAArBrB,KAAKhC,MAAMqU,OAAiD,kBAAjCrS,KAAK6S,wBAE7DjS,EAAAC,EAAAC,cAAA,6CAGiC,qBAAjCd,KAAK6S,yBACP7S,KAAKf,MAAM2T,kBAEThS,EAAAC,EAAAC,cAAA,wEAHJ,yCASA,GAAyB,SAAtBd,KAAKf,MAAM0O,OACZ,OACE/M,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQpD,KAAK,MAAMmD,UAAQ,sCAwB1B,IAAAmR,EAAApT,KAAAoC,EACuCpC,KAAKhC,MAA3CyU,EADDrQ,EACCqQ,cAAeC,EADhBtQ,EACgBsQ,mBACrB,OACE9R,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQE,QAAS1B,KAAKqP,iBAAgB,GAAO,GAAOgE,MAAI,GAAxD,sBACAzS,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEC,KAAMxC,KAAKf,MAAMuD,KACjBiQ,cAAeA,EACfC,mBAAoBA,EACpBhQ,QAAS1C,KAAKX,MACdsD,WAAS,GAET/B,EAAAC,EAAAC,cAACyB,EAAA,EAAMS,QAAP,CAAejC,UAAU,mBACvBH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,QAAMoC,SAAU,SAAAjD,GAAK,OAAImT,EAAKD,UAAUlT,KACrCD,KAAKsT,iBACLtT,KAAKuT,sBAEPvT,KAAKwT,qBACLxT,KAAKqD,yBAzKMC,aA6LXC,eAZS,SAAAvF,GAEtB,MAAO,CACLwE,KAAMxE,EAAM2O,OAAOnK,KACnBnB,MAAOrD,EAAM2O,OAAOtL,MACpBqM,OAAQ1P,EAAM2O,OAAOe,OACrBC,OAAQ3P,EAAM2O,OAAOgB,OACrBsF,MAAOjV,EAAM2O,OAAOsG,MACpBD,cAAehV,EAAMsO,IAAI0G,gBAIW,CACtC3G,gBACAkC,mBACA2E,kBPjC+B,SAAA5G,GAC/B,MAAO,CACLjP,KAAM,UACNiP,IAAKA,IO+BPgG,cPxI2B,WAC3B,MAAQ,CACNjV,KAAM,sBOuIRsV,aP/I0B,WAC1B,MAAQ,CACNtV,KAAM,qBO8IRyV,aPpI0B,WAC1B,MAAQ,CACNzV,KAAM,qBOmIRmV,ePzH4B,WAC5B,MAAQ,CACNnV,KAAM,uBOwHRkV,iBP9G8B,WAC9B,MAAQ,CACNlV,KAAM,gBO6GR0V,gBPjI6B,WAC7B,MAAQ,CACN1V,KAAM,6BOgIRuV,gBPtH6B,WAC7B,MAAQ,CACNvV,KAAM,gBO0GKkG,CAWZ6O,IC5MGqB,uLACQnH,GAEVtM,KAAKf,MAAMgP,gBAEXjO,KAAKf,MAAMkP,gBACXnO,KAAKf,MAAMsP,gBAAgBjC,wCAGhBoH,GACX,OAAI1T,KAAKf,MAAMqN,MAAQoH,EACd,CACLC,OAAQ,oBACR1D,QAAS,GAGJ,4CAIK,IAAAlR,EAAAiB,KACd,OACEA,KAAKf,MAAM2U,WAAWzK,IAAI,SAAAmD,GAAG,OAC3B1L,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVb,IAAKoM,GAEL1L,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACV8I,IAAKyC,EACL6F,IAAI,YACJxQ,MAAO5C,EAAK8U,aAAavH,GACzB5K,QAAS,kBAAM3C,EAAK+U,YAAYxH,MAElC1L,EAAAC,EAAAC,cAAA,OACEY,QAAS,kBAAM3C,EAAKE,MAAM8U,UAAUzH,IACpCvL,UAAU,cACVH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,uDAQnB,OACEe,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAasJ,OAAQ,GAAIC,SAAU,GACjCtR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZf,KAAKgU,gBAERpT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACmT,GAAD,gBApDiB3Q,aAmEdC,eAPS,SAAAvF,GACtB,MAAO,CACLsO,IAAKtO,EAAMsO,IAAIA,IACfsH,WAAY5V,EAAMsO,IAAI0G,gBAIc,CACtCzE,mBACAN,iBACAE,iBACA4F,URmGuB,SAACzH,GAAD,OAAS,SAAA3I,GAChCA,EAAS,CACPtG,KAAM,aACNiP,IAAKA,MQrGPD,iBALa9I,CAMZkQ,IC1EGS,8MACJtF,aAAe,SAACnN,EAAOxB,GACrB,IAAI+O,EAAejQ,EAAKE,MAAM0N,OAG1BsC,EAAW,CACbzB,SAAU/L,EAAMyN,IAAIC,cACpB1B,MAAOhM,EAAM2N,IAAIvO,GAInBmO,EAAajQ,EAAKE,MAAMsI,UAAY0H,EAEpClQ,EAAKE,MAAMkV,eAAenF,GAC1BjQ,EAAKE,MAAM6O,cAAcrM,EAAMyN,IAAIC,eACnCpQ,EAAKE,MAAMmP,kBAAkB3M,EAAMyN,IAAIC,eACvCpQ,EAAKE,MAAMqP,cAAc7M,EAAM2N,IAAIvO,uFAInC,OAAGb,KAAKf,MAAM0N,OAAOI,QAAU,EAE3BnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC6O,GAAA,aAAD,CACE5O,UAAU,gBACVY,MAAO,CACLiH,MAAO,OACP/G,YAAa,OAEfJ,MAAO,CACLmO,EAAG5P,KAAKf,MAAMiO,EACd2C,EAAG7P,KAAKf,MAAMkO,EACd2C,EAAG9P,KAAKf,MAAMmO,EACdvM,EAAGb,KAAKf,MAAM0N,OAAO3M,KAAKf,MAAMsI,UAAUkG,OAE5CsC,iBAAkB/P,KAAK4O,gBAKxBhO,EAAAC,EAAAC,cAAC6O,GAAA,aAAD,CAAc5O,UAAU,kDAI/B,OACEH,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAasJ,OAAQ,GAAImC,OAAQ,EAAGlC,SAAU,IAC3ClS,KAAKyQ,4BA9CYnN,aAgEXC,eAZS,SAAAvF,GACtB,MAAO,CACLwP,SAAUxP,EAAM6Q,UAAUrB,SAC1BN,EAAGlP,EAAM6Q,UAAU3B,EACnBC,EAAGnP,EAAM6Q,UAAU1B,EACnBC,EAAGpP,EAAM6Q,UAAUzB,EACnBvM,EAAG7C,EAAM6Q,UAAUpB,MACnBd,OAAQ3O,EAAM2O,OAAOA,OACrBpF,SAAUvJ,EAAM6Q,UAAUtH,WAIU,CACtC4M,eToF4B,SAACE,GAAD,OAAiB,SAAA1Q,GAC7CA,EAAS,CACPtG,KAAM,mBACNgX,YAAaA,MStFfvG,iBACAM,qBACAE,kBAJa/K,CAII2Q,IC1EbI,wLACSrU,GAEXuE,QAAQC,IAAIxE,EAAMI,OAAOC,wCAEnB,IAAAvB,EAAAiB,KACN,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SACEC,UAAU,iBACVT,MAAON,KAAKf,MAAMuO,WAEpB5M,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KACAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAON,KAAKf,MAAMiO,EAClB/L,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,MAEvCW,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAON,KAAKf,MAAMkO,EAClBhM,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,MAEvCW,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAON,KAAKf,MAAMmO,EAClBjM,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,MAEvCW,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVT,MAAON,KAAKf,MAAMwO,MAClBtM,SAAU,SAAAlB,GAAK,OAAIlB,EAAK6P,aAAa3O,eApCxBqD,aAwDTC,eAZS,SAAAvF,GACtB,MAAO,CACLwP,SAAUxP,EAAM6Q,UAAUrB,SAC1BN,EAAGlP,EAAM6Q,UAAU3B,EACnBC,EAAGnP,EAAM6Q,UAAU1B,EACnBC,EAAGpP,EAAM6Q,UAAUzB,EACnBK,MAAOzP,EAAM6Q,UAAUpB,MACvBd,OAAQ3O,EAAM2O,OAAOA,OACrBpF,SAAUvJ,EAAM6Q,UAAUtH,WAIU,GAAzBhE,CAA8B+Q,ICpDvCC,8MACJT,YAAc,SAAAxH,GAAG,OAAI,WAEnBvN,EAAKE,MAAMgP,gBAEXlP,EAAKE,MAAMkP,gBACXpP,EAAKE,MAAMoN,aAAaC,6EAIxB,OACE1L,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACET,UAAU,YACVW,QAAS1B,KAAK8T,YAAY9T,KAAKf,MAAMqN,MAErC1L,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,SAJb,uBAXmByD,aA2BVC,eANS,SAAAvF,GACtB,MAAO,CACLsO,IAAKtO,EAAMsO,IAAIA,MAIqB,CACtCD,gBACA4B,iBACAE,kBAHa5K,CAIZgR,IChCGC,8MACJxW,MAAQ,CACNqU,MAAO,GACP7P,MAAM,EACNnB,OAAO,EACPoT,YAAa,yBAafpF,gBAAkB,SAACoD,EAAeC,GAAhB,OAAuC,WACzD3T,EAAKC,SAAS,CAAEyT,gBAAeC,qBAAoBlQ,MAAM,QAGzDnD,MAAQ,WAENN,EAAKC,SAAS,CACZqT,MAAO,GACP7P,MAAM,EACNnB,OAAO,gFAnBCpB,GAEVD,KAAKhB,SAAS,CACZqT,MAAOpS,EAAMI,OAAOC,MACpBe,OAAO,EACPoT,YAAa,qEAoBfzU,KAAKf,MAAMyV,gBAAgB,CACzBpI,IAAKtM,KAAKf,MAAMqN,IAChBjO,MAAO2B,KAAKf,MAAMZ,MAClB0M,MAAO/K,KAAKhC,MAAMqU,MAClB1F,OAAQ3M,KAAKf,MAAM0N,QAClB3M,KAAKf,MAAM1B,OACdyC,KAAKX,2CAIoB,KAArBW,KAAKhC,MAAMqU,OACbrS,KAAKhB,SAAS,CACZqC,OAAO,EACPoT,YAAa,sBAIbzU,KAAKhC,MAAMqU,MAAMtF,QAAU,IAC7B/M,KAAKhB,SAAS,CACZqC,OAAO,EACPoT,YAAa,8EAKG,IAAA9T,EAAAX,KAEpB,MAAyB,KAArBA,KAAKhC,MAAMqU,OAAgBrS,KAAKhC,MAAMqU,MAAMtF,QAAU,GAEtDnM,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQE,QAAS,kBAAMf,EAAKgU,YAC1BlT,MAAM,OACNE,MAAO,CAAEsO,QAAS,KAFpB,cASArP,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAMC,GAAG,gBACPtE,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,MAAM,OACNE,MAAO,CAAEC,WAAY,UACrBF,QAAS,kBAAMf,EAAKiU,uBAHtB,sDAyBN,OAZmB5U,KAAKf,MAAM0N,OAAOxD,IAAI,SAAC1H,EAAM2H,GAAP,OACvCxI,EAAAC,EAAAC,cAAA,OAAKZ,IAAKuB,EAAM+L,SAAUzM,UAAU,0BAClCH,EAAAC,EAAAC,cAAA,OACEC,UAAU,eACVY,MAAO,CACL0H,gBAAiB5H,EAAM+L,SACvByC,QAASxO,EAAMgM,SAGnB7M,EAAAC,EAAAC,cAAA,SAAIW,EAAM+L,8CAMP,IAAArL,EAAAnC,KAAAoC,EAOHpC,KAAKhC,MALPwE,EAFKJ,EAELI,KACAiQ,EAHKrQ,EAGLqQ,cACAC,EAJKtQ,EAILsQ,mBACArR,EALKe,EAKLf,MACAoT,EANKrS,EAMLqS,YAGF,OACE7T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEE,QAAS1B,KAAKqP,iBAAgB,GAAM,GACpCtO,UAAU,gBACVsS,MAAI,GAEJzS,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,SALb,kBAOAe,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEC,KAAMA,EACNiQ,cAAeA,EACfC,mBAAoBA,EACpBhQ,QAAS1C,KAAKX,MACdsD,WAAS,GAET/B,EAAAC,EAAAC,cAACyB,EAAA,EAAMS,QAAP,KACEpC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQ3C,GAAG,MAAX,gBACAtF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0BACVuP,MAAM,QACNhQ,MAAON,KAAKhC,MAAMqU,MAClBlR,SAAU,SAAAlB,GAAK,OAAIkC,EAAKf,YAAYnB,IACpCgB,YAAawT,EACbpT,MAAOA,IAETT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZf,KAAKgS,iBAGVpR,EAAAC,EAAAC,cAACyB,EAAA,EAAMoO,QAAP,KACE/P,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQE,QAAS,kBAAMS,EAAK9C,UAA5B,UACCW,KAAK6U,gCA7IQvR,aA8JXC,eATS,SAAAvF,GACtB,MAAO,CACLsO,IAAKtO,EAAMsO,IAAIA,IACfjO,MAAOL,EAAM0F,KAAK0B,KAAK/G,MACvBsO,OAAQ3O,EAAM2O,OAAOA,OACrBpP,MAAOS,EAAM0F,KAAKnG,QAIkB,CAAEmX,gBvB3IX,SAAC7D,GAAD,OAAc,SAAAlN,GAC3CI,IAAMC,KAAK,cAAe6M,EAAUvT,KACjC4G,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,aACN+G,QAASD,EAAIE,SAGhBC,MAAM,SAAAjD,GAAK,OACVmD,QAAQC,IAAIpD,QuBkIHkC,CAA8CiR,cClJvDM,+LAEF,OAAgC,IAA7B9U,KAAKf,MAAM8G,cACLnF,EAAAC,EAAAC,cAACiU,GAAD,MAGLnU,EAAAC,EAAAC,cAACkU,GAAA,EAAD,CACEC,QAASrU,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQT,UAAU,iBAAgBH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMzH,KAAK,SAA7C,kBACTiL,QAAQ,mCACRvD,SAAS,eACTzI,KAAK,QACLoW,OAAK,qCAMX,OACEtU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAWF,UAAU,UACnBvG,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQ3C,GAAG,KAAKnF,UAAU,mBAA1B,gCAGAH,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAM2M,QAAM,GACVvU,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,KACEpI,EAAAC,EAAAC,cAACsU,GAAD,MACAxU,EAAAC,EAAAC,cAACuU,GAAD,QAGJzU,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAM2M,QAAM,GACVvU,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,KACEpI,EAAAC,EAAAC,cAACwU,GAAD,QAGJ1U,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAM2M,QAAM,GACVvU,EAAAC,EAAAC,cAAC0H,EAAA,EAAKQ,IAAN,KACEpI,EAAAC,EAAAC,cAACyU,GAAD,MACA3U,EAAAC,EAAAC,cAAC0H,EAAA,EAAKG,OAAN,CAAasJ,OAAQ,GAAImC,OAAQ,EAAGlC,SAAU,GAC5CtR,EAAAC,EAAAC,cAAC0U,GAAD,MACA5U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC2U,GAAD,MACCzV,KAAK0V,iCAzCDpS,aA0DRC,eANS,SAAAvF,GACtB,MAAO,CACL+H,cAAe/H,EAAM0F,KAAK+D,kBAIU,GAAzBlE,CAA8BuR,ICjEvCtJ,uMAGmC,OAAlChO,aAAaC,QAAQ,UACtBuC,KAAKf,MAAM0W,4CAIb,OACE/U,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAAC8U,EAAD,MACAhV,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW9L,KACjCtJ,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWC,KACnCrV,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAWjF,KACtCnQ,EAAAC,EAAAC,cAACoV,GAAD,cAdU5S,cAoBHC,eAAQ,KAAM,CAAEoS,S3B5BP,kBAAM,SAAAhS,GAE5BA,EAAS,CAAEtG,KAAM,iBAEjB0G,IACGa,IAAI,iBAAkBtH,KACtB4G,KAAK,SAAAC,GAAG,OACPR,EAAS,CACPtG,KAAM,cACN+G,QAASD,EAAIE,SAGhBC,MAAM,SAAAC,GACLZ,EAAS,CACPtG,KAAM,aACN+G,QAASG,EAAIG,WAEff,EAAS,CACPtG,KAAM,oB2BUCkG,CAA4BiI,aC/BrC2K,GAAe,CACnBxJ,OAAQ,GACRe,OAAQ,GACRrM,OAAO,EACPuM,UAAW,GACXpL,MAAM,EACNmL,OAAQ,OACRsF,MAAO,ICPHkD,GAAe,CACnB7J,IAAK,gGACL0G,cAAe,CACb,gGACA,iGACA,2ICLEmD,GAAe,CACnB3I,SAAU,GACVN,EAAG,GACHC,EAAG,GACHC,EAAG,GACHK,MAAO,GACPlG,SAAU,EACV8G,cAAe,ICPX8H,GAAe,CACnBvF,KAAM,GACNW,SAAU,GACVnG,YAAa,GACbqG,YAAa,GACbC,SAAS,GCLLyE,GAAe,CACnB1S,QAAS,GACTiK,OAAQ,MCDJyI,GAAe,CACnB5Y,MAAOC,aAAaC,QAAQ,SAC5BgK,gBAAiB,KACjB3F,WAAW,EACXsD,KAAM,GACN3C,OAAO,GCEM2T,eAAgB,CAC7BzJ,ONCa,WAAkC,IAAjC3O,EAAiCqY,UAAAtJ,OAAA,QAAAzL,IAAA+U,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAA/U,EAC/C,OAAOgV,EAAOjZ,MACZ,IAAK,gBACH,OAAO8C,OAAAoW,GAAA,EAAApW,CAAA,GAAInC,EAAX,CACE2O,OAAQ2J,EAAOlS,QACfsJ,OAAQ4I,EAAO5I,OAEflL,KAAM8T,EAAO9T,KAEbnB,MAAOiV,EAAOjV,MACdsM,OAAQ2I,EAAO3I,SAEnB,IAAK,2BACH,OAAOxN,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE2P,OAAQ,SAEZ,IAAK,iBACH,OAAOxN,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE0P,OAAQ4I,EAAO5I,SAEnB,IAAK,mBACH,OAAOvN,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEiV,MAAO,QAEX,IAAK,qBACH,OAAO9S,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEiV,MAAO,KAEX,IAAK,aACH,OAAO9S,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEqD,OAAO,IAEX,IAAK,cACH,OAAOlB,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEqD,OAAO,IAEX,IAAK,sBACH,OAAOlB,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE4P,UAAW0I,EAAO1I,UAClBvM,MAAOiV,EAAOjV,MACdsM,OAAQ2I,EAAO3I,OAEfnL,KAAM8T,EAAO9T,OAEjB,IAAK,mBACH,OAAOrC,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEwE,MAAM,EACNnB,OAAO,IAEX,IAAK,oBACH,OAAOlB,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEwE,MAAM,EACNnB,OAAO,IAEX,IAAK,mBAcH,OAAOlB,OAAAoW,GAAA,EAAApW,CAAA,GAAInC,EAAX,CACI2O,OAdJ,SAA6B6J,EAAOF,GAClC,OAAOE,EAAMrN,IAAI,SAACsN,EAAMrN,GACtB,OAAIA,IAAUkN,EAAOlN,MAEZqN,EAGFtW,OAAAoW,GAAA,EAAApW,CAAA,GACFsW,EACAH,EAAOG,QAKJC,CAAoB1Y,EAAM2O,OAAQ2J,EAAOjC,eAEvD,QACC,OAAOrW,IMjFVsO,ILDa,WAAkC,IAAjCtO,EAAiCqY,UAAAtJ,OAAA,QAAAzL,IAAA+U,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAA/U,EAC/C,OAAOgV,EAAOjZ,MACZ,IAAK,aACJ,OAAO8C,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEsO,IAAKgK,EAAOhK,MAEf,IAAK,UACJ,OAAOnM,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEgV,cAAehV,EAAMgV,cAAcnO,OAAOyR,EAAOhK,OAEnD,IAAK,aAEL,GAAkC,IAA/BtO,EAAMgV,cAAcjG,OACrB,OAAO/O,EAER,IAAM2Y,EAAe3Y,EAAMgV,cAAc4D,OAAQ,SAAAtK,GAAG,OAAIA,IAAQgK,EAAOhK,MACvE,OAAOnM,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAGEsO,IAAKqK,EAAa,GAClB3D,cAAe2D,IAEnB,QACC,OAAO3Y,IKvBV6Q,UJDa,WAAkC,IAAjC7Q,EAAiCqY,UAAAtJ,OAAA,QAAAzL,IAAA+U,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAA/U,EAC/C,OAAOgV,EAAOjZ,MACZ,IAAK,kBACH,OAAO8C,OAAAoW,GAAA,EAAApW,CAAA,GAAInC,EAAX,CACEwP,SAAU8I,EAAO9I,SACjBN,EAAGoJ,EAAOpJ,EACVC,EAAGmJ,EAAOnJ,EACVC,EAAGkJ,EAAOlJ,EACVK,MAAO6I,EAAO7I,QAEhB,IAAK,qBAIL,IAAK,sBACH,OAAOtN,OAAAoW,GAAA,EAAApW,CAAA,GAAInC,EAAX,CACEuJ,SAAU+O,EAAO/O,WAErB,IAAK,kBACH,OAAOpH,OAAAoW,GAAA,EAAApW,CAAA,GAAInC,EAAX,CACEyP,MAAO6I,EAAO7I,QAElB,IAAK,iBACH,OAAOtN,OAAAoW,GAAA,EAAApW,CAAA,GAAInC,EAAX,CACEqQ,cAAeiI,EAAOjI,gBAE5B,QACC,OAAOrQ,IIzBVmN,WHJa,WAAkC,IAAjCnN,EAAiCqY,UAAAtJ,OAAA,QAAAzL,IAAA+U,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAA/U,EAC/C,OAAOgV,EAAOjZ,MACZ,IAAK,aACH,OAAO8C,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE4S,KAAM0F,EAAOlS,QACbsN,SAAS,IAEZ,IAAK,aACJ,OAAOvR,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE4S,KAAM5S,EAAM4S,KAAK/L,OAAOyR,EAAOlS,SAC/BmN,SAAQ,IAAA1M,OAAMyR,EAAOlS,QAAQ2G,MAArB,cAAAlG,OAAuCyR,EAAOlS,QAAQ8M,OAEhE,IAAK,gBACH,OAAO/Q,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEyT,YAAW,GAAA5M,OAAKyR,EAAOlS,QAAZ,wBAEf,IAAK,gBACH,OAAOjE,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE4S,KAAM5S,EAAM4S,KAAKgG,OAAO,SAAAH,GAAI,OAAIA,EAAKvF,MAAQoF,EAAOlS,UACpDgH,YAAW,GAAAvG,OAAKyR,EAAOlS,QAAZ,kBAEf,IAAK,iBACH,OAAOjE,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE0T,SAAS,IAEb,IAAK,uBACH,OAAOvR,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE4S,KAAM,GACNW,SAAU,GACVnG,YAAa,GACbqG,YAAa,KAEnB,QACC,OAAOzT,IGlCVwF,OFRa,WAAkC,IAAjCxF,EAAiCqY,UAAAtJ,OAAA,QAAAzL,IAAA+U,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAA/U,EAC/C,OAAOgV,EAAOjZ,MACZ,IAAK,aACH,MAAO,CACLoG,QAAS6S,EAAOlS,QAAQC,KACxBqJ,OAAQ4I,EAAOlS,QAAQsJ,OACvBrC,GAAIiL,EAAOlS,QAAQiH,IAEvB,IAAK,eACH,MAAO,CACLwL,IAAK,GACLnJ,OAAQ,MAEZ,QACA,OAAO1P,IELT0F,KDLa,WAAuC,IAA9B1F,EAA8BqY,UAAAtJ,OAAA,QAAAzL,IAAA+U,UAAA,GAAAA,UAAA,GAAtBF,GAAcG,EAAQD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAA/U,EACpD,OAAQgV,EAAOjZ,MACb,IAAK,eACH,OAAO8C,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEE8D,WAAW,IAEf,IAAK,cACH,OAAO3B,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEyJ,iBAAiB,EACjB3F,WAAW,EACXsD,KAAMkR,EAAOlS,UAEjB,IAAK,aACH,OAAOjE,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEyE,OAAO,IAEX,IAAK,cACH,OAAOtC,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEEyE,OAAO,IAEX,IAAK,gBACL,IAAK,mBAEH,OADAjF,aAAasZ,QAAQ,QAASR,EAAOlS,QAAQ7G,OACtC4C,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EACAsY,EAAOlS,QAFZ,CAGEqD,iBAAiB,EACjB3F,WAAW,EACXW,OAAO,IAEX,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,gBAEH,OADAjF,aAAauZ,WAAW,SACjB5W,OAAAoW,GAAA,EAAApW,CAAA,GACFnC,EADL,CAEET,MAAO,KACP6H,KAAM,GACNqC,iBAAiB,EACjB3F,WAAW,IAEf,QACE,OAAO9D,ME7CPgZ,GAAQC,YACZC,GAHmB,GAKnBC,YAAgBC,MAElBC,IAASC,OACP1W,EAAAC,EAAAC,cAACyW,EAAA,EAAD,CAAUP,MAAOA,IACfpW,EAAAC,EAAAC,cAAC0W,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.f145f80a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FujiExample.647af6bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DabinExample.221dac11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CameraExample.d7b0995e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BladeRunnerExample.df8cfb47.jpg\";","import axios from 'axios';\n\n// Check token & load user\nexport const loadUser = () => dispatch => {\n  // User loading\n  dispatch({ type: 'USER_LOADING'});\n  \n  axios\n    .get('/api/auth/user', tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  // Show loading bubble in user register\n  dispatch({ type: 'USER_LOADING'});\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios.post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('register fail!')\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'REGISTER_FAIL'\n      });\n    });\n}\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // Show loading bubble in login\n  dispatch({ type: 'USER_LOADING'});\n\n  // headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password});\n\n  axios.post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log('login fail!')\n      dispatch({\n        type: 'GET_ERRORS',\n        payload: err.response\n      });\n      dispatch({\n        type: 'LOGIN_FAIL'\n      });\n    });\n}\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: 'LOGOUT_SUCCESS'\n  };\n};\n\n// Set up local storage for tokens\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem('token');\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n\n// Modal Actions\nexport const openModal = () => {\n  return {\n    type: 'OPEN_MODAL'\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: 'CLOSE_MODAL'\n  };\n};\n\n// Logout User\nexport const clearErrors = () => {\n  return {\n    type: 'CLEAR_ERRORS'\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../actions/authActions';\nimport { loginUser } from '../actions/authActions';\nimport { openModal } from '../actions/authActions';\nimport { closeModal } from '../actions/authActions';\nimport { clearErrors } from '../actions/authActions';\nimport { Button, Modal, Input, Menu, Dimmer, Loader } from 'semantic-ui-react';\n\nconst Isemail = require('isemail');\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    activeItem: 'Log In',\n    header: 'Log In to Color Pic',\n    button: 'Log In',\n    verifyPassword: '',\n    email: '',\n    userNamePlaceHolder: '',\n    passWordPlaceHolder:'',\n    description:'',\n    errorStatusPassword: false,\n    errorMsgPassword:'',\n    errorStatusEmail: false,\n    errorMsgEmail:''\n   }\n\n  showLogin = size => () => {\n    this.setState({\n      activeItem: 'Log In',\n      header: 'Log In to Color Pic',\n      button: 'Log In',\n      userNamePlaceHolder:'Demo Email: demo@demo.com',\n      passWordPlaceHolder:'Demo Password: demo',\n      description: ''\n    })\n    this.props.openModal();\n    this.props.clearErrors();\n  }\n\n  showSignup = size => () => {\n    this.setState({\n      activeItem: 'Sign Up',\n      header: 'Join Color Pic',\n      button: 'Sign Up',\n      userNamePlaceHolder: 'Register new user',\n      passWordPlaceHolder:'Password',\n      description:'Register to access more features'\n    })\n    this.props.openModal();\n    this.props.clearErrors();\n  }\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: ''\n    });\n    this.props.closeModal();\n    this.props.clearErrors();\n  }\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Log In to Color Pic',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder:'Demo Email: demo@demo.com',\n      passWordPlaceHolder:'Demo Password: demo',\n      description:''\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  }\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: 'Join Color Pic Today',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      email: '',\n      userNamePlaceHolder: 'Register New User',\n      passWordPlaceHolder:'Password',\n      description:'Register to access more features'\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  }\n\n  // clear all error messages\n  resetDefaults() {\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: '',\n      errorMsgPassword: ''\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (this.state.email === '' && this.state.password === '' && this.state.verifyPassword === '' ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail:'Email cannot be empty',\n        errorMsgPassword:'Passwords cannot be empty',\n      });\n      return\n    }\n\n    // If email is empty\n    if (this.state.email === '') {\n      this.setState({\n        errorMsgEmail:'Email cannot be empty',\n        errorStatusEmail: true\n      });\n      return\n    }\n\n    // If either password is empty on Sign Up\n    if (this.state.activeItem === 'Sign Up' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Password cannot be empty',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If Login Password is empty\n    if (this.state.activeItem === 'Log In' && this.state.password === '') {\n      this.setState({\n        errorMsgPassword:'Please enter password',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // If passwords do not match show error message\n    if (this.state.activeItem === 'Sign Up' && this.state.password !== this.state.verifyPassword) {\n      this.setState({\n        errorMsgPassword:'Passwords do not match',\n        errorStatusPassword: true\n      });\n      return\n    }\n\n    // Validate Email\n    if(this.state.activeItem === 'Sign Up' && Isemail.validate(this.state.email) === false) {\n      this.setState({\n        errorStatusEmail: 'error',\n        errorMsgEmail:'Not a valid email',\n      });\n      return\n    }\n\n    // If Sign Up and No errors statuses\n    if(this.state.activeItem === 'Sign Up') {\n      this.props.registerUser(this.state.email, this.state.password);\n    }\n\n    // If Log In and No errors statuses\n    if(this.state.activeItem === 'Log In') {\n      this.props.loginUser(this.state.email, this.state.password);\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if(this.state.activeItem === 'Sign Up') {\n      return(\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, 'verifyPassword')}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return(\n        <Button\n          color=\"blue\"\n          onClick={this.showSignup()}\n          style={{ marginLeft: '0.5em', marginRight: '1rem' }}\n        >\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.isLoading === true) {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const {\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      passWordPlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail,\n    } = this.state\n\n    return (\n      <div>\n        <Button color=\"blue\" onClick={this.showLogin()}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal size='tiny' open={this.props.modal} onClose={this.close} closeIcon>\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name='Log In'\n              active={activeItem === 'Log In'}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name='Sign Up'\n              active={activeItem === 'Sign Up'}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <p>{description}</p>\n              <p style={{color: 'red'}}>{this.props.errorMessage}</p>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, 'email')}\n                error={errorStatusEmail}\n              />\n              <p style={{\"color\": \"red\"}}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder={passWordPlaceHolder}\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, 'password')}\n                error={errorStatusPassword}\n              />\n              <p style={{color: 'red'}}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    errorMessage: state.errors.message,\n    modal: state.auth.modal,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect( mapStateToProps, {\n  registerUser,\n  loginUser,\n  openModal,\n  closeModal,\n  clearErrors\n})(LoginModal);\n","import axios from 'axios';\nimport { tokenConfig } from './authActions';\n\nconst callAPI = (email, dispatch) => {\n  // Data Loading\n  dispatch({ type: 'COLORS_LOADING' });\n\n  axios.get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: 'GET_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Get user color palettes\nexport const getColors = (email) => dispatch => {\n  callAPI(email, dispatch);\n}\n\n// Add color palettes\nexport const newColorPalette = (colorSet) => dispatch => {\n  axios.post('/api/colors', colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'ADD_COLORS',\n        payload: res.data\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\n  axios.put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'UPDATE_COLORS',\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error)\n    })\n    .then(() => { callAPI(email, dispatch) })\n}\n\n// Delete user color palettes\nexport const deleteColorPalette = (id) => dispatch => {\n  axios.delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: 'DELETE_COLORS',\n        payload: id\n      })\n    )\n    .catch(error =>\n      console.log(error)\n    );\n}\n\n// Clear Colors\nexport const clearColors = () => {\n  return {\n    type: 'CLEAR_PALETTE_COLORS'\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { logoutUser } from '../actions/authActions';\nimport { clearColors } from '../actions/MyPaletteAPI';\nimport './css/logout.css';\n\nclass Logout extends Component {\n  componentDidMount() {\n    // If token expired log out user\n    if (this.props.email === undefined) {\n      this.props.logoutUser();\n    }\n  }\n\n  logout(event) {\n    this.props.logoutUser();\n    this.props.clearColors();\n  }\n\n  render() {\n    return(\n      <div>\n        <p className=\"username\">\n          Welcome! {this.props.email}\n        </p>\n        <Link to=\"/\">\n          <Button\n            color=\"blue\"\n            className=\"logout-btn\"\n            onClick={event => this.logout(event)}\n          >\n            Log Out\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.auth.user.email\n  };\n}\n\nexport default connect(mapStateToProps, { logoutUser, clearColors })(Logout);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from 'semantic-ui-react';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesMenuItemRender() {\n    if (this.props.Authenticated === true) {\n      return(\n        <Menu.Item as={Link} to='/MyPallettes'>My Palettes</Menu.Item>\n      );\n    }\n  }\n\n  sideBarStyles() {\n    if (this.props.Authenticated === true) {\n      return({ minHeight: 122, padding: '1em 0em' });\n    }\n    else {\n      return({ minHeight: 82, padding: '0em 0em' })\n    }\n  }\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to='/'>Color Pic</Menu.Item>\n          <Menu.Item as={Link} to='/Generate'>Generate</Menu.Item>\n          {this.myPalettesMenuItemRender()}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={this.sideBarStyles()}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                  {this.loginRender()}\n                </Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(MobileContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginModal from './LoginModal';\nimport Logout from './Logout';\nimport { logoutUser } from '../actions/authActions';\nimport {\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react'\n\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => {\n    this.setState({ fixed: false });\n  }\n  showFixedMenu = () => {\n    this.setState({ fixed: true });\n  }\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return(\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          <h5>My Palettes</h5>\n        </Menu.Item>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.isLoading === true) {\n      return(\n        <Dimmer active inverted>\n          <Loader size=\"small\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment className=\"menu-container\" textAlign=\"center\" vertical>\n            <Menu className=\"menu-small\" size=\"small\" borderless>\n              <Menu.Item as={Link} to=\"/\">\n                <h5>Color Pic</h5>\n              </Menu.Item>\n              <Menu.Item as={Link} to=\"/Generate\">\n                <h5>Generate</h5>\n              </Menu.Item>\n              {this.myPalettesRender()}\n              <Menu.Item position=\"right\">\n                {this.loginRender()}\n                {this.renderLoader()}\n              </Menu.Item>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, { logoutUser })(DesktopContainer);\n","import React from 'react';\nimport MobileContainer from './MobileContainer';\nimport DesktopContainer from './DesktopContainer';\nimport './css/headerMenu.css';\n\nconst HeaderMenu = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nexport default HeaderMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/landingPage.css';\nimport { Grid, Image, Segment, Header, Button } from 'semantic-ui-react';\n\nconst LandingPageExample = () => {\n  return(\n    <div className=\"dark-landing\">\n      <Grid columns={1} verticalAlign='middle' className=\"grid-size\">\n        <Grid.Column width={16} textAlign='center'>\n          <Segment className=\"dark-landing\">\n            <Header as=\"h1\" className=\"landing-header\">\n              Fast and Efficient color palettes generator\n            </Header>\n            <p className=\"text-style\">\n              Create, edit, and save schemes\n            </p>\n            <Link to=\"/Generate\">\n              <Button color=\"blue\" className=\"landing-btn\">\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LandingPageExample;\n","import React from 'react';\nimport { Icon, Grid } from 'semantic-ui-react';\n\nconst LandingIcons = () => {\n  return(\n    <Grid columns={3} style={{ margin: '4em 0em' }}>\n       <Grid.Row>\n         <Grid.Column textAlign='center'>\n           <Icon name=\"images\" size='huge'/>\n           <h3>Capture colors from Images</h3>\n         </Grid.Column>\n         <Grid.Column textAlign='center'>\n           <Icon name=\"adjust\" size='huge'/>\n           <h3>Adjust colors and refine palette</h3>\n         </Grid.Column>\n         <Grid.Column textAlign='center'>\n           <Icon name=\"save\" size='huge'/>\n           <h3>Save palettes for future reference</h3>\n         </Grid.Column>\n       </Grid.Row>\n     </Grid>\n  );\n}\n\nexport default LandingIcons;\n","import React from 'react';\nimport FujiExample from '../images/FujiExample.jpg';\nimport DabinExample from '../images/DabinExample.jpg';\nimport CameraExample from '../images/CameraExample.jpg';\nimport BladeRunnerExample from '../images/BladeRunnerExample.jpg';\nimport { Grid, Image} from 'semantic-ui-react';\n\nconst renderOneColorSet = (set) => {\n  let colorSet = set.map((color, index) =>\n  <div className=\"color-square-container\" key={color+index}>\n    <div className=\"color-square\" style={{ backgroundColor: color }} />\n  </div>\n  );\n  return colorSet;\n}\n\nconst LandingPageExampleSets = () => {\n  const exampleSets = [\n    { FujiExample: [ '#ECE3E0', '#252C32', '#6A707E', '#53262E', '#B81F34'] },\n    { DabinExample: [ '#684C56', '#EDDFD0', '#87AC95', '#AA8489', '#884B86'] },\n    { CameraExample: [ '#26221A', '#3D464F', '#96BBDC', '#74AACB', '#867D80'] },\n    { BladeRunnerExample: [ '#804C27', '#F7AC49', '#CD6622', '#7A2717', '#2C2022'] }\n  ];\n  \n  return(\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <Image src={FujiExample} />\n          {renderOneColorSet(exampleSets[0].FujiExample)}\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Image src={DabinExample} />\n          {renderOneColorSet(exampleSets[1].DabinExample)}\n        </Grid.Column>\n         </Grid.Row>\n         <Grid.Row>\n         <Grid.Column width={8}>\n           <Image src={CameraExample} />\n           {renderOneColorSet(exampleSets[2].CameraExample)}\n         </Grid.Column>\n         <Grid.Column width={8}>\n           <Image src={BladeRunnerExample} />\n           {renderOneColorSet(exampleSets[3].BladeRunnerExample)}\n         </Grid.Column>\n       </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default LandingPageExampleSets;\n","import React from 'react';\nimport { Header, Grid } from 'semantic-ui-react';\nimport './css/landingPage.css';\n\nconst HowItWorks = () => {\n  return(\n    <Grid verticalAlign='middle' centered>\n      <Grid.Row className=\"explanation-container\">\n        <Grid.Column >\n          <Header as='h2' textAlign='center'>\n            How it Works\n          </Header>\n          <p className=\"explanation-text\">\n            The Color Pic application uses image recognition from\n            <a href=\"https://www.clarifai.com/models/color-image-recognition-model-eeed0b6733a644cea07cf4c60f87ebb7\" target=\"_blank\" rel=\"noopener noreferrer\">Clarifai</a> to predict what the dominant colors are in a given picture.\n            The colors are then sent to <a href=\"http://colormind.io/blog/extracting-colors-from-photos-and-video/\" target=\"_blank\" rel=\"noopener noreferrer\">Colormind</a> to generate a suggested color palette, it searches for colors that work well together.\n            This works in a semi-random way, so hit regenerate to see a different color set each time.\n          </p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default HowItWorks;\n","import React from 'react';\nimport { Container, Grid, Icon } from 'semantic-ui-react';\nimport LandingPageExample from './LandingPageExample';\nimport LandingIcons from './LandingIcons';\nimport LandingPageExampleSets from './LandingPageExampleSets';\nimport HowItWorks from './HowItWorks';\nimport './css/landingPage.css';\n\nconst LandingPage = () => {\n  return(\n    <div>\n      <div className=\"dark-landing\">\n        <Container>\n          <LandingPageExample />\n        </Container>\n      </div>\n      <Container>\n        <LandingIcons />\n        <LandingPageExampleSets />\n        <HowItWorks />\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Icon } from 'semantic-ui-react';\nimport { deleteColorPalette } from '../actions/MyPaletteAPI';\nimport './css/confirmDeleteModal.css'\n\nclass ConfirmDelete extends Component {\n  state = { open: false };\n\n  show = () => {\n    this.setState({ open: true });\n  }\n\n  handleConfirm = () => {\n    // Item also removed via state\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.setState({ open: false });\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  }\n\n  render() {\n    return (\n      <div className=\"confirm-delete-modal icon-div\">\n        <Icon\n          className=\"\"\n          size='large'\n          onClick={this.show}\n          name=\"trash alternate\"\n        />\n        <Confirm\n          open={this.state.open}\n          content={`Are you sure you want to delete ${this.props.title} palette?`}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n          size=\"small\"\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteColorPalette\n})(ConfirmDelete);\n","const Clarifai = require('clarifai');\nconst app = new Clarifai.App({apiKey: 'bd8644854b19417dacdfa3adba21aab1'});\n//Convert Hex to RGB functions\nfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)};\nfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)};\nfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)};\nfunction cutHex(h) {return (h.charAt(0)===\"#\") ? h.substring(1,7):h};\n// Convert RGB to Hex functions\nfunction rgbToHex(R,G,B) {return \"#\"+toHex(R)+toHex(G)+toHex(B)};\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n};\n\n// Califai API Call\nexport const analyzeImage = (url) => dispatch => {\n  // Show loading screen\n  dispatch({ type: 'CLARIFAI_REQUEST_WAITING' });\n\n  app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n  .then(res => {\n    const hexColors = [];\n    // Create new array of hexcolors from response data\n    res.outputs[0].data.colors.map(color => {\n      return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n    });\n    // send hexcolor data as data query to back end\n    fetch('/api/colormind?colors=' + hexColors)\n      .then(res => res.json())\n      .then(res => {\n        let RGBtoHexData = [];\n        let colorMindResponse = res;\n        // create new array from response data with color palette and default alpha = 1\n        for (let i = 0; i < colorMindResponse.length; i++) {\n          RGBtoHexData.push({\n            hexColor: rgbToHex(colorMindResponse[i][0], colorMindResponse[i][1], colorMindResponse[i][2]),\n            alpha: 1\n          });\n        }\n        dispatch({\n          type: 'ANALYZE_IMAGE',\n          payload: RGBtoHexData,\n          status: 'recieved',\n          error: false,\n          open: false,\n          loader: 'hide'\n        });\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: 'ANALYZE_IMAGE_ERROR',\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: 'hide'\n    });\n  })\n};\n\n// image modal Actions\nexport const openImgModal = () => {\n  return ({\n    type: 'OPEN_IMAGE_MODAL'\n  });\n}\n\nexport const closeImgModal = () => {\n  return ({\n    type: 'CLOSE_IMAGE_MODAL',\n  });\n}\n\nexport const newImgSubmit = () => {\n  return ({\n    type: 'NEW_IMAGE_SUBMIT'\n  });\n}\n\nexport const showModalLoader = () => {\n  return ({\n    type: 'CLARIFAI_REQUEST_WAITING'\n  });\n}\n\nexport const clearImgSubmit = () => {\n  return ({\n    type: 'CLEAR_IMAGE_SUBMIT'\n  });\n}\n\nexport const sendErrorStatus = () => {\n  return ({\n    type: 'SEND_ERROR'\n  });\n}\n\nexport const clearErrorStatus = () => {\n  return ({\n    type: 'CLEAR_ERROR'\n  });\n}\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: 'SEND_COLOR_INFO',\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  })\n}\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_RECIEVED',\n    status: ''\n  })\n}\n\n\nexport const sendPositionInfo = (position) => dispatch => {\n  dispatch({\n    type: 'SEND_POSITION_INFO',\n    position: position\n  })\n}\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_POSITION_INFO',\n    position: 0\n  })\n}\n\nexport const sendSelectedColor = (color) => dispatch => {\n  dispatch({\n    type: 'SELECTED_COLOR',\n    selectedColor: color\n  })\n}\n\nexport const sendAlphaInfo = (alpha) => dispatch => {\n  dispatch({\n    type: 'SEND_ALPHA_INFO',\n    alpha: alpha\n  })\n}\n\nexport const updateHexColor = (newColorSet) => dispatch => {\n  dispatch({\n    type: 'UPDATE_HEX_COLOR',\n    newColorSet: newColorSet\n  })\n}\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: 'MAIN_IMAGE',\n    url: url\n  };\n}\n\nexport const addImageSelection = url => {\n  return {\n    type: 'ADD_URL',\n    url: url\n  };\n}\n\nexport const deleteURL = (url) => dispatch => {\n  dispatch({\n    type: 'DELETE_URL',\n    url: url\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render(){\n    const { hexInput, R, G, B, alpha } = this.props\n\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={hexInput}\n         onChange={event => this.props.hexColorOnChange(event)}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(EditModalColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ChromePicker } from 'react-color';\nimport { Button, Modal, Icon, Input, Grid, Segment } from 'semantic-ui-react';\nimport { updateColorPalette } from '../actions/MyPaletteAPI';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { clearPosition } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport EditModalColorInfo from './EditModalColorInfo';\nimport './css/editModal.css';\n\nclass EditModal extends Component {\n  state = {\n    open: false,\n    title: '',\n    selectedSet: [],\n    hexInput:''\n  };\n\n  handleTitleInput(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({ hexInput: color });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = (color) => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    })\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker-edit\"\n        style={{ marginRight: 4 + 'em' }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: 'pointer'\n          }}\n        />\n        <div\n          style={this.renderCarot(index)}\n          className=\"carot-container\"\n        >\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n     );\n     return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if(newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === '#') {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = (dimmer) => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      open: true,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(this.props.data[position].colors[0].hexColor, this.props.data[position].colors[0].alpha);\n  }\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      open: false,\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    this.props.clearPosition();\n    // reset info from DB\n    this.props.getColors(this.props.email);\n  }\n\n  handleConfirm = () => {\n    this.setState({\n      open: false,\n    });\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(this.props.objectID, UpdateData, this.props.email);\n    this.props.clearPosition();\n  }\n\n  render() {\n    const { open, dimmer, title, hexInput, selectedSet } = this.state\n\n    return (\n      <div className=\"edit-modal icon-div\">\n        <Icon\n          size='large'\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <Modal\n          open={open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n        >\n          <Modal.Header>Edit Palette</Modal.Header>\n          <Modal.Content>\n            <Input\n              className=\"modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder='Edit Palette Name...'\n            />\n            <div>\n              {this.renderOneColorSet()}\n            </div>\n            <Grid textAlign='center' stackable columns={2}>\n              <Grid.Column width={10}>\n                <Segment>\n                  {this.renderColorPicker()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>Cancel</Button>\n            <Button onClick={this.handleConfirm} color='blue'>\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateColorPalette,\n  sendPositionInfo,\n  sendSelectedColor,\n  sendColorInfo,\n  sendAlphaInfo,\n  clearPosition,\n  getColors\n})(EditModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getColors } from '../actions/MyPaletteAPI';\nimport { logoutUser } from '../actions/authActions';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport EditModal from './EditModal';\nimport { Header, Container, Grid, Image} from 'semantic-ui-react';\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors(this.props.email);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (this.props.email !== prevProps.email && this.props.email !== undefined) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  // Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map(color =>\n      <div className=\"color-square-container\" key={color.hexColor}>\n        <div\n          className=\"color-square\"\n          style={{ backgroundColor: color.hexColor, opacity: color.alpha }}\n        />\n      </div>\n     );\n     return (\n       <div style={{ margin: '0px auto' }}>\n         {colorSet}\n       </div>\n     );\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) =>\n        <Grid.Column\n          key={palette._id}\n        >\n          <div className=\"palette-container\">\n            <h5>\n              {palette.title}\n              <ConfirmDeleteModal\n                title={palette.title}\n                objectID={palette._id}\n              />\n              <EditModal\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </h5>\n            <Image\n              src={palette.url}\n              centered\n            />\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      );\n      return Palettes;\n    }\n  }\n\n  render() {\n    return(\n      <Container>\n        <Header as=\"h1\" className=\"palette-header\">\n          My Color Palettes\n        </Header>\n        <Grid stackable columns={3}>\n          {this.renderPalettes()}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    loading: state.myPalettes.loading,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect (mapStateToProps, { getColors, logoutUser })(MyPallettes);\n","import React from 'react';\nimport { Icon, Container } from 'semantic-ui-react';\nimport './css/footer.css';\n\nconst Footer = ({url}) => {\n  return(\n    <Container className=\"footer\">\n      <h5 className=\"footer-header\">\n        © 2019\n      </h5>\n      <div className=\"icon-container\">\n        <a\n          className=\"icon-div\"\n          href=\"https://github.com/fulin426/Color-Pic\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"github\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"https://www.linkedin.com/in/fu-lin-liu/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"linkedin square\" size='big' />\n        </a>\n        <a\n          className=\"icon-div\"\n          href=\"mailto:fulin426@gmail.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon className=\"icon-div\" name=\"mail\" size='big' />\n        </a>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendPositionInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { Dimmer, Loader, Grid, Icon } from 'semantic-ui-react';\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      this.props.analyzeImage(this.props.url);\n    }\n  };\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url ) {\n      this.props.analyzeImage(this.props.url);\n    };\n\n    if (this.props.status === 'recieved') {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  };\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: 'pointer'\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: 'black'\n      };\n    } else {\n      return {\n        color: 'white'\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >= 1 ) {\n      const ColorsList = this.props.colors.map((color,index) =>\n        <div\n          key={color.hexColor}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() => this.handleOnClickSquare(color.hexColor, index, color.alpha)}\n          />\n          <div\n            style={this.renderCarot(index)}\n            className=\"carot-container\"\n          >\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      );\n      return(ColorsList);\n    }\n  }\n\n  // Load a initial height before colors are recieved\n  renderLoaderHeight() {\n    if(this.props.colors.length === 0) {\n      return({ height: 60});\n    }\n  }\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return (\n        <div style={this.renderLoaderHeight()}>\n          <Dimmer active inverted>\n            <Loader size='large' inverted>Loading Colors</Loader>\n          </Dimmer>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n    <Grid.Column width={16}>\n      {this.colorsRender()}\n      {this.renderLoader()}\n    </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token,\n    loader: state.colors.loader\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  sendColorInfo,\n  sendPositionInfo,\n  sendSelectedColor,\n  clearRecieved,\n})(ColorsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Image } from 'semantic-ui-react';\n\nconst ImageMain = ({url}) => {\n  return(\n    <Grid.Column mobile={16} computer={13}>\n      <Image\n        className=\"sample-img\"\n        src={url}\n        alt=\"analyze main\"\n      />\n    </Grid.Column>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n};\n\nexport default connect(mapStateToProps)(ImageMain);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { changeMainImage } from '../actions';\nimport { addImageSelection } from '../actions';\nimport { closeImgModal } from '../actions';\nimport { openImgModal } from '../actions';\nimport { newImgSubmit } from '../actions';\nimport { clearImgSubmit } from '../actions';\nimport { clearErrorStatus } from '../actions';\nimport { showModalLoader } from '../actions';\nimport { sendErrorStatus } from '../actions';\nimport { Button, Modal, Input, Dimmer, Loader, Icon } from 'semantic-ui-react'\n\nclass AddImgModal extends Component {\n  state = { input: '' };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === '') {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (this.checkForDuplicateUrls() === 'no duplicates' && this.state.input !== '') {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  };\n\n  checkForDuplicateUrls() {\n    for(let i=0; i < this.props.exampleImages.length; i++) {\n      if(this.state.input === this.props.exampleImages[i]) {\n        return 'duplicate exists';\n      }\n    }\n    return 'no duplicates';\n  }\n\n  componentDidUpdate() {\n    if (this.props.error === false && this.props.status === 'recieved' && this.props.image === 'new') {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: ''});\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n         />\n      );\n    } else if (this.props.error !== false) {\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n         />\n      );\n    }\n    else {\n      //everything else render normal input\n      return(\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n         />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === '') {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return(\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color='blue'\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.props.error === true && this.state.input !== '' && this.checkForDuplicateUrls() === 'no duplicates') {\n      return(\n        <p> Please check URL and try again </p>\n      );\n    }\n    if (this.checkForDuplicateUrls() === 'duplicate exists') {\n      this.props.sendErrorStatus();\n      return(\n        <p> Image URL already exists. Please try a different one</p>\n      );\n    }\n  }\n\n  renderLoader() {\n    if(this.props.loader === 'show') {\n      return(\n        <Dimmer active inverted>\n          <Loader size='big' inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: '' });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  }\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state\n      return (\n        <div>\n          <Button onClick={this.closeConfigShow(false, true)} icon>Try your own image</Button>\n          <Modal\n            open={this.props.open}\n            closeOnEscape={closeOnEscape}\n            closeOnDimmerClick={closeOnDimmerClick}\n            onClose={this.close}\n            closeIcon\n          >\n            <Modal.Content className=\"add-image-modal\">\n              <h3>Try your own image</h3>\n              <form onSubmit={event => this.submitURL(event)}>\n                {this.renderURLinput()}\n                {this.renderSubmitButton()}\n              </form>\n              {this.renderErrorMessage()}\n              {this.renderLoader()}\n            </Modal.Content>\n          </Modal>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  changeMainImage,\n  addImageSelection,\n  closeImgModal,\n  openImgModal,\n  newImgSubmit,\n  clearImgSubmit,\n  clearErrorStatus,\n  showModalLoader,\n  sendErrorStatus\n})(AddImgModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeMainImage } from '../actions';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { deleteURL } from '../actions';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport  ImageModal from './ImageModal';\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: '3px solid #0000CC',\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages () {\n    return (\n      this.props.exampleUrl.map(url =>\n        <div\n          className=\"image-wrapper\"\n          key={url}\n        >\n          <img\n            className=\"image-selection\"\n            src={url}\n            alt=\"selection\"\n            style={this.renderBorder(url)}\n            onClick={() => this.handleClick(url)}\n          />\n          <div\n            onClick={() => this.props.deleteURL(url)}\n            className=\"delete-img\">\n            <Icon name=\"remove circle\" />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  render() {\n    return(\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">\n            {this.renderImages()}\n          </div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeMainImage,\n  clearRecieved,\n  clearPosition,\n  deleteURL,\n  analyzeImage\n})(ImageSelection);\n","import React, { Component } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { updateHexColor } from '../actions';\nimport { sendColorInfo } from '../actions';\nimport { sendAlphaInfo } from '../actions';\nimport { sendSelectedColor } from '../actions';\nimport { Grid } from 'semantic-ui-react'\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  }\n\n  renderColorPicker() {\n    if(this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: '100%',\n              marginRight: 4 + 'em'\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return(\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateHexColor,\n  sendColorInfo,\n  sendSelectedColor,\n  sendAlphaInfo })(ColorPicker);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ColorInfo extends Component {\n  handleChange(event) {\n    //empty now to reduce errors in console.log\n    console.log(event.target.value);\n  }\n  render(){\n    return (\n      <div className=\"color-info\">\n       <h5>Hex</h5>\n       <input\n         className=\"hex-info-input\"\n         value={this.props.hexColor}\n       />\n       <p className=\"info-text\">R</p>\n       <p className=\"info-text\">G</p>\n       <p className=\"info-text\">B</p>\n       <p className=\"info-text\">a</p>\n       <div>\n         <input\n           className=\"info-input\"\n           value={this.props.R}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.G}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.B}\n           onChange={event => this.handleChange(event)}\n         />\n         <input\n           className=\"info-input\"\n           value={this.props.alpha}\n           onChange={event => this.handleChange(event)}\n         />\n       </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(mapStateToProps, { })(ColorInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { analyzeImage } from '../actions';\nimport { clearRecieved } from '../actions';\nimport { clearPosition } from '../actions';\nimport { Button, Icon } from 'semantic-ui-react';\n\nclass Regenerate extends Component {\n  handleClick = url => () => {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.analyzeImage(url);\n  }\n\n  render() {\n    return (\n      <Button\n        className=\"regen-btn\"\n        onClick={this.handleClick(this.props.url)}\n      >\n        <Icon name='redo' />  Regenerate\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  analyzeImage,\n  clearRecieved,\n  clearPosition,\n})(Regenerate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newColorPalette } from '../actions/MyPaletteAPI';\nimport { Button, Modal, Input, Header, Icon } from 'semantic-ui-react'\n\nclass SavePalette extends Component {\n  state = {\n    input: '',\n    open: false,\n    error: false,\n    placeHolder: 'New Palette Name...'\n  };\n\n  handleInput(event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false,\n      placeHolder: 'New Palette Name...'\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n  this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n  }\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: '',\n      open: false,\n      error: false\n    });\n  }\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette({\n      url: this.props.url,\n      email: this.props.email,\n      title: this.state.input,\n      colors: this.props.colors\n    }, this.props.token)\n    this.close();\n  }\n\n  setError() {\n    if (this.state.input === '') {\n      this.setState({\n        error: true,\n        placeHolder: 'Title Required...'\n      });\n    }\n\n    if (this.state.input.length >= 40) {\n      this.setState({\n        error: true,\n        placeHolder: 'Over Max Characters Allowed'\n      });\n    }\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === '' || this.state.input.length >= 40) {\n      return (\n        <Button onClick={() => this.setError()}\n          color='blue'\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return(\n        <Link to=\"/MyPallettes\">\n          <Button\n            color='blue'\n            style={{ marginLeft: .75 + 'em'}}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color,index) =>\n      <div key={color.hexColor} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    );\n    return(ColorsList);\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick,\n      error,\n      placeHolder\n    } = this.state\n\n    return (\n      <div>\n        <Button\n          onClick={this.closeConfigShow(true, false)}\n          className=\"save-pallette\"\n          icon\n        >\n          <Icon name='save' />  Save Palette\n        </Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">Save Palette</Header>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={this.state.input}\n              onChange={event => this.handleInput(event)}\n              placeholder={placeHolder}\n              error={error}\n            />\n            <div className=\"colors-render\">\n              {this.colorsRender()}\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, { newColorPalette })(SavePalette);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ColorsList from './ColorsList';\nimport ImageMain from './ImageMain';\nimport ImageSelection from './ImageSelection';\nimport ColorPicker from './ColorPicker';\nimport ColorInfo from './ColorInfo';\nimport Regenerate from './Regenerate';\nimport SavePalette from './SavePalette';\nimport {\n  Container,\n  Grid,\n  Popup,\n  Button,\n  Icon,\n  Header\n} from 'semantic-ui-react';\n\nclass HomePage extends Component {\n  savepaletteRender() {\n    if(this.props.Authenticated === true) {\n      return <SavePalette />;\n    } else {\n      return (\n        <Popup\n          trigger={<Button className=\"save-pallette\"><Icon name='save' />  Save Palette</Button>}\n          content=\"Log In required for this feature\"\n          position='bottom right'\n          size='small'\n          basic\n        />\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Container textAlign='center'>\n          <Header as=\"h1\" className=\"generate-header\">\n            Choose a picture and analyze\n          </Header>\n          <Grid celled>\n            <Grid.Row>\n              <ImageSelection />\n              <ImageMain />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorsList />\n            </Grid.Row>\n          </Grid>\n          <Grid celled>\n            <Grid.Row>\n              <ColorPicker />\n              <Grid.Column mobile={16} tablet={7} computer={6}>\n                <ColorInfo />\n                <div className=\"regen-save-buttons\">\n                  <Regenerate />\n                  {this.savepaletteRender()}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, { })(HomePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { loadUser } from '../actions/authActions';\nimport HeaderMenu from './HeaderMenu';\nimport LandingPage from './LandingPage';\nimport MyPallettes from './MyPallettes';\nimport Footer from './Footer'\nimport Generate from './Generate';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    // Only load user if there is a token in local storage\n    if(localStorage.getItem('token') !== null) {\n      this.props.loadUser();\n    }\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { loadUser })(App);\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {\n        ...state,\n        loader: 'show'\n      };\n    case 'CLEAR_RECIEVED':\n      return {\n        ...state,\n        status: action.status\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: 'new'\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: ''\n      };\n    case 'SEND_ERROR':\n      return {\n        ...state,\n        error: true\n      }\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: false\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {\n        ...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {\n        ...state,\n        open: true,\n        error: false\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {\n        ...state,\n        open: false,\n        error: false,\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\n  exampleImages: [\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/DabinExample.jpg',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n     return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n     return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n       return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: '',\n  DeleteColor: '',\n  UpdateColor: '',\n  loading: false\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_COLORS':\n      return {\n        ...state,\n        Data: action.payload,\n        loading: false\n      };\n     case 'ADD_COLORS':\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n      case 'UPDATE_COLORS':\n        return {\n          ...state,\n          UpdateColor: `${action.payload} is the new update`\n        };\n      case 'DELETE_COLORS':\n        return {\n          ...state,\n          Data: state.Data.filter(item => item._id !== action.payload),\n          DeleteColor: `${action.payload} was Deleted`\n        };\n      case 'COLORS_LOADING':\n        return {\n          ...state,\n          loading: true\n        };\n      case 'CLEAR_PALETTE_COLORS':\n        return {\n          ...state,\n          Data: [],\n          AddColor: '',\n          DeleteColor: '',\n          UpdateColor: '',\n        };\n    default:\n     return state;\n  }\n}\n","const initialState = {\n  message: '',\n  status: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        message: action.payload.data,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: '',\n        status: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: '',\n  modal: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        modal: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: '',\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}